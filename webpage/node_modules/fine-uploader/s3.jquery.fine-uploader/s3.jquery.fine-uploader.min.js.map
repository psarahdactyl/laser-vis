{"version":3,"sources":["?","../client/js/jquery-plugin.js","../client/js/jquery-dnd.js","../client/js/s3/jquery-plugin.js","../client/js/util.js","../client/js/export.js","../client/js/error/error.js","../client/js/version.js","../client/js/features.js","../client/js/promise.js","../client/js/blob-proxy.js","../client/js/button.js","../client/js/upload-data.js","../client/js/uploader.basic.api.js","../client/js/uploader.basic.js","../client/js/ajax.requester.js","../client/js/upload-handler/upload.handler.js","../client/js/upload-handler/upload.handler.controller.js","../client/js/window.receive.message.js","../client/js/upload-handler/form.upload.handler.js","../client/js/upload-handler/xhr.upload.handler.js","../client/js/deletefile.ajax.requester.js","../client/js/image-support/megapix-image.js","../client/js/image-support/image.js","../client/js/image-support/exif.js","../client/js/identify.js","../client/js/image-support/validation.image.js","../client/js/session.js","../client/js/session.ajax.requester.js","../client/js/image-support/scaler.js","../client/js/third-party/ExifRestorer.js","../client/js/total-progress.js","../client/js/paste.js","../client/js/form-support.js","../client/js/third-party/crypto-js/core.js","../client/js/third-party/crypto-js/enc-base64.js","../client/js/third-party/crypto-js/hmac.js","../client/js/third-party/crypto-js/sha1.js","../client/js/third-party/crypto-js/sha256.js","../client/js/third-party/crypto-js/lib-typedarrays.js","../client/js/s3/util.js","../client/js/non-traditional-common/uploader.basic.api.js","../client/js/s3/uploader.basic.js","../client/js/s3/request-signer.js","../client/js/uploadsuccess.ajax.requester.js","../client/js/s3/multipart.initiate.ajax.requester.js","../client/js/s3/multipart.complete.ajax.requester.js","../client/js/s3/multipart.abort.ajax.requester.js","../client/js/s3/s3.xhr.upload.handler.js","../client/js/s3/s3.form.upload.handler.js","../client/js/dnd.js","../client/js/uploader.api.js","../client/js/uploader.js","../client/js/templating.js","../client/js/ui.handler.events.js","../client/js/ui.handler.click.filebuttons.js","../client/js/ui.handler.click.filename.js","../client/js/ui.handler.focusin.filenameinput.js","../client/js/ui.handler.focus.filenameinput.js","../client/js/ui.handler.edit.filename.js","../client/js/s3/uploader.js"],"names":["global","$","init","options","xformedOpts","transformVariables","newUploaderInstance","getNewUploaderInstance","uploader","addCallbacks","$el","params","uploaderType","pluginOption","namespace","charAt","toUpperCase","slice","toLowerCase","qq","FineUploader","dataStore","key","val","data","undefined","instanceToStore","option","optionVal","transformedOpts","callbacks","each","_options","prop","nonJqueryCallback","name","callbackEventTarget","exec","substring","nonJqueryCallbackRetVal","jqueryEventCallbackRetVal","originalArgs","Array","prototype","call","arguments","transformedArgs","idx","arg","push","maybeWrapInJquery","apply","this","triggerHandler","error","log","message","source","dest","xformed","arrayVals","element","inArray","pluginOptions","isPlainObject","isArray","arrayVal","arrayObjDest","merge","isValidCommand","command","type","match","delegateCommand","retVal","xformedArgs","origArgs","transformedVal","nodeType","cloneNode","fn","fineUploader","optionsOrCommand","self","selfArgs","retVals","index","el","length","jQuery","dropZoneElements","dnd","DragAndDrop","func","$callbackEl","args","fineUploaderDnd","fineUploaderS3","endpointType","hide","style","display","attach","addEventListener","attachEvent","detach","removeEventListener","detachEvent","contains","descendant","compareDocumentPosition","insertBefore","elementB","parentNode","remove","removeChild","css","styles","Error","opacity","filter","Math","round","extend","hasClass","considerParent","re","RegExp","test","className","addClass","removeClass","replace","getByClass","first","candidates","result","querySelector","querySelectorAll","getElementsByTagName","getFirstByClass","children","child","firstChild","nextSibling","setText","text","innerText","textContent","clearText","hasAttribute","attrName","attrVal","getAttribute","canvasToBlob","canvas","mime","quality","dataUriToBlob","toDataURL","dataUri","arrayBuffer","byteString","intArray","mimeString","createBlob","BlobBuilder","window","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","blobBuilder","append","getBlob","Blob","split","indexOf","atob","decodeURI","ArrayBuffer","Uint8Array","character","charCodeAt","level","console","isObject","variable","Object","toString","isFunction","value","buffer","constructor","isItemList","maybeItemList","isNodeList","maybeNodeList","item","namedItem","isString","maybeString","trimStr","string","String","trim","format","str","newStr","nextIdxToReplace","isFile","maybeFile","File","isFileList","maybeFileList","FileList","isFileOrInput","maybeFileOrInput","isInput","maybeInput","notFile","evaluateType","normalizedType","HTMLInputElement","tagName","isBlob","maybeBlob","isXhrUploadSupported","input","document","createElement","multiple","FormData","createXhrInstance","upload","XMLHttpRequest","ActiveXObject","isFolderDropSupported","dataTransfer","items","webkitGetAsEntry","isFileChunkingSupported","androidStock","webkitSlice","mozSlice","sliceBlob","fileOrBlob","start","end","arrayBufferToHex","bytesAsHex","bytes","byt","byteAsHexStr","readBlobToHex","blob","startOffset","initialBlob","fileReader","FileReader","promise","Promise","onload","success","onerror","failure","readAsArrayBuffer","second","extendNested","override","target","sourceFn","super_","srcPropName","srcPropVal","arr","elt","from","len","hasOwnProperty","getUniqueId","c","r","random","ie","navigator","userAgent","ie7","ie8","ie10","ie11","edge","safari","vendor","chrome","opera","firefox","windows","platform","android","ios6","ios","ios7","ios8","ios800","iosChrome","iosSafari","iosSafariWebView","preventDefault","e","returnValue","toElement","div","html","innerHTML","iterableItem","callback","keyOrIndex","Storage","getItem","bind","oldFunc","context","newArgs","concat","obj2url","obj","temp","prefixDone","uristrings","prefix","add","nextObj","i","nextTemp","encodeURIComponent","join","obj2FormData","formData","arrayKeyName","obj2Inputs","form","setAttribute","appendChild","parseJson","json","JSON","parse","eval","getExtension","filename","extIdx","lastIndexOf","substr","getFilename","blobOrFileInput","fileName","DisposeSupport","disposers","dispose","disposer","shift","addDisposer","disposeFunction","define","amd","module","exports","version","supportedFeatures","testSupportsFileInputElement","tempInput","supported","disabled","ex","isChrome21OrHigher","isChrome14OrHigher","isCrossOriginXhrSupported","withCredentials","isXdrSupported","XDomainRequest","isCrossOriginAjaxSupported","isFolderSelectionSupported","webkitdirectory","isLocalStorageSupported","localStorage","setItem","isDragAndDropSupported","span","supportsUploading","supportsUploadingBlobs","supportsFileDrop","supportsAjaxFileUploading","supportsFolderDrop","supportsChunking","supportsResume","supportsUploadViaPaste","supportsUploadCors","supportsDeleteFileXdr","supportsDeleteFileCorsXhr","supportsDeleteFileCors","supportsFolderSelection","supportsImagePreviews","supportsUploadProgress","postMessage","ajaxUploading","blobUploading","canDetermineSize","chunking","deleteFileCors","deleteFileCorsXdr","deleteFileCorsXhr","dialogElement","HTMLDialogElement","fileDrop","folderDrop","folderSelection","imagePreviews","imageValidation","itemSizeValidation","pause","progressBar","resume","scaling","tiffPreviews","unlimitedScaledImageSize","uploading","uploadCors","uploadCustomHeaders","uploadNonMultipart","uploadViaPaste","isGenericPromise","maybePromise","then","successArgs","failureArgs","successCallbacks","failureCallbacks","doneCallbacks","state","onSuccess","onFailure","done","BlobProxy","referenceBlob","onCreate","create","UploadButton","o","createInput","BUTTON_ID_ATTR_NAME","buttonId","title","setMultiple","folders","acceptFiles","position","right","top","fontFamily","fontSize","margin","padding","cursor","height","disposeSupport","onChange","hoverClass","focusClass","ios8BrowserCrashWorkaround","overflow","direction","getInput","getButtonId","isMultiple","optInput","removeAttribute","setAcceptFiles","reset","UploadData","uploaderProxy","getDataByIds","idOrIds","entries","id","getDataByUuids","uuids","uuid","byUuid","getDataByStatus","status","statusResults","statuses","statusEnum","statusResultIndexes","byStatus","dataIndex","byProxyGroupId","byBatchId","addFile","spec","SUBMITTING","originalName","size","batchId","proxyGroupId","onBeforeStatusChange","onStatusChange","retrieve","optionalFilter","setStatus","newStatus","oldStatus","byStatusOldStatusIndex","splice","uuidChanged","newUuid","oldUuid","updateName","newName","updateSize","newSize","setParentId","targetId","parentId","getIdsInProxyGroup","getIdsInBatch","SUBMITTED","REJECTED","QUEUED","CANCELED","PAUSED","UPLOADING","UPLOAD_RETRYING","UPLOAD_SUCCESSFUL","UPLOAD_FAILED","DELETE_FAILED","DELETING","DELETED","basePublicApi","addBlobs","blobDataOrArray","endpoint","addFiles","addInitialFiles","cannedFileList","cannedFile","_addCannedFile","_maybeHandleIos8SafariWorkaround","_storedIds","_currentBatchId","processBlob","_handleNewFile","blobs","defaultName","verifiedFiles","processBlobData","blobData","processCanvas","processCanvasData","canvasData","normalizedQuality","processFileOrInput","fileOrInput","files","file","normalizeData","fileContainer","_prepareItemsForUpload","cancel","_handler","cancelAll","storedIdsCopy","storedFileId","clearStoredFiles","continueUpload","uploadData","_uploadData","enabled","getName","_uploadFile","deleteFile","_onSubmitDelete","doesExist","fileOrBlobId","isValid","drawThumbnail","fileId","imgOrCanvas","maxSize","fromServer","customResizeFunction","fileOrUrl","promiseToReturn","_imageGenerator","_thumbnailUrls","scale","getFile","container","generate","modifiedContainer","reason","getButton","_getButton","_buttonIdsForFileIds","getEndpoint","_endpointStore","get","getInProgress","getParentId","uploadDataEntry","getUploads","getResumableFilesData","getSize","getNetUploads","_netUploaded","getRemainingAllowedItems","allowedItems","_currentItemLimit","_netUploadedOrQueued","getUuid","debug","pauseUpload","removeFileRef","expunge","_autoRetries","_retryTimeouts","_preventRetries","_buttons","button","_paramsStore","_pasteHandler","session","refreshOnReset","_refreshSessionData","_succeededSinceLastAllComplete","_failedSinceLastAllComplete","_totalProgress","retry","_manualRetry","scaleImage","specs","Scaler","setCustomHeaders","headers","_customHeadersStore","set","setDeleteFileCustomHeaders","_deleteFileCustomHeadersStore","setDeleteFileEndpoint","_deleteFileEndpointStore","setDeleteFileParams","_deleteFileParamsStore","setEndpoint","setForm","elementOrId","_updateFormSupportAndParams","setItemLimit","newItemLimit","setName","setParams","setUuid","_onDeleteComplete","errorMessage","uploadStoredFiles","_itemError","_uploadStoredFiles","basePrivateApi","sessionData","deleteFileEndpoint","deleteFileParams","thumbnailUrl","_annotateWithButtonId","associatedInput","qqButtonId","_getButtonId","_batchError","onError","_createDeleteHandler","DeleteFileAjaxRequester","method","maxConnections","uuidParamName","request","uuidName","customHeaders","paramsStore","endpointStore","cors","onDelete","_onDelete","onDeleteComplete","xhrOrXdr","isError","_createPasteHandler","PasteSupport","targetElement","paste","pasteReceived","_handleCheckedCallback","onPasteReceived","_handlePasteSuccess","identifier","_createStore","initialValue","_readOnlyValues_","store","catchall","perIdReadOnlyValues","readOnlyValues","copy","orig","getReadOnlyValues","includeReadOnlyValues","existing","values","addReadOnly","_createUploadDataTracker","_onUploadStatusChange","_maybeAllComplete","setTimeout","_createUploadButton","allowMultiple","workarounds","iosEmptyVideos","_isAllowedExtension","allowedExtensions","accept","validation","classes","buttonFocus","buttonHover","ios8BrowserCrash","inputName","_onInputChange","fileInputTitle","_disposeSupport","_createUploadHandler","additionalOptions","lastOnProgress","preventRetryParam","preventRetryResponseProperty","onProgress","loaded","total","_onProgress","onComplete","xhr","_onComplete","onCancel","cancelFinalizationEffort","_onCancel","onUploadPrep","_onUploadPrep","onUpload","_onUpload","onUploadChunk","chunkData","_onUploadChunk","onUploadChunkSuccess","_onUploadChunkSuccess","onResume","onAutoRetry","responseJSON","_onAutoRetry","onUuidChanged","setSize","_setSize","getDataByUuid","isQueued","UploadHandlerController","_fileOrBlobRejected","_formatSize","sizeSymbols","max","toFixed","_generateExtraButtonSpecs","_extraButtonSpecs","extraButtons","extraButtonOptionEntry","extraButtonSpec","_initExtraButton","extraButtonsSpec","_defaultButtonId","buttonOrFileInputOrFile","inputs","fileInput","fileBlobOrInput","_getNotFinished","_getValidationBase","_getValidationDescriptor","fileWrapper","_getValidationDescriptors","fileWrappers","fileDescriptors","_handleCameraAccess","camera","optionRoot","details","callbackRetVal","successParam","newFileWrapperList","actualFile","handler","_customNewFileHandler","_handleNewFileGeneric","addFileToHandler","_trackButton","fileList","extSuppliedName","extension","_handleDeleteSuccess","_handleDeleteFailed","_initFormSupportAndParams","_formSupport","FormSupport","attachedToForm","getFormInputsAsObject","autoUpload","newAutoUpload","newEndpoint","_isDeletePossible","expected","allowXdr","allowed","valid","allowedExt","extRegex","code","maybeNameOrNames","replacement","extensionsForMessage","placeholderMatch","messages","names","validationBase","allowedExtension","formatFileName","sizeLimit","minSizeLimit","placeholder","_onBeforeManualRetry","notFinished","_onAllComplete","ios8SafariUploads","alert","unsupportedBrowserIos8Safari","_maybeParseAndSendUploadError","response","errorReason","defaultResponseError","_maybeProcessNextItemAfterOnValidateCallback","validItem","stopOnFirstInvalidFile","validationDescriptor","onValidate","_onValidateCallbackSuccess","_onValidateCallbackFailure","successful","failed","onAllComplete","_shouldAutoRetry","retryWaitPeriod","autoAttemptDelay","_onBeforeAutoRetry","itemLimit","onManualRetry","clearTimeout","storedItemIndex","fileIndex","onIndividualProgress","_onSubmit","_onSubmitCallbackSuccess","_onSubmitted","onSubmitted","_storeForLater","onSuccessCallback","additionalMandatedParams","adjustedOnSuccessCallback","onSubmitDelete","_deleteHandler","sendDelete","_onTotalProgress","onTotalProgress","enableAuto","_onValidateBatchCallbackFailure","_onValidateBatchCallbackSuccess","validationDescriptors","proposedNetFilesUploadedOrQueued","tooManyItemsError","nextIndex","_validateFileOrBlobData","_upload","onValidateBatch","_preventLeaveInProgress","event","onLeave","Session","_session","addFileRecord","refresh","_sessionRequestComplete","onSessionRequestComplete","onNewSize","maxAutoAttempts","formElementOrId","onSubmit","idToUpload","stillSubmitting","validityChecker","allowEmpty","ImageValidation","validate","image","errorCode","_wrapCallbacks","safeCallback","errorMsg","exception","callbackName","callbackFunc","FineUploaderBasic","disableCancelForFormUploads","filenameParam","forceMultipart","paramsInBody","totalFileSizeName","maxHeight","maxWidth","minHeight","minWidth","maybeXhr","maybeXhrOrXdr","attemptNumber","fileOrBlobData","typeError","sizeError","minSizeError","emptyError","noFilesError","maxHeightImageError","maxWidthImageError","minHeightImageError","minWidthImageError","retryFailTooManyItems","concurrent","mandatory","paramNames","partIndex","partByteOffset","chunkSize","totalFileSize","totalParts","partSize","recordsExpireIn","resuming","fileOrBlobName","sendCredentials","interceptSubmit","customResizer","sendOriginal","orient","defaultType","defaultQuality","failureText","includeExif","sizes","ImageGenerator","_scaler","handleNewFile","TotalProgress","entry","AjaxRequester","isSimpleMethod","containsNonSimpleHeaders","containsNonSimple","header","isXdr","getCorsAjaxTransport","ontimeout","onprogress","getXhrOrXdr","suppliedXhr","requestData","dequeue","nextId","queue","sendRequest","xdrError","isResponseSuccessful","getParams","onDemandParams","additionalParams","mandatedParams","optXhr","url","payload","onSend","createUrl","additionalQueryParams","getXdrLoadHandler","getXdrErrorHandler","onreadystatechange","getXhrReadyStateChangeHandler","registerForUploadProgress","open","setHeaders","send","shouldParamsBeInQueryString","contentType","stringify","addToPath","readyState","lengthComputable","onDemandHeaders","additionalHeaders","allHeaders","acceptHeader","setRequestHeader","allowXRequestedWithAndCacheControl","responseCode","successfulResponseCodes","prepareToSend","validMethods","DELETE","PATCH","POST","PUT","GET","initTransport","path","cacheBuster","withPath","appendToPath","withParams","withQueryParams","_additionalQueryParams_","withHeaders","withPayload","thePayload","withCacheBuster","qqtimestamp","Date","getTime","canceled","UploadHandler","proxy","fileState","fileItem","getThirdPartyFileId","_getFileState","_setThirdPartyFileId","thirdPartyFileId","_wasCanceled","preventRetryResponse","controller","chunkingPossible","concurrentChunkingPossible","chunked","chunkIdx","_getChunkData","attemptingResume","chunkProgress","_getChunkDataForCallback","finalize","finalizeChunks","normaizedResponse","normalizeResponse","_maybeDeletePersistedChunkData","cleanup","handleFailure","clearCachedChunk","inProgressIdx","responseToReport","inProgress","remaining","unshift","ignoreFailure","keys","_getXhrs","ckid","ckXhr","abort","_cancelled","moveInProgressToRemaining","connectionManager","free","hasMoreParts","nextPart","nextIdx","_getTotalChunks","reevaluateChunking","sendNext","inProgressChunks","available","uploadChunk","inProgressChunkIdx","_maybePersistChunkedState","clearXhr","_open","_openChunks","_waiting","openChunkEntriesCount","openChunksCount","openChunkIndexes","dontAllowNext","allowNext","waitingIndex","connectionsIndex","getProxyOrBlob","getWaitingOrConnected","waitingOrConnected","chunks","parseInt","isUsingConnection","pop","openChunksEntry","simple","uploadFile","maybeNewUuid","_clearXhrs","getProxy","initHandler","traditional","_removeExpiredChunkingRecords","isDeferredEligibleForUpload","maybeDefer","generatedBlob","updateBlob","maybeSendDeferredFiles","errorResponse","idsInGroup","uploadedThisId","idInGroup","now","originalResponse","_shouldChunkThisFile","blobToUpload","cancelRetVal","isProxied","isResumable","WindowReceiveMessage","callbackWrapperDetachers","receiveMessage","onMessageCallbackWrapper","stopReceivingMessages","detacher","FormUploadHandler","expungeFile","detachLoadEvents","isCors","postMessageCallbackTimers","corsMessageReceiver","iframe","getElementById","_getIframeName","getFileIdForIframeName","iframeName","initIframeForUpload","body","registerPostMessageCallback","onloadCallbacks","onloadCallback","_parseJsonResponse","_detachLoadEvent","formHandlerInstanceId","_attachLoadEvent","responseDescriptor","contentDocument","_createIframe","_initFormForUpload","targetName","innerHtmlOrMessage","XhrUploadHandler","xhrId","ajaxRequester","_getAjaxRequester","chunkFiles","resumeEnabled","blobOrProxy","_initTempState","_maybePrepareForResume","cachedChunks","tempState","xhrs","ajaxRequesters","responseParser","lastChunkIdx","_getXhr","resumableFilesData","_iterateResumeRecords","notResumable","optInProgress","optRemaining","reverse","paused","totalChunks","parts","newBlob","chunkId","_createXhr","optChunkIdx","_registerXhr","chunkIndex","fileSize","startBytes","endBytes","part","count","startByte","endByte","_getLocalStorageId","_getMimeType","_getPersistableData","ceil","_markNotResumable","localStorageId","removeItem","persistedData","lastUpdated","_registerProgressHandler","progressCalculator","totalSuccessfullyLoadedForFile","loadedForRequest","totalForRequest","estActualChunkLoaded","totalLoadedForFile","chunkLoaded","optAjaxRequester","xhrsId","expirationDays","expirationDate","setDate","getDate","getMandatedParams","_method","requester","detectSubsampling","img","ctx","iw","naturalWidth","ih","naturalHeight","width","getContext","drawImage","getImageData","detectVerticalSquash","alpha","ratio","sy","ey","py","renderImageToDataURL","doSquash","renderImageToCanvas","maybeCalculateDownsampledDimensions","origHeight","origWidth","newHeight","sqrt","newWidth","modifiedDimensions","save","resize","renderImageToCanvasWithCustomResizer","imageHeight","imageWidth","orientation","targetHeight","targetWidth","transformCoordinate","tmpCtx","sx","dx","d","tmpCanvas","vertSquashRatio","dw","dh","dy","clearRect","restore","qqImageRendered","resizeInfo","sourceCanvas","sourceCanvasContext","targetCanvas","translate","rotate","PI","MegaPixImage","srcImage","errorCallback","Image","URL","createObjectURL","webkitURL","src","listeners","imageLoadListeners","render","opt","imgWidth","imgHeight","optionsKey","optionsValue","oldTargetSrc","onrender","isImg","isCanvas","isImgCorsSupported","crossOrigin","isCanvasSupported","determineMimeOfFileName","nameWithPath","pathSegments","isCrossOrigin","targetProtocol","targetHostname","targetPort","targetAnchor","href","protocol","port","hostname","location","registerImgLoadListeners","registerCanvasDrawImageListener","registerThumbnailRenderedListener","registered","draw","drawPreview","Identify","megapixErrorHandler","isPreviewable","dummyExif","exif","Exif","mpImg","Orientation","failureMsg","drawOnCanvasOrImgFromUrl","canvasOrImg","tempImg","tempImgRender","drawOnImgFromUrlWithCssScaling","drawFromUrl","fileBlobOrUrl","_testing","parseLittleEndian","hex","pow","seekToApp1","offset","theOffset","thePromise","segmentLength","getApp1Offset","isLittleEndian","app1Start","getDirEntryCount","littleEndian","getIfd","dirEntries","getDirEntries","ifdHex","getTagValues","tagsToFind","TAG_IDS","vals","tagValHex","tagValLength","idHex","tagsToFindIdx","TAG_INFO","274","parser","onParseFailure","app1Offset","dirEntryCount","tagValues","isIdentifiable","magicBytes","questionableBytes","identifiable","magicBytesEntries","magicBytesArrayEntry","previewable","isPreviewableSync","PREVIEWABLE_MIME_TYPES","fileMime","isRecognizedImage","image/jpeg","image/gif","image/png","image/bmp","image/tiff","hasNonZeroLimits","limits","atLeastOne","limit","getWidthHeight","sizeDetermination","getFailingLimit","dimensions","failingLimit","limitName","limitValue","limitMatcher","dimensionPropName","actualValue","validationEffort","isJsonResponseValid","handleFileItems","fileItems","someItemsIgnored","err","refreshEffort","refreshCompleteCallback","requesterOptions","SessionAjaxRequester","queryServer","responseText","includeOriginal","failedToScaleText","_getSortedSizes","getFileRecords","originalFileUuid","originalFileName","originalBlobOrBlobData","records","originalBlob","sizeRecord","outputType","_determineOutputType","requestedType","refType","_getName","_generateScaledImage","failedText","api","scaledIds","originalId","record","blobSize","scaledId","qqparentuuid","qqparentsize","param","scalingEffort","scalingOptions","scaler","referenceType","scaledVersionProperties","startOfExt","versionType","scaledName","scaledExt","nameAppendage","sort","a","b","sourceFile","imageGenerator","scaledImageDataUri","signalSuccess","_insertExifHeader","scaledImageDataUriWithExif","originalImage","reader","insertionEffort","originalImageDataUri","ExifRestorer","readAsDataURL","_dataUriToBlob","_createBlob","KEY_STR","encode64","chr1","chr2","enc1","enc2","enc3","output","chr3","enc4","isNaN","origFileBase64","resizedFileBase64","rawImage","decode64","segments","slice2Segments","exifManipulation","exifArray","getExifArray","newImageArray","insertExif","seg","x","imageData","buf","separatePoint","mae","ato","array","rawImageArray","head","endPoint","perFileProgress","totalLoaded","totalSize","lastLoadedSent","lastTotalSent","callbackProxy","noRetryableFiles","retryable","none","failedId","updateTotalProgress","onNew","newLoaded","newTotal","oldLoaded","oldTotal","isImage","registerPasteHandler","detachPasteHandler","clipboardData","getAsFile","unregisterPasteHandler","startUpload","determineNewEndpoint","formEl","validateForm","nativeSubmit","checkValidity","maybeUploadOnSubmit","submit","determineFormEl","_form2Obj","notIrrelevantType","irrelevantTypes","radioOrCheckbox","ignoreValue","checked","selectValue","select","selected","elements","CryptoJS","C","C_lib","lib","Base","F","overrides","subtype","mixIn","$super","instance","properties","propertyName","clone","WordArray","words","sigBytes","encoder","Hex","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","clamp","thatByte","nBytes","C_enc","enc","hexChars","bite","hexStr","hexStrLength","Latin1","latin1Chars","fromCharCode","latin1Str","latin1StrLength","Utf8","decodeURIComponent","escape","utf8Str","unescape","BufferedBlockAlgorithm","_data","_nDataBytes","_append","_process","doFlush","dataWords","dataSigBytes","blockSize","blockSizeBytes","nBlocksReady","_minBufferSize","nWordsReady","nBytesReady","min","_doProcessBlock","processedWords","C_algo","Hasher","cfg","_doReset","update","messageUpdate","_doFinalize","_createHelper","hasher","_createHmacHelper","HMAC","algo","Base64","map","_map","base64Chars","byte1","byte2","byte3","triplet","j","paddingChar","base64Str","base64StrLength","paddingIndex","bits1","bits2","_hasher","hasherBlockSize","hasherBlockSizeBytes","oKey","_oKey","iKey","_iKey","oKeyWords","iKeyWords","innerHash","W","SHA1","_hash","M","H","n","t","nBitsTotal","nBitsLeft","floor","HmacSHA1","K","isPrime","sqrtN","factor","getFractionalBits","nPrime","SHA256","f","g","h","gamma0x","gamma0","gamma1x","gamma1","ch","maj","sigma0","sigma1","t1","t2","HmacSHA256","superInit","typedArray","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","byteOffset","byteLength","typedArrayByteLength","s3","util","ALGORITHM_PARAM_NAME","AWS_PARAM_PREFIX","CREDENTIAL_PARAM_NAME","DATE_PARAM_NAME","REDUCED_REDUNDANCY_PARAM_NAME","REDUCED_REDUNDANCY_PARAM_VALUE","SERVER_SIDE_ENCRYPTION_PARAM_NAME","SERVER_SIDE_ENCRYPTION_PARAM_VALUE","SESSION_TOKEN_PARAM_NAME","V4_ALGORITHM_PARAM_VALUE","V4_SIGNATURE_PARAM_NAME","CASE_SENSITIVE_PARAM_NAMES","UNSIGNABLE_REST_HEADER_NAMES","UNPREFIXED_PARAM_NAMES","getBucket","bucket","patterns","pattern","_getPrefixedParamName","getPolicy","policy","conditions","date","drift","clockDrift","accessKey","acl","expectedStatus","sessionToken","successRedirectUrl","getSuccessRedirectAbsoluteUrl","minFileSize","maxFileSize","reducedRedundancy","region","serverSideEncryption","signatureVersion","expiration","getPolicyExpirationDate","Content-Type","success_action_status","success_action_redirect","getV4CredentialsString","getV4PolicyDate","awsParamName","enforceSizeLimits","refreshPolicyCredentials","newSessionToken","sessionTokenFound","oldCondIdx","oldCondObj","oldCondName","oldCondVal","generateAwsParams","signPolicyCallback","policyJson","awsParams","customParams","AWSAccessKeyId","policyAndSignature","updatedAccessKey","updatedSessionToken","signature","minSize","adjustedMinSize","adjustedMaxSize","adjustedDate","getPolicyDate","getCredentialsDate","getUTCFullYear","getUTCMonth","getUTCDate","_minutesToAdd_","pad","minutesToAdd","setMinutes","getMinutes","toISOString","number","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","parseIframeResponse","doc","contentWindow","queryString","search","etag","targetAnchorContainer","encodeQueryStringParam","percentEncoded","uriEscape","uriEscapePath","nonTraditionalBasePublicApi","setUploadSuccessParams","_uploadSuccessParamsStore","setUploadSuccessEndpoint","_uploadSuccessEndpointStore","nonTraditionalBasePrivateApi","submitSuccessRequest","successAjaxRequester","onCompleteArgs","successEndpoint","successCustomHeaders","uploadSuccess","successMethod","uploadSuccessParams","fileParams","onSuccessFromServer","successRequestResult","_failedSuccessRequestCallbacks","onFailureFromServer","UploadSuccessAjaxRequester","_getEndpointSpecificParams","sendSuccessRequest","successRequestCallback","objectProperties","host","credentials","secretKey","iframeSupport","localBlankPagePath","onCredentialsExpired","setCredentials","_currentCredentials","_aclStore","_cannedKeys","_cannedBuckets","_buckets","_hosts","getKey","ignoreEmpty","setAcl","aclStore","_determineBucket","getHost","_determineHost","getKeyName","_determineKeyName","maxSizeLimit","oldParams","modifiedParams","paramName","credentialsProvider","onExpired","updateCredentials","_determineObjectPropertyValue","property","maybe","keynameLogic","onGetKeynameFailure","onGetKeynameSuccess","keyname","keynameToUse","_handleKeynameFunction","keynameFunc","successCallback","failureCallback","getResponseHeader","s3Key","s3Bucket","RequestSigner","handleSignatureReceived","responseJson","pendingSignatureData","pendingSignatures","signatureConstructor","invalid","expectingPolicy","generateHeaders","getStringToSignArtifacts","requestInfo","endOfUrl","signatureSpec","toSign","headerNames","headersStr","generateStringToSign","contentMd5","headerIndexesToRemove","headerName","headerIdx","hashedContent","v2","getStringToSign","v4","signedHeaders","getSignedHeaders","hashed","toSignRaw","raw","thisSignatureRequester","REQUEST_TYPE","MULTIPART_ABORT","uploadId","MULTIPART_INITIATE","MULTIPART_COMPLETE","MULTIPART_UPLOAD","partNum","getEncodedHashedPayload","content","Host","determineSignatureClientSide","toBeSigned","signatureEffort","updatedHeaders","getHeaders","getToSign","signatureArtifacts","signApiRequest","stringToSign","signPolicy","Authorization","getRequestDate","getEndOfUrl","headersWordArray","headersHmacSha1","policyStr","policyWordArray","base64Policy","policyHmacSha1","policyHmacSha1Base64","getCanonicalQueryString","endOfUri","encodedQueryParams","encodedQueryParamNames","queryStrings","queryParamIdx","canonicalQueryString","nameAndVal","paramVal","forEach","encodedQueryParamName","getCanonicalRequest","getCanonicalUri","onloadend","DONE","getScope","canonicalRequest","hashedRequest","scope","dateKey","dateRegionKey","dateRegionServiceKey","signingKey","headersPattern","matches","credentialPattern","credentialCondition","credential","condition","getSignature","queryParams","stringToSignRaw","constructStringToSign","artifacts","theHeaders","withUploadId","theUploadId","withContent","theContent","withContentType","theContentType","withPartNum","thePartNum","toUTCString","_artifacts_","handleSuccessResponse","parsedResponse","pendingRequests","successIndicator","failureIndicator","InitiateMultipartAjaxRequester","getSignatureAjaxRequester","getContentType","handleInitiateRequestComplete","uploadIdElements","messageElements","pendingInitiateRequests","domParser","DOMParser","responseDoc","parseFromString","CompleteMultipartAjaxRequester","handleCompleteRequestComplete","pendingCompleteRequests","bucketEls","keyEls","getCompleteRequestBody","etagEntries","implementation","createDocument","etagEntry","partEl","partNumEl","partNumTextEl","createTextNode","etagTextEl","etagEl","XMLSerializer","serializeToString","AbortMultipartAjaxRequester","handleAbortRequestComplete","awsErrorMsg","errorEls","onGetBucket","onGetHost","onGetKeyName","combine","etagMap","etags","requesters","completeMultipart","initHeaders","urlSafe","restSignature","put","domain","track","hasContentType","setup","uploadIdPromise","initiateMultipart","abortMultipart","policySignature","initParams","toSend","cachedBucket","cachedHost","shouldReset","keyName","encodedKey","parsedErrorProps","parseError","awsResponseXml","codeEls","messageEls","parsedDoc","errorDetails","existedInLocalStorage","isValidResponse","responseData","createForm","handleFinishedUpload","handleUpload","uploadDroppedFiles","uploadDropZone","filesAsArray","dropLog","dropDisabled","processingDroppedFilesComplete","getElement","traverseFileTree","parseEntryPromise","fullPath","indexOfNameInFullPath","qqPath","droppedFiles","fileError","isDirectory","getFilesInDirectory","entriesLeft","accumEntries","existingPromise","dirReader","createReader","readEntries","newEntries","handleDataTransfer","pendingFolderPromises","handleDataTransferPromise","processingDroppedFiles","allowMultipleItems","dropError","setupDropzone","dropArea","dropZone","UploadDropZone","HIDE_ZONES_EVENT_NAME","onEnter","dropActive","stopPropagation","onLeaveNotDescendants","onDrop","uploadDropZones","isFileDrag","dragEvent","fileDrag","types","leavingDocumentOut","y","setupDragDrop","dropZones","maybeHideDropZones","HTMLElement","setupExtraDropzone","removeDropzone","dzs","targetEl","errorSpecifics","dragoverShouldBeCanceled","disableDropOutside","dropOutsideDisabled","dropEffect","isValidFileDrag","effectTest","dt","isSafari","effectAllowed","includes","isOrSetDropDisabled","isDisabled","preventDrop","triggerHidezonesEvent","triggerUsingOldApi","hideZonesEvent","createEvent","initEvent","CustomEvent","dispatchEvent","attachEvents","effect","relatedTarget","elementFromPoint","clientX","clientY","uiPublicApi","_parent","_templating","addCacheToDom","clearFiles","addExtraDropzone","_dnd","removeExtraDropzone","getItemByFileId","isHiddenForever","getFileContainer","_setupDragAndDrop","_totalFilesInBatch","_filesInBatchAddedToUi","_setupClickAndEditEventHandlers","formattedFilename","updateFilename","uploadPaused","continued","uploadContinued","getId","fileContainerOrChildEl","getFileId","getDropTarget","qqDropTarget","uiPrivateApi","_removeFileItem","removeFile","_fileButtonsClickHandler","FileButtonsClickHandler","_bindFileButtonsClickEvent","_focusinEventSupported","_isEditFilenameEnabled","_filenameClickHandler","_bindFilenameClickEvent","_filenameInputFocusInHandler","_bindFilenameInputFocusInEvent","_filenameInputFocusHandler","_bindFilenameInputFocusEvent","dragAndDrop","extraDropzones","templating","defaultDropZone","getDropZone","showDropProcessing","hideDropProcessing","errorData","lvl","onDeleteFile","onRetry","onPause","onContinue","onGetName","isEditFilenamePossible","FilenameClickHandler","FilenameInputFocusHandler","_filenameEditHandler","onGetUploadStatus","onSetName","onEditingStatusChange","isEditing","qqInput","getEditInput","qqFileContainer","hideFilename","hideEditIcon","showFilename","showEditIcon","markFilenameEditable","hideRetry","setStatusText","_classes","retrying","hidePause","FilenameInputFocusInHandler","hideSpinner","resetTotalProgress","reportDirectoryPaths","qqpath","_addToList","addHandler","updateProgress","hideCancel","hideProgress","waitingForResponse","_displayFileSize","completeUpload","_markFileAsSuccessful","fail","showCancel","isRetryPossible","showRetry","_controlFailureTextDisplay","parentRetVal","newResult","showDeleteButton","_maybeUpdateThumbnail","showSpinner","allowPause","retryNumForDisplay","maxAuto","retryNote","_showCancelLink","showAutoRetryNote","autoRetryNote","resetProgress","_onSubmitDeleteSuccess","forceConfirm","_showDeleteConfirm","_sendDeleteRequest","deletingFailedText","hideDeleteButton","deletingStatusText","confirmMessage","deleteRequestArgs","showConfirm","canned","prependData","prependIndex","dontDisplay","hideScaled","prependFiles","disableCancel","_handledProxyGroup","_clearList","addFileToCache","updateThumbnail","thumbnails","generatePreview","fileSizeOnSubmit","loadedSize","sizeForDisplay","_formatProgress","uploadedSize","formatProgress","mode","responseProperty","failureReason","failedUploadTextDisplay","failUpload","enableTooltip","_showTooltip","showMessage","_setupPastePrompt","namePromptMessage","defaultVal","showPrompt","placeholders","waitUntilResponse","listElement","template","editable","tooManyFilesError","unsupportedBrowser","promptForName","maxCount","notAvailablePath","waitingPath","timeBetweenThumbs","hasDialog","showDialog","confirm","defaultValue","prompt","Templating","templateIdOrEl","containerEl","fileContainerEl","maxThumbs","waitUntilUpdate","thumbnailNotAvailable","waitingForThumbnail","renderFailure","isEditElementsExist","isRetryElementExist","templateDom","showThumbnails","serverScale","fileBatch","createDocumentFragment","isCancelDisabled","generatedThumbnails","thumbnailQueueMonitorRunning","thumbGenerationQueue","thumbnailMaxSize","selectorClasses","alertDialog","dialogCancelButton","confirmDialog","dialogMessage","dialogOkButton","promptDialog","drop","list","progressBarContainer","totalProgressBarContainer","totalProgressBar","spinner","continueButton","deleteButton","statusText","editFilenameInput","editNameIcon","dropText","dropProcessing","dropProcessingSpinner","thumbnail","previewGeneration","cachedThumbnailNotAvailableImg","cachedWaitingForThumbnailImg","cacheThumbnailPlaceholders","notAvailableUrl","waitingUrl","updatedImg","displayWaitingImg","waitingImgPlacement","maybeScalePlaceholderViaCss","show","generateNewPreview","getThumbnail","qqThumbnailId","maybeSetDisplayNotAvailableImg","generateNextQueuedPreview","queuedThumbRequest","processUpdateQueuedPreviewRequest","processNewQueuedPreviewRequest","getCancel","getTemplateEl","getContinue","getDialog","getDelete","getDropProcessing","getEditIcon","getPause","getProgress","getRetry","getSpinner","cssClass","previewing","notAvailableImgPlacement","parseAndGetTemplate","scriptEl","scriptHtml","fileListNode","tempTemplateEl","fileListEl","defaultButton","dropTextEl","uploaderEl","fileTemplate","prependFile","parentEl","beforeEl","optFileOrBlob","relatedThumbnailId","useCachedPreview","showWaitingImg","setProgressBarWidth","percent","bar","progressBarSelector","targetThumbnailId","cachedThumbnailId","targetThumbnail","cachedThumbnail","hideTotalProgress","cantRenderEl","prependInfo","hideForever","batch","thumb","fileEl","fileNameEl","waitingImg","currentNode","getFileList","filenameEl","isFileName","icon","isEditIcon","isEditInput","isCancel","allowContinueButton","isPause","isContinueButton","isDeleteButton","isRetry","textEl","dialog","messageEl","inputEl","cancelBtn","okBtn","closeHandler","cancelClickHandler","okClickHandler","close","showModal","UiEventHandler","s","protectedApi","eventType","srcElement","onHandled","attachTo","getFileIdFromItem","qqFileId","getDisposeSupport","examineEvent","buttonHandlers","buttonType","firstLetterCapButtonType","inheritedInternalApi","handleFilenameEdit","FilenameEditHandler","handleInputFocus","getFilenameSansExtension","filenameSansExt","getOriginalExtension","origName","handleNameUpdate","newFilenameInputEl","origExtension","registerInputBlurHandler","registerInputEnterKeyHandler","keyCode","which","focusInput","focus"],"mappings":"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","file":"s3.jquery.fine-uploader.min.js","sourcesContent":[null,"/*globals jQuery, qq*/\n(function($) {\n    \"use strict\";\n    var $el,\n        pluginOptions = [\"uploaderType\", \"endpointType\"];\n\n    function init(options) {\n        var xformedOpts = transformVariables(options || {}),\n            newUploaderInstance = getNewUploaderInstance(xformedOpts);\n\n        uploader(newUploaderInstance);\n        addCallbacks(xformedOpts, newUploaderInstance);\n\n        return $el;\n    }\n\n    function getNewUploaderInstance(params) {\n        var uploaderType = pluginOption(\"uploaderType\"),\n            namespace = pluginOption(\"endpointType\");\n\n        // If the integrator has defined a specific type of uploader to load, use that, otherwise assume `qq.FineUploader`\n        if (uploaderType) {\n            // We can determine the correct constructor function to invoke by combining \"FineUploader\"\n            // with the upper camel cased `uploaderType` value.\n            uploaderType = uploaderType.charAt(0).toUpperCase() + uploaderType.slice(1).toLowerCase();\n\n            if (namespace) {\n                return new qq[namespace][\"FineUploader\" + uploaderType](params);\n            }\n\n            return new qq[\"FineUploader\" + uploaderType](params);\n        }\n        else {\n            if (namespace) {\n                return new qq[namespace].FineUploader(params);\n            }\n\n            return new qq.FineUploader(params);\n        }\n    }\n\n    function dataStore(key, val) {\n        var data = $el.data(\"fineuploader\");\n\n        if (val) {\n            if (data === undefined) {\n                data = {};\n            }\n            data[key] = val;\n            $el.data(\"fineuploader\", data);\n        }\n        else {\n            if (data === undefined) {\n                return null;\n            }\n            return data[key];\n        }\n    }\n\n    //the underlying Fine Uploader instance is stored in jQuery's data stored, associated with the element\n    // tied to this instance of the plug-in\n    function uploader(instanceToStore) {\n        return dataStore(\"uploader\", instanceToStore);\n    }\n\n    function pluginOption(option, optionVal) {\n        return dataStore(option, optionVal);\n    }\n\n    // Implement all callbacks defined in Fine Uploader as functions that trigger appropriately names events and\n    // return the result of executing the bound handler back to Fine Uploader\n    function addCallbacks(transformedOpts, newUploaderInstance) {\n        var callbacks = transformedOpts.callbacks = {};\n\n        $.each(newUploaderInstance._options.callbacks, function(prop, nonJqueryCallback) {\n            var name, callbackEventTarget;\n\n            name = /^on(\\w+)/.exec(prop)[1];\n            name = name.substring(0, 1).toLowerCase() + name.substring(1);\n            callbackEventTarget = $el;\n\n            callbacks[prop] = function() {\n                var originalArgs = Array.prototype.slice.call(arguments),\n                    transformedArgs = [],\n                    nonJqueryCallbackRetVal, jqueryEventCallbackRetVal;\n\n                $.each(originalArgs, function(idx, arg) {\n                    transformedArgs.push(maybeWrapInJquery(arg));\n                });\n\n                nonJqueryCallbackRetVal = nonJqueryCallback.apply(this, originalArgs);\n\n                try {\n                    jqueryEventCallbackRetVal = callbackEventTarget.triggerHandler(name, transformedArgs);\n                }\n                catch (error) {\n                    qq.log(\"Caught error in Fine Uploader jQuery event handler: \" + error.message, \"error\");\n                }\n\n                /*jshint -W116*/\n                if (nonJqueryCallbackRetVal != null) {\n                    return nonJqueryCallbackRetVal;\n                }\n                return jqueryEventCallbackRetVal;\n            };\n        });\n\n        newUploaderInstance._options.callbacks = callbacks;\n    }\n\n    //transform jQuery objects into HTMLElements, and pass along all other option properties\n    function transformVariables(source, dest) {\n        var xformed, arrayVals;\n\n        if (dest === undefined) {\n            if (source.uploaderType !== \"basic\") {\n                xformed = { element: $el[0] };\n            }\n            else {\n                xformed = {};\n            }\n        }\n        else {\n            xformed = dest;\n        }\n\n        $.each(source, function(prop, val) {\n            if ($.inArray(prop, pluginOptions) >= 0) {\n                pluginOption(prop, val);\n            }\n            else if (val instanceof $) {\n                xformed[prop] = val[0];\n            }\n            else if ($.isPlainObject(val)) {\n                xformed[prop] = {};\n                transformVariables(val, xformed[prop]);\n            }\n            else if ($.isArray(val)) {\n                arrayVals = [];\n                $.each(val, function(idx, arrayVal) {\n                    var arrayObjDest = {};\n\n                    if (arrayVal instanceof $) {\n                        $.merge(arrayVals, arrayVal);\n                    }\n                    else if ($.isPlainObject(arrayVal)) {\n                        transformVariables(arrayVal, arrayObjDest);\n                        arrayVals.push(arrayObjDest);\n                    }\n                    else {\n                        arrayVals.push(arrayVal);\n                    }\n                });\n                xformed[prop] = arrayVals;\n            }\n            else {\n                xformed[prop] = val;\n            }\n        });\n\n        if (dest === undefined) {\n            return xformed;\n        }\n    }\n\n    function isValidCommand(command) {\n        return $.type(command) === \"string\" &&\n            !command.match(/^_/) && //enforce private methods convention\n            uploader()[command] !== undefined;\n    }\n\n    // Assuming we have already verified that this is a valid command, call the associated function in the underlying\n    // Fine Uploader instance (passing along the arguments from the caller) and return the result of the call back to the caller\n    function delegateCommand(command) {\n        var xformedArgs = [],\n            origArgs = Array.prototype.slice.call(arguments, 1),\n            retVal;\n\n        transformVariables(origArgs, xformedArgs);\n\n        retVal = uploader()[command].apply(uploader(), xformedArgs);\n\n        return maybeWrapInJquery(retVal);\n    }\n\n    // If the value is an `HTMLElement` or `HTMLDocument`, wrap it in a `jQuery` object\n    function maybeWrapInJquery(val) {\n        var transformedVal = val;\n\n        // If the command is returning an `HTMLElement` or `HTMLDocument`, wrap it in a `jQuery` object\n        /*jshint -W116*/\n        if (val != null && typeof val === \"object\" &&\n           (val.nodeType === 1 || val.nodeType === 9) && val.cloneNode) {\n\n            transformedVal = $(val);\n        }\n\n        return transformedVal;\n    }\n\n    $.fn.fineUploader = function(optionsOrCommand) {\n        var self = this, selfArgs = arguments, retVals = [];\n\n        this.each(function(index, el) {\n            $el = $(el);\n\n            if (uploader() && isValidCommand(optionsOrCommand)) {\n                retVals.push(delegateCommand.apply(self, selfArgs));\n\n                if (self.length === 1) {\n                    return false;\n                }\n            }\n            else if (typeof optionsOrCommand === \"object\" || !optionsOrCommand) {\n                init.apply(self, selfArgs);\n            }\n            else {\n                $.error(\"Method \" +  optionsOrCommand + \" does not exist on jQuery.fineUploader\");\n            }\n        });\n\n        if (retVals.length === 1) {\n            return retVals[0];\n        }\n        else if (retVals.length > 1) {\n            return retVals;\n        }\n\n        return this;\n    };\n\n}(jQuery));\n","/*globals jQuery, qq*/\n(function($) {\n    \"use strict\";\n    var rootDataKey = \"fineUploaderDnd\",\n        $el;\n\n    function init(options) {\n        if (!options) {\n            options = {};\n        }\n\n        options.dropZoneElements = [$el];\n        var xformedOpts = transformVariables(options);\n        addCallbacks(xformedOpts);\n        dnd(new qq.DragAndDrop(xformedOpts));\n\n        return $el;\n    }\n\n    function dataStore(key, val) {\n        var data = $el.data(rootDataKey);\n\n        if (val) {\n            if (data === undefined) {\n                data = {};\n            }\n            data[key] = val;\n            $el.data(rootDataKey, data);\n        }\n        else {\n            if (data === undefined) {\n                return null;\n            }\n            return data[key];\n        }\n    }\n\n    function dnd(instanceToStore) {\n        return dataStore(\"dndInstance\", instanceToStore);\n    }\n\n    function addCallbacks(transformedOpts) {\n        var callbacks = transformedOpts.callbacks = {};\n\n        $.each(new qq.DragAndDrop.callbacks(), function(prop, func) {\n            var name = prop,\n                $callbackEl;\n\n            $callbackEl = $el;\n\n            callbacks[prop] = function() {\n                var args = Array.prototype.slice.call(arguments),\n                    jqueryHandlerResult = $callbackEl.triggerHandler(name, args);\n\n                return jqueryHandlerResult;\n            };\n        });\n    }\n\n    //transform jQuery objects into HTMLElements, and pass along all other option properties\n    function transformVariables(source, dest) {\n        var xformed, arrayVals;\n\n        if (dest === undefined) {\n            xformed = {};\n        }\n        else {\n            xformed = dest;\n        }\n\n        $.each(source, function(prop, val) {\n            if (val instanceof $) {\n                xformed[prop] = val[0];\n            }\n            else if ($.isPlainObject(val)) {\n                xformed[prop] = {};\n                transformVariables(val, xformed[prop]);\n            }\n            else if ($.isArray(val)) {\n                arrayVals = [];\n                $.each(val, function(idx, arrayVal) {\n                    if (arrayVal instanceof $) {\n                        $.merge(arrayVals, arrayVal);\n                    }\n                    else {\n                        arrayVals.push(arrayVal);\n                    }\n                });\n                xformed[prop] = arrayVals;\n            }\n            else {\n                xformed[prop] = val;\n            }\n        });\n\n        if (dest === undefined) {\n            return xformed;\n        }\n    }\n\n    function isValidCommand(command) {\n        return $.type(command) === \"string\" &&\n            command === \"dispose\" &&\n            dnd()[command] !== undefined;\n    }\n\n    function delegateCommand(command) {\n        var xformedArgs = [], origArgs = Array.prototype.slice.call(arguments, 1);\n        transformVariables(origArgs, xformedArgs);\n        return dnd()[command].apply(dnd(), xformedArgs);\n    }\n\n    $.fn.fineUploaderDnd = function(optionsOrCommand) {\n        var self = this, selfArgs = arguments, retVals = [];\n\n        this.each(function(index, el) {\n            $el = $(el);\n\n            if (dnd() && isValidCommand(optionsOrCommand)) {\n                retVals.push(delegateCommand.apply(self, selfArgs));\n\n                if (self.length === 1) {\n                    return false;\n                }\n            }\n            else if (typeof optionsOrCommand === \"object\" || !optionsOrCommand) {\n                init.apply(self, selfArgs);\n            }\n            else {\n                $.error(\"Method \" +  optionsOrCommand + \" does not exist in Fine Uploader's DnD module.\");\n            }\n        });\n\n        if (retVals.length === 1) {\n            return retVals[0];\n        }\n        else if (retVals.length > 1) {\n            return retVals;\n        }\n\n        return this;\n    };\n\n}(jQuery));\n","/*globals jQuery*/\n/**\n * Simply an alias for the `fineUploader` plug-in wrapper, but hides the required `endpointType` option from the\n * integrator.  I thought it may be confusing to convey to the integrator that, when using Fine Uploader in S3 mode,\n * you need to specify an `endpointType` with a value of S3, and perhaps an `uploaderType` with a value of \"basic\" if\n * you want to use basic mode when uploading directly to S3 as well.  So, you can use this plug-in alias and not worry\n * about the `endpointType` option at all.\n */\n(function($) {\n    \"use strict\";\n\n    $.fn.fineUploaderS3 = function(optionsOrCommand) {\n        if (typeof optionsOrCommand === \"object\") {\n\n            // This option is used to tell the plug-in wrapper to instantiate the appropriate S3-namespace modules.\n            optionsOrCommand.endpointType = \"s3\";\n        }\n\n        return $.fn.fineUploader.apply(this, arguments);\n    };\n\n}(jQuery));\n","/*globals window, navigator, document, FormData, File, HTMLInputElement, XMLHttpRequest, Blob, Storage, ActiveXObject */\n/* jshint -W079 */\nvar qq = function(element) {\n    \"use strict\";\n\n    return {\n        hide: function() {\n            element.style.display = \"none\";\n            return this;\n        },\n\n        /** Returns the function which detaches attached event */\n        attach: function(type, fn) {\n            if (element.addEventListener) {\n                element.addEventListener(type, fn, false);\n            } else if (element.attachEvent) {\n                element.attachEvent(\"on\" + type, fn);\n            }\n            return function() {\n                qq(element).detach(type, fn);\n            };\n        },\n\n        detach: function(type, fn) {\n            if (element.removeEventListener) {\n                element.removeEventListener(type, fn, false);\n            } else if (element.attachEvent) {\n                element.detachEvent(\"on\" + type, fn);\n            }\n            return this;\n        },\n\n        contains: function(descendant) {\n            // The [W3C spec](http://www.w3.org/TR/domcore/#dom-node-contains)\n            // says a `null` (or ostensibly `undefined`) parameter\n            // passed into `Node.contains` should result in a false return value.\n            // IE7 throws an exception if the parameter is `undefined` though.\n            if (!descendant) {\n                return false;\n            }\n\n            // compareposition returns false in this case\n            if (element === descendant) {\n                return true;\n            }\n\n            if (element.contains) {\n                return element.contains(descendant);\n            } else {\n                /*jslint bitwise: true*/\n                return !!(descendant.compareDocumentPosition(element) & 8);\n            }\n        },\n\n        /**\n         * Insert this element before elementB.\n         */\n        insertBefore: function(elementB) {\n            elementB.parentNode.insertBefore(element, elementB);\n            return this;\n        },\n\n        remove: function() {\n            element.parentNode.removeChild(element);\n            return this;\n        },\n\n        /**\n         * Sets styles for an element.\n         * Fixes opacity in IE6-8.\n         */\n        css: function(styles) {\n            /*jshint eqnull: true*/\n            if (element.style == null) {\n                throw new qq.Error(\"Can't apply style to node as it is not on the HTMLElement prototype chain!\");\n            }\n\n            /*jshint -W116*/\n            if (styles.opacity != null) {\n                if (typeof element.style.opacity !== \"string\" && typeof (element.filters) !== \"undefined\") {\n                    styles.filter = \"alpha(opacity=\" + Math.round(100 * styles.opacity) + \")\";\n                }\n            }\n            qq.extend(element.style, styles);\n\n            return this;\n        },\n\n        hasClass: function(name, considerParent) {\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n            return re.test(element.className) || !!(considerParent && re.test(element.parentNode.className));\n        },\n\n        addClass: function(name) {\n            if (!qq(element).hasClass(name)) {\n                element.className += \" \" + name;\n            }\n            return this;\n        },\n\n        removeClass: function(name) {\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n            element.className = element.className.replace(re, \" \").replace(/^\\s+|\\s+$/g, \"\");\n            return this;\n        },\n\n        getByClass: function(className, first) {\n            var candidates,\n                result = [];\n\n            if (first && element.querySelector) {\n                return element.querySelector(\".\" + className);\n            }\n            else if (element.querySelectorAll) {\n                return element.querySelectorAll(\".\" + className);\n            }\n\n            candidates = element.getElementsByTagName(\"*\");\n\n            qq.each(candidates, function(idx, val) {\n                if (qq(val).hasClass(className)) {\n                    result.push(val);\n                }\n            });\n            return first ? result[0] : result;\n        },\n\n        getFirstByClass: function(className) {\n            return qq(element).getByClass(className, true);\n        },\n\n        children: function() {\n            var children = [],\n                child = element.firstChild;\n\n            while (child) {\n                if (child.nodeType === 1) {\n                    children.push(child);\n                }\n                child = child.nextSibling;\n            }\n\n            return children;\n        },\n\n        setText: function(text) {\n            element.innerText = text;\n            element.textContent = text;\n            return this;\n        },\n\n        clearText: function() {\n            return qq(element).setText(\"\");\n        },\n\n        // Returns true if the attribute exists on the element\n        // AND the value of the attribute is NOT \"false\" (case-insensitive)\n        hasAttribute: function(attrName) {\n            var attrVal;\n\n            if (element.hasAttribute) {\n\n                if (!element.hasAttribute(attrName)) {\n                    return false;\n                }\n\n                /*jshint -W116*/\n                return (/^false$/i).exec(element.getAttribute(attrName)) == null;\n            }\n            else {\n                attrVal = element[attrName];\n\n                if (attrVal === undefined) {\n                    return false;\n                }\n\n                /*jshint -W116*/\n                return (/^false$/i).exec(attrVal) == null;\n            }\n        }\n    };\n};\n\n(function() {\n    \"use strict\";\n\n    qq.canvasToBlob = function(canvas, mime, quality) {\n        return qq.dataUriToBlob(canvas.toDataURL(mime, quality));\n    };\n\n    qq.dataUriToBlob = function(dataUri) {\n        var arrayBuffer, byteString,\n            createBlob = function(data, mime) {\n                var BlobBuilder = window.BlobBuilder ||\n                        window.WebKitBlobBuilder ||\n                        window.MozBlobBuilder ||\n                        window.MSBlobBuilder,\n                    blobBuilder = BlobBuilder && new BlobBuilder();\n\n                if (blobBuilder) {\n                    blobBuilder.append(data);\n                    return blobBuilder.getBlob(mime);\n                }\n                else {\n                    return new Blob([data], {type: mime});\n                }\n            },\n            intArray, mimeString;\n\n        // convert base64 to raw binary data held in a string\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n            byteString = atob(dataUri.split(\",\")[1]);\n        }\n        else {\n            byteString = decodeURI(dataUri.split(\",\")[1]);\n        }\n\n        // extract the MIME\n        mimeString = dataUri.split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n\n        // write the bytes of the binary string to an ArrayBuffer\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        qq.each(byteString, function(idx, character) {\n            intArray[idx] = character.charCodeAt(0);\n        });\n\n        return createBlob(arrayBuffer, mimeString);\n    };\n\n    qq.log = function(message, level) {\n        if (window.console) {\n            if (!level || level === \"info\") {\n                window.console.log(message);\n            }\n            else\n            {\n                if (window.console[level]) {\n                    window.console[level](message);\n                }\n                else {\n                    window.console.log(\"<\" + level + \"> \" + message);\n                }\n            }\n        }\n    };\n\n    qq.isObject = function(variable) {\n        return variable && !variable.nodeType && Object.prototype.toString.call(variable) === \"[object Object]\";\n    };\n\n    qq.isFunction = function(variable) {\n        return typeof (variable) === \"function\";\n    };\n\n    /**\n     * Check the type of a value.  Is it an \"array\"?\n     *\n     * @param value value to test.\n     * @returns true if the value is an array or associated with an `ArrayBuffer`\n     */\n    qq.isArray = function(value) {\n        return Object.prototype.toString.call(value) === \"[object Array]\" ||\n            (value && window.ArrayBuffer && value.buffer && value.buffer.constructor === ArrayBuffer);\n    };\n\n    // Looks for an object on a `DataTransfer` object that is associated with drop events when utilizing the Filesystem API.\n    qq.isItemList = function(maybeItemList) {\n        return Object.prototype.toString.call(maybeItemList) === \"[object DataTransferItemList]\";\n    };\n\n    // Looks for an object on a `NodeList` or an `HTMLCollection`|`HTMLFormElement`|`HTMLSelectElement`\n    // object that is associated with collections of Nodes.\n    qq.isNodeList = function(maybeNodeList) {\n        return Object.prototype.toString.call(maybeNodeList) === \"[object NodeList]\" ||\n            // If `HTMLCollection` is the actual type of the object, we must determine this\n            // by checking for expected properties/methods on the object\n            (maybeNodeList.item && maybeNodeList.namedItem);\n    };\n\n    qq.isString = function(maybeString) {\n        return Object.prototype.toString.call(maybeString) === \"[object String]\";\n    };\n\n    qq.trimStr = function(string) {\n        if (String.prototype.trim) {\n            return string.trim();\n        }\n\n        return string.replace(/^\\s+|\\s+$/g, \"\");\n    };\n\n    /**\n     * @param str String to format.\n     * @returns {string} A string, swapping argument values with the associated occurrence of {} in the passed string.\n     */\n    qq.format = function(str) {\n\n        var args =  Array.prototype.slice.call(arguments, 1),\n            newStr = str,\n            nextIdxToReplace = newStr.indexOf(\"{}\");\n\n        qq.each(args, function(idx, val) {\n            var strBefore = newStr.substring(0, nextIdxToReplace),\n                strAfter = newStr.substring(nextIdxToReplace + 2);\n\n            newStr = strBefore + val + strAfter;\n            nextIdxToReplace = newStr.indexOf(\"{}\", nextIdxToReplace + val.length);\n\n            // End the loop if we have run out of tokens (when the arguments exceed the # of tokens)\n            if (nextIdxToReplace < 0) {\n                return false;\n            }\n        });\n\n        return newStr;\n    };\n\n    qq.isFile = function(maybeFile) {\n        return window.File && Object.prototype.toString.call(maybeFile) === \"[object File]\";\n    };\n\n    qq.isFileList = function(maybeFileList) {\n        return window.FileList && Object.prototype.toString.call(maybeFileList) === \"[object FileList]\";\n    };\n\n    qq.isFileOrInput = function(maybeFileOrInput) {\n        return qq.isFile(maybeFileOrInput) || qq.isInput(maybeFileOrInput);\n    };\n\n    qq.isInput = function(maybeInput, notFile) {\n        var evaluateType = function(type) {\n            var normalizedType = type.toLowerCase();\n\n            if (notFile) {\n                return normalizedType !== \"file\";\n            }\n\n            return normalizedType === \"file\";\n        };\n\n        if (window.HTMLInputElement) {\n            if (Object.prototype.toString.call(maybeInput) === \"[object HTMLInputElement]\") {\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\n                    return true;\n                }\n            }\n        }\n        if (maybeInput.tagName) {\n            if (maybeInput.tagName.toLowerCase() === \"input\") {\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    };\n\n    qq.isBlob = function(maybeBlob) {\n        if (window.Blob && Object.prototype.toString.call(maybeBlob) === \"[object Blob]\") {\n            return true;\n        }\n    };\n\n    qq.isXhrUploadSupported = function() {\n        var input = document.createElement(\"input\");\n        input.type = \"file\";\n\n        return (\n            input.multiple !== undefined &&\n                typeof File !== \"undefined\" &&\n                typeof FormData !== \"undefined\" &&\n                typeof (qq.createXhrInstance()).upload !== \"undefined\");\n    };\n\n    // Fall back to ActiveX is native XHR is disabled (possible in any version of IE).\n    qq.createXhrInstance = function() {\n        if (window.XMLHttpRequest) {\n            return new XMLHttpRequest();\n        }\n\n        try {\n            return new ActiveXObject(\"MSXML2.XMLHTTP.3.0\");\n        }\n        catch (error) {\n            qq.log(\"Neither XHR or ActiveX are supported!\", \"error\");\n            return null;\n        }\n    };\n\n    qq.isFolderDropSupported = function(dataTransfer) {\n        return dataTransfer.items &&\n            dataTransfer.items.length > 0 &&\n            dataTransfer.items[0].webkitGetAsEntry;\n    };\n\n    qq.isFileChunkingSupported = function() {\n        return !qq.androidStock() && //Android's stock browser cannot upload Blobs correctly\n            qq.isXhrUploadSupported() &&\n            (File.prototype.slice !== undefined || File.prototype.webkitSlice !== undefined || File.prototype.mozSlice !== undefined);\n    };\n\n    qq.sliceBlob = function(fileOrBlob, start, end) {\n        var slicer = fileOrBlob.slice || fileOrBlob.mozSlice || fileOrBlob.webkitSlice;\n\n        return slicer.call(fileOrBlob, start, end);\n    };\n\n    qq.arrayBufferToHex = function(buffer) {\n        var bytesAsHex = \"\",\n            bytes = new Uint8Array(buffer);\n\n        qq.each(bytes, function(idx, byt) {\n            var byteAsHexStr = byt.toString(16);\n\n            if (byteAsHexStr.length < 2) {\n                byteAsHexStr = \"0\" + byteAsHexStr;\n            }\n\n            bytesAsHex += byteAsHexStr;\n        });\n\n        return bytesAsHex;\n    };\n\n    qq.readBlobToHex = function(blob, startOffset, length) {\n        var initialBlob = qq.sliceBlob(blob, startOffset, startOffset + length),\n            fileReader = new FileReader(),\n            promise = new qq.Promise();\n\n        fileReader.onload = function() {\n            promise.success(qq.arrayBufferToHex(fileReader.result));\n        };\n\n        fileReader.onerror = promise.failure;\n\n        fileReader.readAsArrayBuffer(initialBlob);\n\n        return promise;\n    };\n\n    qq.extend = function(first, second, extendNested) {\n        qq.each(second, function(prop, val) {\n            if (extendNested && qq.isObject(val)) {\n                if (first[prop] === undefined) {\n                    first[prop] = {};\n                }\n                qq.extend(first[prop], val, true);\n            }\n            else {\n                first[prop] = val;\n            }\n        });\n\n        return first;\n    };\n\n    /**\n     * Allow properties in one object to override properties in another,\n     * keeping track of the original values from the target object.\n     *\n     * Note that the pre-overriden properties to be overriden by the source will be passed into the `sourceFn` when it is invoked.\n     *\n     * @param target Update properties in this object from some source\n     * @param sourceFn A function that, when invoked, will return properties that will replace properties with the same name in the target.\n     * @returns {object} The target object\n     */\n    qq.override = function(target, sourceFn) {\n        var super_ = {},\n            source = sourceFn(super_);\n\n        qq.each(source, function(srcPropName, srcPropVal) {\n            if (target[srcPropName] !== undefined) {\n                super_[srcPropName] = target[srcPropName];\n            }\n\n            target[srcPropName] = srcPropVal;\n        });\n\n        return target;\n    };\n\n    /**\n     * Searches for a given element (elt) in the array, returns -1 if it is not present.\n     */\n    qq.indexOf = function(arr, elt, from) {\n        if (arr.indexOf) {\n            return arr.indexOf(elt, from);\n        }\n\n        from = from || 0;\n        var len = arr.length;\n\n        if (from < 0) {\n            from += len;\n        }\n\n        for (; from < len; from += 1) {\n            if (arr.hasOwnProperty(from) && arr[from] === elt) {\n                return from;\n            }\n        }\n        return -1;\n    };\n\n    //this is a version 4 UUID\n    qq.getUniqueId = function() {\n        return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n            /*jslint eqeq: true, bitwise: true*/\n            var r = Math.random() * 16 | 0, v = c == \"x\" ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    };\n\n    //\n    // Browsers and platforms detection\n    qq.ie = function() {\n        return navigator.userAgent.indexOf(\"MSIE\") !== -1 ||\n            navigator.userAgent.indexOf(\"Trident\") !== -1;\n    };\n\n    qq.ie7 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 7\") !== -1;\n    };\n\n    qq.ie8 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 8\") !== -1;\n    };\n\n    qq.ie10 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 10\") !== -1;\n    };\n\n    qq.ie11 = function() {\n        return qq.ie() && navigator.userAgent.indexOf(\"rv:11\") !== -1;\n    };\n\n    qq.edge = function() {\n        return navigator.userAgent.indexOf(\"Edge\") >= 0;\n    };\n\n    qq.safari = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Apple\") !== -1;\n    };\n\n    qq.chrome = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Google\") !== -1;\n    };\n\n    qq.opera = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Opera\") !== -1;\n    };\n\n    qq.firefox = function() {\n        return (!qq.edge() && !qq.ie11() && navigator.userAgent.indexOf(\"Mozilla\") !== -1 && navigator.vendor !== undefined && navigator.vendor === \"\");\n    };\n\n    qq.windows = function() {\n        return navigator.platform === \"Win32\";\n    };\n\n    qq.android = function() {\n        return navigator.userAgent.toLowerCase().indexOf(\"android\") !== -1;\n    };\n\n    // We need to identify the Android stock browser via the UA string to work around various bugs in this browser,\n    // such as the one that prevents a `Blob` from being uploaded.\n    qq.androidStock = function() {\n        return qq.android() && navigator.userAgent.toLowerCase().indexOf(\"chrome\") < 0;\n    };\n\n    qq.ios6 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 6_\") !== -1;\n    };\n\n    qq.ios7 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 7_\") !== -1;\n    };\n\n    qq.ios8 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_\") !== -1;\n    };\n\n    // iOS 8.0.0\n    qq.ios800 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_0 \") !== -1;\n    };\n\n    qq.ios = function() {\n        /*jshint -W014 */\n        return navigator.userAgent.indexOf(\"iPad\") !== -1\n            || navigator.userAgent.indexOf(\"iPod\") !== -1\n            || navigator.userAgent.indexOf(\"iPhone\") !== -1;\n    };\n\n    qq.iosChrome = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\"CriOS\") !== -1;\n    };\n\n    qq.iosSafari = function() {\n        return qq.ios() && !qq.iosChrome() && navigator.userAgent.indexOf(\"Safari\") !== -1;\n    };\n\n    qq.iosSafariWebView = function() {\n        return qq.ios() && !qq.iosChrome() && !qq.iosSafari();\n    };\n\n    //\n    // Events\n\n    qq.preventDefault = function(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n        } else {\n            e.returnValue = false;\n        }\n    };\n\n    /**\n     * Creates and returns element from html string\n     * Uses innerHTML to create an element\n     */\n    qq.toElement = (function() {\n        var div = document.createElement(\"div\");\n        return function(html) {\n            div.innerHTML = html;\n            var element = div.firstChild;\n            div.removeChild(element);\n            return element;\n        };\n    }());\n\n    //key and value are passed to callback for each entry in the iterable item\n    qq.each = function(iterableItem, callback) {\n        var keyOrIndex, retVal;\n\n        if (iterableItem) {\n            // Iterate through [`Storage`](http://www.w3.org/TR/webstorage/#the-storage-interface) items\n            if (window.Storage && iterableItem.constructor === window.Storage) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(iterableItem.key(keyOrIndex), iterableItem.getItem(iterableItem.key(keyOrIndex)));\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            // `DataTransferItemList` & `NodeList` objects are array-like and should be treated as arrays\n            // when iterating over items inside the object.\n            else if (qq.isArray(iterableItem) || qq.isItemList(iterableItem) || qq.isNodeList(iterableItem)) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            else if (qq.isString(iterableItem)) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(keyOrIndex, iterableItem.charAt(keyOrIndex));\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            else {\n                for (keyOrIndex in iterableItem) {\n                    if (Object.prototype.hasOwnProperty.call(iterableItem, keyOrIndex)) {\n                        retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                        if (retVal === false) {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    //include any args that should be passed to the new function after the context arg\n    qq.bind = function(oldFunc, context) {\n        if (qq.isFunction(oldFunc)) {\n            var args =  Array.prototype.slice.call(arguments, 2);\n\n            return function() {\n                var newArgs = qq.extend([], args);\n                if (arguments.length) {\n                    newArgs = newArgs.concat(Array.prototype.slice.call(arguments));\n                }\n                return oldFunc.apply(context, newArgs);\n            };\n        }\n\n        throw new Error(\"first parameter must be a function!\");\n    };\n\n    /**\n     * obj2url() takes a json-object as argument and generates\n     * a querystring. pretty much like jQuery.param()\n     *\n     * how to use:\n     *\n     *    `qq.obj2url({a:'b',c:'d'},'http://any.url/upload?otherParam=value');`\n     *\n     * will result in:\n     *\n     *    `http://any.url/upload?otherParam=value&a=b&c=d`\n     *\n     * @param  Object JSON-Object\n     * @param  String current querystring-part\n     * @return String encoded querystring\n     */\n    qq.obj2url = function(obj, temp, prefixDone) {\n        /*jshint laxbreak: true*/\n        var uristrings = [],\n            prefix = \"&\",\n            add = function(nextObj, i) {\n                var nextTemp = temp\n                    ? (/\\[\\]$/.test(temp)) // prevent double-encoding\n                    ? temp\n                    : temp + \"[\" + i + \"]\"\n                    : i;\n                if ((nextTemp !== \"undefined\") && (i !== \"undefined\")) {\n                    uristrings.push(\n                        (typeof nextObj === \"object\")\n                            ? qq.obj2url(nextObj, nextTemp, true)\n                            : (Object.prototype.toString.call(nextObj) === \"[object Function]\")\n                            ? encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj())\n                            : encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj)\n                    );\n                }\n            };\n\n        if (!prefixDone && temp) {\n            prefix = (/\\?/.test(temp)) ? (/\\?$/.test(temp)) ? \"\" : \"&\" : \"?\";\n            uristrings.push(temp);\n            uristrings.push(qq.obj2url(obj));\n        } else if ((Object.prototype.toString.call(obj) === \"[object Array]\") && (typeof obj !== \"undefined\")) {\n            qq.each(obj, function(idx, val) {\n                add(val, idx);\n            });\n        } else if ((typeof obj !== \"undefined\") && (obj !== null) && (typeof obj === \"object\")) {\n            qq.each(obj, function(prop, val) {\n                add(val, prop);\n            });\n        } else {\n            uristrings.push(encodeURIComponent(temp) + \"=\" + encodeURIComponent(obj));\n        }\n\n        if (temp) {\n            return uristrings.join(prefix);\n        } else {\n            return uristrings.join(prefix)\n                .replace(/^&/, \"\")\n                .replace(/%20/g, \"+\");\n        }\n    };\n\n    qq.obj2FormData = function(obj, formData, arrayKeyName) {\n        if (!formData) {\n            formData = new FormData();\n        }\n\n        qq.each(obj, function(key, val) {\n            key = arrayKeyName ? arrayKeyName + \"[\" + key + \"]\" : key;\n\n            if (qq.isObject(val)) {\n                qq.obj2FormData(val, formData, key);\n            }\n            else if (qq.isFunction(val)) {\n                formData.append(key, val());\n            }\n            else {\n                formData.append(key, val);\n            }\n        });\n\n        return formData;\n    };\n\n    qq.obj2Inputs = function(obj, form) {\n        var input;\n\n        if (!form) {\n            form = document.createElement(\"form\");\n        }\n\n        qq.obj2FormData(obj, {\n            append: function(key, val) {\n                input = document.createElement(\"input\");\n                input.setAttribute(\"name\", key);\n                input.setAttribute(\"value\", val);\n                form.appendChild(input);\n            }\n        });\n\n        return form;\n    };\n\n    /**\n     * Not recommended for use outside of Fine Uploader since this falls back to an unchecked eval if JSON.parse is not\n     * implemented.  For a more secure JSON.parse polyfill, use Douglas Crockford's json2.js.\n     */\n    qq.parseJson = function(json) {\n        /*jshint evil: true*/\n        if (window.JSON && qq.isFunction(JSON.parse)) {\n            return JSON.parse(json);\n        } else {\n            return eval(\"(\" + json + \")\");\n        }\n    };\n\n    /**\n     * Retrieve the extension of a file, if it exists.\n     *\n     * @param filename\n     * @returns {string || undefined}\n     */\n    qq.getExtension = function(filename) {\n        var extIdx = filename.lastIndexOf(\".\") + 1;\n\n        if (extIdx > 0) {\n            return filename.substr(extIdx, filename.length - extIdx);\n        }\n    };\n\n    qq.getFilename = function(blobOrFileInput) {\n        /*jslint regexp: true*/\n\n        if (qq.isInput(blobOrFileInput)) {\n            // get input value and remove path to normalize\n            return blobOrFileInput.value.replace(/.*(\\/|\\\\)/, \"\");\n        }\n        else if (qq.isFile(blobOrFileInput)) {\n            if (blobOrFileInput.fileName !== null && blobOrFileInput.fileName !== undefined) {\n                return blobOrFileInput.fileName;\n            }\n        }\n\n        return blobOrFileInput.name;\n    };\n\n    /**\n     * A generic module which supports object disposing in dispose() method.\n     * */\n    qq.DisposeSupport = function() {\n        var disposers = [];\n\n        return {\n            /** Run all registered disposers */\n            dispose: function() {\n                var disposer;\n                do {\n                    disposer = disposers.shift();\n                    if (disposer) {\n                        disposer();\n                    }\n                }\n                while (disposer);\n            },\n\n            /** Attach event handler and register de-attacher as a disposer */\n            attach: function() {\n                var args = arguments;\n                /*jslint undef:true*/\n                this.addDisposer(qq(args[0]).attach.apply(this, Array.prototype.slice.call(arguments, 1)));\n            },\n\n            /** Add disposer to the collection */\n            addDisposer: function(disposeFunction) {\n                disposers.push(disposeFunction);\n            }\n        };\n    };\n}());\n","/* globals define, module, global, qq */\n(function() {\n    \"use strict\";\n    if (typeof define === \"function\" && define.amd) {\n        define(function() {\n            return qq;\n        });\n    }\n    else if (typeof module !== \"undefined\" && module.exports) {\n        module.exports = qq;\n    }\n    else {\n        global.qq = qq;\n    }\n}());\n","/* globals qq */\n/**\n * Fine Uploader top-level Error container.  Inherits from `Error`.\n */\n(function() {\n    \"use strict\";\n\n    qq.Error = function(message) {\n        this.message = \"[Fine Uploader \" + qq.version + \"] \" + message;\n    };\n\n    qq.Error.prototype = new Error();\n}());\n","/*global qq */\nqq.version = \"5.15.6\";\n","/* globals qq */\nqq.supportedFeatures = (function() {\n    \"use strict\";\n\n    var supportsUploading,\n        supportsUploadingBlobs,\n        supportsFileDrop,\n        supportsAjaxFileUploading,\n        supportsFolderDrop,\n        supportsChunking,\n        supportsResume,\n        supportsUploadViaPaste,\n        supportsUploadCors,\n        supportsDeleteFileXdr,\n        supportsDeleteFileCorsXhr,\n        supportsDeleteFileCors,\n        supportsFolderSelection,\n        supportsImagePreviews,\n        supportsUploadProgress;\n\n    function testSupportsFileInputElement() {\n        var supported = true,\n            tempInput;\n\n        try {\n            tempInput = document.createElement(\"input\");\n            tempInput.type = \"file\";\n            qq(tempInput).hide();\n\n            if (tempInput.disabled) {\n                supported = false;\n            }\n        }\n        catch (ex) {\n            supported = false;\n        }\n\n        return supported;\n    }\n\n    //only way to test for Filesystem API support since webkit does not expose the DataTransfer interface\n    function isChrome21OrHigher() {\n        return (qq.chrome() || qq.opera()) &&\n            navigator.userAgent.match(/Chrome\\/[2][1-9]|Chrome\\/[3-9][0-9]/) !== undefined;\n    }\n\n    //only way to test for complete Clipboard API support at this time\n    function isChrome14OrHigher() {\n        return (qq.chrome() || qq.opera()) &&\n            navigator.userAgent.match(/Chrome\\/[1][4-9]|Chrome\\/[2-9][0-9]/) !== undefined;\n    }\n\n    //Ensure we can send cross-origin `XMLHttpRequest`s\n    function isCrossOriginXhrSupported() {\n        if (window.XMLHttpRequest) {\n            var xhr = qq.createXhrInstance();\n\n            //Commonly accepted test for XHR CORS support.\n            return xhr.withCredentials !== undefined;\n        }\n\n        return false;\n    }\n\n    //Test for (terrible) cross-origin ajax transport fallback for IE9 and IE8\n    function isXdrSupported() {\n        return window.XDomainRequest !== undefined;\n    }\n\n    // CORS Ajax requests are supported if it is either possible to send credentialed `XMLHttpRequest`s,\n    // or if `XDomainRequest` is an available alternative.\n    function isCrossOriginAjaxSupported() {\n        if (isCrossOriginXhrSupported()) {\n            return true;\n        }\n\n        return isXdrSupported();\n    }\n\n    function isFolderSelectionSupported() {\n        // We know that folder selection is only supported in Chrome via this proprietary attribute for now\n        return document.createElement(\"input\").webkitdirectory !== undefined;\n    }\n\n    function isLocalStorageSupported() {\n        try {\n            return !!window.localStorage &&\n                // unpatched versions of IE10/11 have buggy impls of localStorage where setItem is a string\n                qq.isFunction(window.localStorage.setItem);\n        }\n        catch (error) {\n            // probably caught a security exception, so no localStorage for you\n            return false;\n        }\n    }\n\n    function isDragAndDropSupported() {\n        var span = document.createElement(\"span\");\n\n        return (\"draggable\" in span || (\"ondragstart\" in span && \"ondrop\" in span)) &&\n            !qq.android() && !qq.ios();\n    }\n\n    supportsUploading = testSupportsFileInputElement();\n\n    supportsAjaxFileUploading = supportsUploading && qq.isXhrUploadSupported();\n\n    supportsUploadingBlobs = supportsAjaxFileUploading && !qq.androidStock();\n\n    supportsFileDrop = supportsAjaxFileUploading && isDragAndDropSupported();\n\n    supportsFolderDrop = supportsFileDrop && isChrome21OrHigher();\n\n    supportsChunking = supportsAjaxFileUploading && qq.isFileChunkingSupported();\n\n    supportsResume = supportsAjaxFileUploading && supportsChunking && isLocalStorageSupported();\n\n    supportsUploadViaPaste = supportsAjaxFileUploading && isChrome14OrHigher();\n\n    supportsUploadCors = supportsUploading && (window.postMessage !== undefined || supportsAjaxFileUploading);\n\n    supportsDeleteFileCorsXhr = isCrossOriginXhrSupported();\n\n    supportsDeleteFileXdr = isXdrSupported();\n\n    supportsDeleteFileCors = isCrossOriginAjaxSupported();\n\n    supportsFolderSelection = isFolderSelectionSupported();\n\n    supportsImagePreviews = supportsAjaxFileUploading && window.FileReader !== undefined;\n\n    supportsUploadProgress = (function() {\n        if (supportsAjaxFileUploading) {\n            return !qq.androidStock() && !qq.iosChrome();\n        }\n        return false;\n    }());\n\n    return {\n        ajaxUploading: supportsAjaxFileUploading,\n        blobUploading: supportsUploadingBlobs,\n        canDetermineSize: supportsAjaxFileUploading,\n        chunking: supportsChunking,\n        deleteFileCors: supportsDeleteFileCors,\n        deleteFileCorsXdr: supportsDeleteFileXdr, //NOTE: will also return true in IE10, where XDR is also supported\n        deleteFileCorsXhr: supportsDeleteFileCorsXhr,\n        dialogElement: !!window.HTMLDialogElement,\n        fileDrop: supportsFileDrop,\n        folderDrop: supportsFolderDrop,\n        folderSelection: supportsFolderSelection,\n        imagePreviews: supportsImagePreviews,\n        imageValidation: supportsImagePreviews,\n        itemSizeValidation: supportsAjaxFileUploading,\n        pause: supportsChunking,\n        progressBar: supportsUploadProgress,\n        resume: supportsResume,\n        scaling: supportsImagePreviews && supportsUploadingBlobs,\n        tiffPreviews: qq.safari(), // Not the best solution, but simple and probably accurate enough (for now)\n        unlimitedScaledImageSize: !qq.ios(), // false simply indicates that there is some known limit\n        uploading: supportsUploading,\n        uploadCors: supportsUploadCors,\n        uploadCustomHeaders: supportsAjaxFileUploading,\n        uploadNonMultipart: supportsAjaxFileUploading,\n        uploadViaPaste: supportsUploadViaPaste\n    };\n\n}());\n","/*globals qq*/\n\n// Is the passed object a promise instance?\nqq.isGenericPromise = function(maybePromise) {\n    \"use strict\";\n    return !!(maybePromise && maybePromise.then && qq.isFunction(maybePromise.then));\n};\n\nqq.Promise = function() {\n    \"use strict\";\n\n    var successArgs, failureArgs,\n        successCallbacks = [],\n        failureCallbacks = [],\n        doneCallbacks = [],\n        state = 0;\n\n    qq.extend(this, {\n        then: function(onSuccess, onFailure) {\n            if (state === 0) {\n                if (onSuccess) {\n                    successCallbacks.push(onSuccess);\n                }\n                if (onFailure) {\n                    failureCallbacks.push(onFailure);\n                }\n            }\n            else if (state === -1) {\n                onFailure && onFailure.apply(null, failureArgs);\n            }\n            else if (onSuccess) {\n                onSuccess.apply(null, successArgs);\n            }\n\n            return this;\n        },\n\n        done: function(callback) {\n            if (state === 0) {\n                doneCallbacks.push(callback);\n            }\n            else {\n                callback.apply(null, failureArgs === undefined ? successArgs : failureArgs);\n            }\n\n            return this;\n        },\n\n        success: function() {\n            state = 1;\n            successArgs = arguments;\n\n            if (successCallbacks.length) {\n                qq.each(successCallbacks, function(idx, callback) {\n                    callback.apply(null, successArgs);\n                });\n            }\n\n            if (doneCallbacks.length) {\n                qq.each(doneCallbacks, function(idx, callback) {\n                    callback.apply(null, successArgs);\n                });\n            }\n\n            return this;\n        },\n\n        failure: function() {\n            state = -1;\n            failureArgs = arguments;\n\n            if (failureCallbacks.length) {\n                qq.each(failureCallbacks, function(idx, callback) {\n                    callback.apply(null, failureArgs);\n                });\n            }\n\n            if (doneCallbacks.length) {\n                qq.each(doneCallbacks, function(idx, callback) {\n                    callback.apply(null, failureArgs);\n                });\n            }\n\n            return this;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Placeholder for a Blob that will be generated on-demand.\n *\n * @param referenceBlob Parent of the generated blob\n * @param onCreate Function to invoke when the blob must be created.  Must be promissory.\n * @constructor\n */\nqq.BlobProxy = function(referenceBlob, onCreate) {\n    \"use strict\";\n\n    qq.extend(this, {\n        referenceBlob: referenceBlob,\n\n        create: function() {\n            return onCreate(referenceBlob);\n        }\n    });\n};\n","/*globals qq*/\n\n/**\n * This module represents an upload or \"Select File(s)\" button.  It's job is to embed an opaque `<input type=\"file\">`\n * element as a child of a provided \"container\" element.  This \"container\" element (`options.element`) is used to provide\n * a custom style for the `<input type=\"file\">` element.  The ability to change the style of the container element is also\n * provided here by adding CSS classes to the container on hover/focus.\n *\n * TODO Eliminate the mouseover and mouseout event handlers since the :hover CSS pseudo-class should now be\n * available on all supported browsers.\n *\n * @param o Options to override the default values\n */\nqq.UploadButton = function(o) {\n    \"use strict\";\n\n    var self = this,\n\n        disposeSupport = new qq.DisposeSupport(),\n\n        options = {\n            // Corresponds to the `accept` attribute on the associated `<input type=\"file\">`\n            acceptFiles: null,\n\n            // \"Container\" element\n            element: null,\n\n            focusClass: \"qq-upload-button-focus\",\n\n            // A true value allows folders to be selected, if supported by the UA\n            folders: false,\n\n            // **This option will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\n            hoverClass: \"qq-upload-button-hover\",\n\n            ios8BrowserCrashWorkaround: false,\n\n            // If true adds `multiple` attribute to `<input type=\"file\">`\n            multiple: false,\n\n            // `name` attribute of `<input type=\"file\">`\n            name: \"qqfile\",\n\n            // Called when the browser invokes the onchange handler on the `<input type=\"file\">`\n            onChange: function(input) {},\n\n            title: null\n        },\n        input, buttonId;\n\n    // Overrides any of the default option values with any option values passed in during construction.\n    qq.extend(options, o);\n\n    buttonId = qq.getUniqueId();\n\n    // Embed an opaque `<input type=\"file\">` element as a child of `options.element`.\n    function createInput() {\n        var input = document.createElement(\"input\");\n\n        input.setAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME, buttonId);\n        input.setAttribute(\"title\", options.title);\n\n        self.setMultiple(options.multiple, input);\n\n        if (options.folders && qq.supportedFeatures.folderSelection) {\n            // selecting directories is only possible in Chrome now, via a vendor-specific prefixed attribute\n            input.setAttribute(\"webkitdirectory\", \"\");\n        }\n\n        if (options.acceptFiles) {\n            input.setAttribute(\"accept\", options.acceptFiles);\n        }\n\n        input.setAttribute(\"type\", \"file\");\n        input.setAttribute(\"name\", options.name);\n\n        qq(input).css({\n            position: \"absolute\",\n            // in Opera only 'browse' button\n            // is clickable and it is located at\n            // the right side of the input\n            right: 0,\n            top: 0,\n            fontFamily: \"Arial\",\n            // It's especially important to make this an arbitrarily large value\n            // to ensure the rendered input button in IE takes up the entire\n            // space of the container element.  Otherwise, the left side of the\n            // button will require a double-click to invoke the file chooser.\n            // In other browsers, this might cause other issues, so a large font-size\n            // is only used in IE.  There is a bug in IE8 where the opacity style is  ignored\n            // in some cases when the font-size is large.  So, this workaround is not applied\n            // to IE8.\n            fontSize: qq.ie() && !qq.ie8() ? \"3500px\" : \"118px\",\n            margin: 0,\n            padding: 0,\n            cursor: \"pointer\",\n            opacity: 0\n        });\n\n        // Setting the file input's height to 100% in IE7 causes\n        // most of the visible button to be unclickable.\n        !qq.ie7() && qq(input).css({height: \"100%\"});\n\n        options.element.appendChild(input);\n\n        disposeSupport.attach(input, \"change\", function() {\n            options.onChange(input);\n        });\n\n        // **These event handlers will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\n        disposeSupport.attach(input, \"mouseover\", function() {\n            qq(options.element).addClass(options.hoverClass);\n        });\n        disposeSupport.attach(input, \"mouseout\", function() {\n            qq(options.element).removeClass(options.hoverClass);\n        });\n\n        disposeSupport.attach(input, \"focus\", function() {\n            qq(options.element).addClass(options.focusClass);\n        });\n        disposeSupport.attach(input, \"blur\", function() {\n            qq(options.element).removeClass(options.focusClass);\n        });\n\n        return input;\n    }\n\n    // Make button suitable container for input\n    qq(options.element).css({\n        position: \"relative\",\n        overflow: \"hidden\",\n        // Make sure browse button is in the right side in Internet Explorer\n        direction: \"ltr\"\n    });\n\n    // Exposed API\n    qq.extend(this, {\n        getInput: function() {\n            return input;\n        },\n\n        getButtonId: function() {\n            return buttonId;\n        },\n\n        setMultiple: function(isMultiple, optInput) {\n            var input = optInput || this.getInput();\n\n            // Temporary workaround for bug in in iOS8 UIWebView that causes the browser to crash\n            // before the file chooser appears if the file input doesn't contain a multiple attribute.\n            // See #1283.\n            if (options.ios8BrowserCrashWorkaround && qq.ios8() && (qq.iosChrome() || qq.iosSafariWebView())) {\n                input.setAttribute(\"multiple\", \"\");\n            }\n\n            else {\n                if (isMultiple) {\n                    input.setAttribute(\"multiple\", \"\");\n                }\n                else {\n                    input.removeAttribute(\"multiple\");\n                }\n            }\n        },\n\n        setAcceptFiles: function(acceptFiles) {\n            if (acceptFiles !== options.acceptFiles) {\n                input.setAttribute(\"accept\", acceptFiles);\n            }\n        },\n\n        reset: function() {\n            if (input.parentNode) {\n                qq(input).remove();\n            }\n\n            qq(options.element).removeClass(options.focusClass);\n            input = null;\n            input = createInput();\n        }\n    });\n\n    input = createInput();\n};\n\nqq.UploadButton.BUTTON_ID_ATTR_NAME = \"qq-button-id\";\n","/*globals qq */\nqq.UploadData = function(uploaderProxy) {\n    \"use strict\";\n\n    var data = [],\n        byUuid = {},\n        byStatus = {},\n        byProxyGroupId = {},\n        byBatchId = {};\n\n    function getDataByIds(idOrIds) {\n        if (qq.isArray(idOrIds)) {\n            var entries = [];\n\n            qq.each(idOrIds, function(idx, id) {\n                entries.push(data[id]);\n            });\n\n            return entries;\n        }\n\n        return data[idOrIds];\n    }\n\n    function getDataByUuids(uuids) {\n        if (qq.isArray(uuids)) {\n            var entries = [];\n\n            qq.each(uuids, function(idx, uuid) {\n                entries.push(data[byUuid[uuid]]);\n            });\n\n            return entries;\n        }\n\n        return data[byUuid[uuids]];\n    }\n\n    function getDataByStatus(status) {\n        var statusResults = [],\n            statuses = [].concat(status);\n\n        qq.each(statuses, function(index, statusEnum) {\n            var statusResultIndexes = byStatus[statusEnum];\n\n            if (statusResultIndexes !== undefined) {\n                qq.each(statusResultIndexes, function(i, dataIndex) {\n                    statusResults.push(data[dataIndex]);\n                });\n            }\n        });\n\n        return statusResults;\n    }\n\n    qq.extend(this, {\n        /**\n         * Adds a new file to the data cache for tracking purposes.\n         *\n         * @param spec Data that describes this file.  Possible properties are:\n         *\n         * - uuid: Initial UUID for this file.\n         * - name: Initial name of this file.\n         * - size: Size of this file, omit if this cannot be determined\n         * - status: Initial `qq.status` for this file.  Omit for `qq.status.SUBMITTING`.\n         * - batchId: ID of the batch this file belongs to\n         * - proxyGroupId: ID of the proxy group associated with this file\n         * - onBeforeStatusChange(fileId): callback that is executed before the status change is broadcast\n         *\n         * @returns {number} Internal ID for this file.\n         */\n        addFile: function(spec) {\n            var status = spec.status || qq.status.SUBMITTING,\n                id = data.push({\n                    name: spec.name,\n                    originalName: spec.name,\n                    uuid: spec.uuid,\n                    size: spec.size == null ? -1 : spec.size,\n                    status: status\n                }) - 1;\n\n            if (spec.batchId) {\n                data[id].batchId = spec.batchId;\n\n                if (byBatchId[spec.batchId] === undefined) {\n                    byBatchId[spec.batchId] = [];\n                }\n                byBatchId[spec.batchId].push(id);\n            }\n\n            if (spec.proxyGroupId) {\n                data[id].proxyGroupId = spec.proxyGroupId;\n\n                if (byProxyGroupId[spec.proxyGroupId] === undefined) {\n                    byProxyGroupId[spec.proxyGroupId] = [];\n                }\n                byProxyGroupId[spec.proxyGroupId].push(id);\n            }\n\n            data[id].id = id;\n            byUuid[spec.uuid] = id;\n\n            if (byStatus[status] === undefined) {\n                byStatus[status] = [];\n            }\n            byStatus[status].push(id);\n\n            spec.onBeforeStatusChange && spec.onBeforeStatusChange(id);\n            uploaderProxy.onStatusChange(id, null, status);\n\n            return id;\n        },\n\n        retrieve: function(optionalFilter) {\n            if (qq.isObject(optionalFilter) && data.length)  {\n                if (optionalFilter.id !== undefined) {\n                    return getDataByIds(optionalFilter.id);\n                }\n\n                else if (optionalFilter.uuid !== undefined) {\n                    return getDataByUuids(optionalFilter.uuid);\n                }\n\n                else if (optionalFilter.status) {\n                    return getDataByStatus(optionalFilter.status);\n                }\n            }\n            else {\n                return qq.extend([], data, true);\n            }\n        },\n\n        reset: function() {\n            data = [];\n            byUuid = {};\n            byStatus = {};\n            byBatchId = {};\n        },\n\n        setStatus: function(id, newStatus) {\n            var oldStatus = data[id].status,\n                byStatusOldStatusIndex = qq.indexOf(byStatus[oldStatus], id);\n\n            byStatus[oldStatus].splice(byStatusOldStatusIndex, 1);\n\n            data[id].status = newStatus;\n\n            if (byStatus[newStatus] === undefined) {\n                byStatus[newStatus] = [];\n            }\n            byStatus[newStatus].push(id);\n\n            uploaderProxy.onStatusChange(id, oldStatus, newStatus);\n        },\n\n        uuidChanged: function(id, newUuid) {\n            var oldUuid = data[id].uuid;\n\n            data[id].uuid = newUuid;\n            byUuid[newUuid] = id;\n            delete byUuid[oldUuid];\n        },\n\n        updateName: function(id, newName) {\n            data[id].name = newName;\n        },\n\n        updateSize: function(id, newSize) {\n            data[id].size = newSize;\n        },\n\n        // Only applicable if this file has a parent that we may want to reference later.\n        setParentId: function(targetId, parentId) {\n            data[targetId].parentId = parentId;\n        },\n\n        getIdsInProxyGroup: function(id) {\n            var proxyGroupId = data[id].proxyGroupId;\n\n            if (proxyGroupId) {\n                return byProxyGroupId[proxyGroupId];\n            }\n            return [];\n        },\n\n        getIdsInBatch: function(id) {\n            var batchId = data[id].batchId;\n\n            return byBatchId[batchId];\n        }\n    });\n};\n\nqq.status = {\n    SUBMITTING: \"submitting\",\n    SUBMITTED: \"submitted\",\n    REJECTED: \"rejected\",\n    QUEUED: \"queued\",\n    CANCELED: \"canceled\",\n    PAUSED: \"paused\",\n    UPLOADING: \"uploading\",\n    UPLOAD_RETRYING: \"retrying upload\",\n    UPLOAD_SUCCESSFUL: \"upload successful\",\n    UPLOAD_FAILED: \"upload failed\",\n    DELETE_FAILED: \"delete failed\",\n    DELETING: \"deleting\",\n    DELETED: \"deleted\"\n};\n","/*globals qq*/\n/**\n * Defines the public API for FineUploaderBasic mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.basePublicApi = {\n        // DEPRECATED - TODO REMOVE IN NEXT MAJOR RELEASE (replaced by addFiles)\n        addBlobs: function(blobDataOrArray, params, endpoint) {\n            this.addFiles(blobDataOrArray, params, endpoint);\n        },\n\n        addInitialFiles: function(cannedFileList) {\n            var self = this;\n\n            qq.each(cannedFileList, function(index, cannedFile) {\n                self._addCannedFile(cannedFile);\n            });\n        },\n\n        addFiles: function(data, params, endpoint) {\n            this._maybeHandleIos8SafariWorkaround();\n\n            var batchId = this._storedIds.length === 0 ? qq.getUniqueId() : this._currentBatchId,\n\n                processBlob = qq.bind(function(blob) {\n                    this._handleNewFile({\n                        blob: blob,\n                        name: this._options.blobs.defaultName\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processBlobData = qq.bind(function(blobData) {\n                    this._handleNewFile(blobData, batchId, verifiedFiles);\n                }, this),\n\n                processCanvas = qq.bind(function(canvas) {\n                    var blob = qq.canvasToBlob(canvas);\n\n                    this._handleNewFile({\n                        blob: blob,\n                        name: this._options.blobs.defaultName + \".png\"\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processCanvasData = qq.bind(function(canvasData) {\n                    var normalizedQuality = canvasData.quality && canvasData.quality / 100,\n                        blob = qq.canvasToBlob(canvasData.canvas, canvasData.type, normalizedQuality);\n\n                    this._handleNewFile({\n                        blob: blob,\n                        name: canvasData.name\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processFileOrInput = qq.bind(function(fileOrInput) {\n                    if (qq.isInput(fileOrInput) && qq.supportedFeatures.ajaxUploading) {\n                        var files = Array.prototype.slice.call(fileOrInput.files),\n                            self = this;\n\n                        qq.each(files, function(idx, file) {\n                            self._handleNewFile(file, batchId, verifiedFiles);\n                        });\n                    }\n                    else {\n                        this._handleNewFile(fileOrInput, batchId, verifiedFiles);\n                    }\n                }, this),\n\n                normalizeData = function() {\n                    if (qq.isFileList(data)) {\n                        data = Array.prototype.slice.call(data);\n                    }\n                    data = [].concat(data);\n                },\n\n                self = this,\n                verifiedFiles = [];\n\n            this._currentBatchId = batchId;\n\n            if (data) {\n                normalizeData();\n\n                qq.each(data, function(idx, fileContainer) {\n                    if (qq.isFileOrInput(fileContainer)) {\n                        processFileOrInput(fileContainer);\n                    }\n                    else if (qq.isBlob(fileContainer)) {\n                        processBlob(fileContainer);\n                    }\n                    else if (qq.isObject(fileContainer)) {\n                        if (fileContainer.blob && fileContainer.name) {\n                            processBlobData(fileContainer);\n                        }\n                        else if (fileContainer.canvas && fileContainer.name) {\n                            processCanvasData(fileContainer);\n                        }\n                    }\n                    else if (fileContainer.tagName && fileContainer.tagName.toLowerCase() === \"canvas\") {\n                        processCanvas(fileContainer);\n                    }\n                    else {\n                        self.log(fileContainer + \" is not a valid file container!  Ignoring!\", \"warn\");\n                    }\n                });\n\n                this.log(\"Received \" + verifiedFiles.length + \" files.\");\n                this._prepareItemsForUpload(verifiedFiles, params, endpoint);\n            }\n        },\n\n        cancel: function(id) {\n            this._handler.cancel(id);\n        },\n\n        cancelAll: function() {\n            var storedIdsCopy = [],\n                self = this;\n\n            qq.extend(storedIdsCopy, this._storedIds);\n            qq.each(storedIdsCopy, function(idx, storedFileId) {\n                self.cancel(storedFileId);\n            });\n\n            this._handler.cancelAll();\n        },\n\n        clearStoredFiles: function() {\n            this._storedIds = [];\n        },\n\n        continueUpload: function(id) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\n                return false;\n            }\n\n            if (uploadData.status === qq.status.PAUSED) {\n                this.log(qq.format(\"Paused file ID {} ({}) will be continued.  Not paused.\", id, this.getName(id)));\n                this._uploadFile(id);\n                return true;\n            }\n            else {\n                this.log(qq.format(\"Ignoring continue for file ID {} ({}).  Not paused.\", id, this.getName(id)), \"error\");\n            }\n\n            return false;\n        },\n\n        deleteFile: function(id) {\n            return this._onSubmitDelete(id);\n        },\n\n        // TODO document?\n        doesExist: function(fileOrBlobId) {\n            return this._handler.isValid(fileOrBlobId);\n        },\n\n        // Generate a variable size thumbnail on an img or canvas,\n        // returning a promise that is fulfilled when the attempt completes.\n        // Thumbnail can either be based off of a URL for an image returned\n        // by the server in the upload response, or the associated `Blob`.\n        drawThumbnail: function(fileId, imgOrCanvas, maxSize, fromServer, customResizeFunction) {\n            var promiseToReturn = new qq.Promise(),\n                fileOrUrl, options;\n\n            if (this._imageGenerator) {\n                fileOrUrl = this._thumbnailUrls[fileId];\n                options = {\n                    customResizeFunction: customResizeFunction,\n                    maxSize: maxSize > 0 ? maxSize : null,\n                    scale: maxSize > 0\n                };\n\n                // If client-side preview generation is possible\n                // and we are not specifically looking for the image URl returned by the server...\n                if (!fromServer && qq.supportedFeatures.imagePreviews) {\n                    fileOrUrl = this.getFile(fileId);\n                }\n\n                /* jshint eqeqeq:false,eqnull:true */\n                if (fileOrUrl == null) {\n                    promiseToReturn.failure({container: imgOrCanvas, error: \"File or URL not found.\"});\n                }\n                else {\n                    this._imageGenerator.generate(fileOrUrl, imgOrCanvas, options).then(\n                        function success(modifiedContainer) {\n                            promiseToReturn.success(modifiedContainer);\n                        },\n\n                        function failure(container, reason) {\n                            promiseToReturn.failure({container: container, error: reason || \"Problem generating thumbnail\"});\n                        }\n                    );\n                }\n            }\n            else {\n                promiseToReturn.failure({container: imgOrCanvas, error: \"Missing image generator module\"});\n            }\n\n            return promiseToReturn;\n        },\n\n        getButton: function(fileId) {\n            return this._getButton(this._buttonIdsForFileIds[fileId]);\n        },\n\n        getEndpoint: function(fileId) {\n            return this._endpointStore.get(fileId);\n        },\n\n        getFile: function(fileOrBlobId) {\n            return this._handler.getFile(fileOrBlobId) || null;\n        },\n\n        getInProgress: function() {\n            return this._uploadData.retrieve({\n                status: [\n                    qq.status.UPLOADING,\n                    qq.status.UPLOAD_RETRYING,\n                    qq.status.QUEUED\n                ]\n            }).length;\n        },\n\n        getName: function(id) {\n            return this._uploadData.retrieve({id: id}).name;\n        },\n\n        // Parent ID for a specific file, or null if this is the parent, or if it has no parent.\n        getParentId: function(id) {\n            var uploadDataEntry = this.getUploads({id: id}),\n                parentId = null;\n\n            if (uploadDataEntry) {\n                if (uploadDataEntry.parentId !== undefined) {\n                    parentId = uploadDataEntry.parentId;\n                }\n            }\n\n            return parentId;\n        },\n\n        getResumableFilesData: function() {\n            return this._handler.getResumableFilesData();\n        },\n\n        getSize: function(id) {\n            return this._uploadData.retrieve({id: id}).size;\n        },\n\n        getNetUploads: function() {\n            return this._netUploaded;\n        },\n\n        getRemainingAllowedItems: function() {\n            var allowedItems = this._currentItemLimit;\n\n            if (allowedItems > 0) {\n                return allowedItems - this._netUploadedOrQueued;\n            }\n\n            return null;\n        },\n\n        getUploads: function(optionalFilter) {\n            return this._uploadData.retrieve(optionalFilter);\n        },\n\n        getUuid: function(id) {\n            return this._uploadData.retrieve({id: id}).uuid;\n        },\n\n        log: function(str, level) {\n            if (this._options.debug && (!level || level === \"info\")) {\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str);\n            }\n            else if (level && level !== \"info\") {\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str, level);\n\n            }\n        },\n\n        pauseUpload: function(id) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\n                return false;\n            }\n\n            // Pause only really makes sense if the file is uploading or retrying\n            if (qq.indexOf([qq.status.UPLOADING, qq.status.UPLOAD_RETRYING], uploadData.status) >= 0) {\n                if (this._handler.pause(id)) {\n                    this._uploadData.setStatus(id, qq.status.PAUSED);\n                    return true;\n                }\n                else {\n                    this.log(qq.format(\"Unable to pause file ID {} ({}).\", id, this.getName(id)), \"error\");\n                }\n            }\n            else {\n                this.log(qq.format(\"Ignoring pause for file ID {} ({}).  Not in progress.\", id, this.getName(id)), \"error\");\n            }\n\n            return false;\n        },\n\n        removeFileRef: function(id) {\n            this._handler.expunge(id);\n        },\n\n        reset: function() {\n            this.log(\"Resetting uploader...\");\n\n            this._handler.reset();\n            this._storedIds = [];\n            this._autoRetries = [];\n            this._retryTimeouts = [];\n            this._preventRetries = [];\n            this._thumbnailUrls = [];\n\n            qq.each(this._buttons, function(idx, button) {\n                button.reset();\n            });\n\n            this._paramsStore.reset();\n            this._endpointStore.reset();\n            this._netUploadedOrQueued = 0;\n            this._netUploaded = 0;\n            this._uploadData.reset();\n            this._buttonIdsForFileIds = [];\n\n            this._pasteHandler && this._pasteHandler.reset();\n            this._options.session.refreshOnReset && this._refreshSessionData();\n\n            this._succeededSinceLastAllComplete = [];\n            this._failedSinceLastAllComplete = [];\n\n            this._totalProgress && this._totalProgress.reset();\n        },\n\n        retry: function(id) {\n            return this._manualRetry(id);\n        },\n\n        scaleImage: function(id, specs) {\n            var self = this;\n\n            return qq.Scaler.prototype.scaleImage(id, specs, {\n                log: qq.bind(self.log, self),\n                getFile: qq.bind(self.getFile, self),\n                uploadData: self._uploadData\n            });\n        },\n\n        setCustomHeaders: function(headers, id) {\n            this._customHeadersStore.set(headers, id);\n        },\n\n        setDeleteFileCustomHeaders: function(headers, id) {\n            this._deleteFileCustomHeadersStore.set(headers, id);\n        },\n\n        setDeleteFileEndpoint: function(endpoint, id) {\n            this._deleteFileEndpointStore.set(endpoint, id);\n        },\n\n        setDeleteFileParams: function(params, id) {\n            this._deleteFileParamsStore.set(params, id);\n        },\n\n        // Re-sets the default endpoint, an endpoint for a specific file, or an endpoint for a specific button\n        setEndpoint: function(endpoint, id) {\n            this._endpointStore.set(endpoint, id);\n        },\n\n        setForm: function(elementOrId) {\n            this._updateFormSupportAndParams(elementOrId);\n        },\n\n        setItemLimit: function(newItemLimit) {\n            this._currentItemLimit = newItemLimit;\n        },\n\n        setName: function(id, newName) {\n            this._uploadData.updateName(id, newName);\n        },\n\n        setParams: function(params, id) {\n            this._paramsStore.set(params, id);\n        },\n\n        setUuid: function(id, newUuid) {\n            return this._uploadData.uuidChanged(id, newUuid);\n        },\n\n        /**\n         * Expose the internal status of a file id to the public api for manual state changes\n         * @public\n         *\n         * @param {Number} id,\n         * @param {String} newStatus\n         *\n         * @todo Implement the remaining methods\n         */\n        setStatus: function(id, newStatus) {\n            var fileRecord = this.getUploads({id: id});\n            if (!fileRecord) {\n                throw new qq.Error(id + \" is not a valid file ID.\");\n            }\n\n            switch (newStatus) {\n                case qq.status.DELETED:\n                    this._onDeleteComplete(id, null, false);\n                    break;\n                case qq.status.DELETE_FAILED:\n                    this._onDeleteComplete(id, null, true);\n                    break;\n                default:\n                    var errorMessage = \"Method setStatus called on '\" + name + \"' not implemented yet for \" + newStatus;\n                    this.log(errorMessage);\n                    throw new qq.Error(errorMessage);\n            }\n        },\n\n        uploadStoredFiles: function() {\n            if (this._storedIds.length === 0) {\n                this._itemError(\"noFilesError\");\n            }\n            else {\n                this._uploadStoredFiles();\n            }\n        }\n    };\n\n    /**\n     * Defines the private (internal) API for FineUploaderBasic mode.\n     */\n    qq.basePrivateApi = {\n        // Updates internal state with a file record (not backed by a live file).  Returns the assigned ID.\n        _addCannedFile: function(sessionData) {\n            var self = this;\n\n            return this._uploadData.addFile({\n                uuid: sessionData.uuid,\n                name: sessionData.name,\n                size: sessionData.size,\n                status: qq.status.UPLOAD_SUCCESSFUL,\n                onBeforeStatusChange: function(id) {\n                    sessionData.deleteFileEndpoint && self.setDeleteFileEndpoint(sessionData.deleteFileEndpoint, id);\n                    sessionData.deleteFileParams && self.setDeleteFileParams(sessionData.deleteFileParams, id);\n\n                    if (sessionData.thumbnailUrl) {\n                        self._thumbnailUrls[id] = sessionData.thumbnailUrl;\n                    }\n\n                    self._netUploaded++;\n                    self._netUploadedOrQueued++;\n                }\n            });\n        },\n\n        _annotateWithButtonId: function(file, associatedInput) {\n            if (qq.isFile(file)) {\n                file.qqButtonId = this._getButtonId(associatedInput);\n            }\n        },\n\n        _batchError: function(message) {\n            this._options.callbacks.onError(null, null, message, undefined);\n        },\n\n        _createDeleteHandler: function() {\n            var self = this;\n\n            return new qq.DeleteFileAjaxRequester({\n                method: this._options.deleteFile.method.toUpperCase(),\n                maxConnections: this._options.maxConnections,\n                uuidParamName: this._options.request.uuidName,\n                customHeaders: this._deleteFileCustomHeadersStore,\n                paramsStore: this._deleteFileParamsStore,\n                endpointStore: this._deleteFileEndpointStore,\n                cors: this._options.cors,\n                log: qq.bind(self.log, self),\n                onDelete: function(id) {\n                    self._onDelete(id);\n                    self._options.callbacks.onDelete(id);\n                },\n                onDeleteComplete: function(id, xhrOrXdr, isError) {\n                    self._onDeleteComplete(id, xhrOrXdr, isError);\n                    self._options.callbacks.onDeleteComplete(id, xhrOrXdr, isError);\n                }\n\n            });\n        },\n\n        _createPasteHandler: function() {\n            var self = this;\n\n            return new qq.PasteSupport({\n                targetElement: this._options.paste.targetElement,\n                callbacks: {\n                    log: qq.bind(self.log, self),\n                    pasteReceived: function(blob) {\n                        self._handleCheckedCallback({\n                            name: \"onPasteReceived\",\n                            callback: qq.bind(self._options.callbacks.onPasteReceived, self, blob),\n                            onSuccess: qq.bind(self._handlePasteSuccess, self, blob),\n                            identifier: \"pasted image\"\n                        });\n                    }\n                }\n            });\n        },\n\n        _createStore: function(initialValue, _readOnlyValues_) {\n            var store = {},\n                catchall = initialValue,\n                perIdReadOnlyValues = {},\n                readOnlyValues = _readOnlyValues_,\n                copy = function(orig) {\n                    if (qq.isObject(orig)) {\n                        return qq.extend({}, orig);\n                    }\n                    return orig;\n                },\n                getReadOnlyValues = function() {\n                    if (qq.isFunction(readOnlyValues)) {\n                        return readOnlyValues();\n                    }\n                    return readOnlyValues;\n                },\n                includeReadOnlyValues = function(id, existing) {\n                    if (readOnlyValues && qq.isObject(existing)) {\n                        qq.extend(existing, getReadOnlyValues());\n                    }\n\n                    if (perIdReadOnlyValues[id]) {\n                        qq.extend(existing, perIdReadOnlyValues[id]);\n                    }\n                };\n\n            return {\n                set: function(val, id) {\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    if (id == null) {\n                        store = {};\n                        catchall = copy(val);\n                    }\n                    else {\n                        store[id] = copy(val);\n                    }\n                },\n\n                get: function(id) {\n                    var values;\n\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    if (id != null && store[id]) {\n                        values = store[id];\n                    }\n                    else {\n                        values = copy(catchall);\n                    }\n\n                    includeReadOnlyValues(id, values);\n\n                    return copy(values);\n                },\n\n                addReadOnly: function(id, values) {\n                    // Only applicable to Object stores\n                    if (qq.isObject(store)) {\n                        // If null ID, apply readonly values to all files\n                        if (id === null) {\n                            if (qq.isFunction(values)) {\n                                readOnlyValues = values;\n                            }\n                            else {\n                                readOnlyValues = readOnlyValues || {};\n                                qq.extend(readOnlyValues, values);\n                            }\n                        }\n                        else {\n                            perIdReadOnlyValues[id] = perIdReadOnlyValues[id] || {};\n                            qq.extend(perIdReadOnlyValues[id], values);\n                        }\n                    }\n                },\n\n                remove: function(fileId) {\n                    return delete store[fileId];\n                },\n\n                reset: function() {\n                    store = {};\n                    perIdReadOnlyValues = {};\n                    catchall = initialValue;\n                }\n            };\n        },\n\n        _createUploadDataTracker: function() {\n            var self = this;\n\n            return new qq.UploadData({\n                getName: function(id) {\n                    return self.getName(id);\n                },\n                getUuid: function(id) {\n                    return self.getUuid(id);\n                },\n                getSize: function(id) {\n                    return self.getSize(id);\n                },\n                onStatusChange: function(id, oldStatus, newStatus) {\n                    self._onUploadStatusChange(id, oldStatus, newStatus);\n                    self._options.callbacks.onStatusChange(id, oldStatus, newStatus);\n                    self._maybeAllComplete(id, newStatus);\n\n                    if (self._totalProgress) {\n                        setTimeout(function() {\n                            self._totalProgress.onStatusChange(id, oldStatus, newStatus);\n                        }, 0);\n                    }\n                }\n            });\n        },\n\n        /**\n         * Generate a tracked upload button.\n         *\n         * @param spec Object containing a required `element` property\n         * along with optional `multiple`, `accept`, and `folders`.\n         * @returns {qq.UploadButton}\n         * @private\n         */\n        _createUploadButton: function(spec) {\n            var self = this,\n                acceptFiles = spec.accept || this._options.validation.acceptFiles,\n                allowedExtensions = spec.allowedExtensions || this._options.validation.allowedExtensions,\n                button;\n\n            function allowMultiple() {\n                if (qq.supportedFeatures.ajaxUploading) {\n                    // Workaround for bug in iOS7+ (see #1039)\n                    if (self._options.workarounds.iosEmptyVideos &&\n                        qq.ios() &&\n                        !qq.ios6() &&\n                        self._isAllowedExtension(allowedExtensions, \".mov\")) {\n\n                        return false;\n                    }\n\n                    if (spec.multiple === undefined) {\n                        return self._options.multiple;\n                    }\n\n                    return spec.multiple;\n                }\n\n                return false;\n            }\n\n            button = new qq.UploadButton({\n                acceptFiles: acceptFiles,\n                element: spec.element,\n                focusClass: this._options.classes.buttonFocus,\n                folders: spec.folders,\n                hoverClass: this._options.classes.buttonHover,\n                ios8BrowserCrashWorkaround: this._options.workarounds.ios8BrowserCrash,\n                multiple: allowMultiple(),\n                name: this._options.request.inputName,\n                onChange: function(input) {\n                    self._onInputChange(input);\n                },\n                title: spec.title == null ? this._options.text.fileInputTitle : spec.title\n            });\n\n            this._disposeSupport.addDisposer(function() {\n                button.dispose();\n            });\n\n            self._buttons.push(button);\n\n            return button;\n        },\n\n        _createUploadHandler: function(additionalOptions, namespace) {\n            var self = this,\n                lastOnProgress = {},\n                options = {\n                    debug: this._options.debug,\n                    maxConnections: this._options.maxConnections,\n                    cors: this._options.cors,\n                    paramsStore: this._paramsStore,\n                    endpointStore: this._endpointStore,\n                    chunking: this._options.chunking,\n                    resume: this._options.resume,\n                    blobs: this._options.blobs,\n                    log: qq.bind(self.log, self),\n                    preventRetryParam: this._options.retry.preventRetryResponseProperty,\n                    onProgress: function(id, name, loaded, total) {\n                        if (loaded < 0 || total < 0) {\n                            return;\n                        }\n\n                        if (lastOnProgress[id]) {\n                            if (lastOnProgress[id].loaded !== loaded || lastOnProgress[id].total !== total) {\n                                self._onProgress(id, name, loaded, total);\n                                self._options.callbacks.onProgress(id, name, loaded, total);\n                            }\n                        }\n                        else {\n                            self._onProgress(id, name, loaded, total);\n                            self._options.callbacks.onProgress(id, name, loaded, total);\n                        }\n\n                        lastOnProgress[id] = {loaded: loaded, total: total};\n\n                    },\n                    onComplete: function(id, name, result, xhr) {\n                        delete lastOnProgress[id];\n\n                        var status = self.getUploads({id: id}).status,\n                            retVal;\n\n                        // This is to deal with some observed cases where the XHR readyStateChange handler is\n                        // invoked by the browser multiple times for the same XHR instance with the same state\n                        // readyState value.  Higher level: don't invoke complete-related code if we've already\n                        // done this.\n                        if (status === qq.status.UPLOAD_SUCCESSFUL || status === qq.status.UPLOAD_FAILED) {\n                            return;\n                        }\n\n                        retVal = self._onComplete(id, name, result, xhr);\n\n                        // If the internal `_onComplete` handler returns a promise, don't invoke the `onComplete` callback\n                        // until the promise has been fulfilled.\n                        if (retVal instanceof  qq.Promise) {\n                            retVal.done(function() {\n                                self._options.callbacks.onComplete(id, name, result, xhr);\n                            });\n                        }\n                        else {\n                            self._options.callbacks.onComplete(id, name, result, xhr);\n                        }\n                    },\n                    onCancel: function(id, name, cancelFinalizationEffort) {\n                        var promise = new qq.Promise();\n\n                        self._handleCheckedCallback({\n                            name: \"onCancel\",\n                            callback: qq.bind(self._options.callbacks.onCancel, self, id, name),\n                            onFailure: promise.failure,\n                            onSuccess: function() {\n                                cancelFinalizationEffort.then(function() {\n                                    self._onCancel(id, name);\n                                });\n\n                                promise.success();\n                            },\n                            identifier: id\n                        });\n\n                        return promise;\n                    },\n                    onUploadPrep: qq.bind(this._onUploadPrep, this),\n                    onUpload: function(id, name) {\n                        self._onUpload(id, name);\n                        self._options.callbacks.onUpload(id, name);\n                    },\n                    onUploadChunk: function(id, name, chunkData) {\n                        self._onUploadChunk(id, chunkData);\n                        self._options.callbacks.onUploadChunk(id, name, chunkData);\n                    },\n                    onUploadChunkSuccess: function(id, chunkData, result, xhr) {\n                        self._onUploadChunkSuccess(id, chunkData);\n                        self._options.callbacks.onUploadChunkSuccess.apply(self, arguments);\n                    },\n                    onResume: function(id, name, chunkData) {\n                        return self._options.callbacks.onResume(id, name, chunkData);\n                    },\n                    onAutoRetry: function(id, name, responseJSON, xhr) {\n                        return self._onAutoRetry.apply(self, arguments);\n                    },\n                    onUuidChanged: function(id, newUuid) {\n                        self.log(\"Server requested UUID change from '\" + self.getUuid(id) + \"' to '\" + newUuid + \"'\");\n                        self.setUuid(id, newUuid);\n                    },\n                    getName: qq.bind(self.getName, self),\n                    getUuid: qq.bind(self.getUuid, self),\n                    getSize: qq.bind(self.getSize, self),\n                    setSize: qq.bind(self._setSize, self),\n                    getDataByUuid: function(uuid) {\n                        return self.getUploads({uuid: uuid});\n                    },\n                    isQueued: function(id) {\n                        var status = self.getUploads({id: id}).status;\n                        return status === qq.status.QUEUED ||\n                            status === qq.status.SUBMITTED ||\n                            status === qq.status.UPLOAD_RETRYING ||\n                            status === qq.status.PAUSED;\n                    },\n                    getIdsInProxyGroup: self._uploadData.getIdsInProxyGroup,\n                    getIdsInBatch: self._uploadData.getIdsInBatch\n                };\n\n            qq.each(this._options.request, function(prop, val) {\n                options[prop] = val;\n            });\n\n            options.customHeaders = this._customHeadersStore;\n\n            if (additionalOptions) {\n                qq.each(additionalOptions, function(key, val) {\n                    options[key] = val;\n                });\n            }\n\n            return new qq.UploadHandlerController(options, namespace);\n        },\n\n        _fileOrBlobRejected: function(id) {\n            this._netUploadedOrQueued--;\n            this._uploadData.setStatus(id, qq.status.REJECTED);\n        },\n\n        _formatSize: function(bytes) {\n            if (bytes === 0) {\n                return bytes + this._options.text.sizeSymbols[0];\n            }\n            var i = -1;\n            do {\n                bytes = bytes / 1000;\n                i++;\n            } while (bytes > 999);\n\n            return Math.max(bytes, 0.1).toFixed(1) + this._options.text.sizeSymbols[i];\n        },\n\n        // Creates an internal object that tracks various properties of each extra button,\n        // and then actually creates the extra button.\n        _generateExtraButtonSpecs: function() {\n            var self = this;\n\n            this._extraButtonSpecs = {};\n\n            qq.each(this._options.extraButtons, function(idx, extraButtonOptionEntry) {\n                var multiple = extraButtonOptionEntry.multiple,\n                    validation = qq.extend({}, self._options.validation, true),\n                    extraButtonSpec = qq.extend({}, extraButtonOptionEntry);\n\n                if (multiple === undefined) {\n                    multiple = self._options.multiple;\n                }\n\n                if (extraButtonSpec.validation) {\n                    qq.extend(validation, extraButtonOptionEntry.validation, true);\n                }\n\n                qq.extend(extraButtonSpec, {\n                    multiple: multiple,\n                    validation: validation\n                }, true);\n\n                self._initExtraButton(extraButtonSpec);\n            });\n        },\n\n        _getButton: function(buttonId) {\n            var extraButtonsSpec = this._extraButtonSpecs[buttonId];\n\n            if (extraButtonsSpec) {\n                return extraButtonsSpec.element;\n            }\n            else if (buttonId === this._defaultButtonId) {\n                return this._options.button;\n            }\n        },\n\n        /**\n         * Gets the internally used tracking ID for a button.\n         *\n         * @param buttonOrFileInputOrFile `File`, `<input type=\"file\">`, or a button container element\n         * @returns {*} The button's ID, or undefined if no ID is recoverable\n         * @private\n         */\n        _getButtonId: function(buttonOrFileInputOrFile) {\n            var inputs, fileInput,\n                fileBlobOrInput = buttonOrFileInputOrFile;\n\n            // We want the reference file/blob here if this is a proxy (a file that will be generated on-demand later)\n            if (fileBlobOrInput instanceof qq.BlobProxy) {\n                fileBlobOrInput = fileBlobOrInput.referenceBlob;\n            }\n\n            // If the item is a `Blob` it will never be associated with a button or drop zone.\n            if (fileBlobOrInput && !qq.isBlob(fileBlobOrInput)) {\n                if (qq.isFile(fileBlobOrInput)) {\n                    return fileBlobOrInput.qqButtonId;\n                }\n                else if (fileBlobOrInput.tagName.toLowerCase() === \"input\" &&\n                    fileBlobOrInput.type.toLowerCase() === \"file\") {\n\n                    return fileBlobOrInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\n                }\n\n                inputs = fileBlobOrInput.getElementsByTagName(\"input\");\n\n                qq.each(inputs, function(idx, input) {\n                    if (input.getAttribute(\"type\") === \"file\") {\n                        fileInput = input;\n                        return false;\n                    }\n                });\n\n                if (fileInput) {\n                    return fileInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\n                }\n            }\n        },\n\n        _getNotFinished: function() {\n            return this._uploadData.retrieve({\n                status: [\n                    qq.status.UPLOADING,\n                    qq.status.UPLOAD_RETRYING,\n                    qq.status.QUEUED,\n                    qq.status.SUBMITTING,\n                    qq.status.SUBMITTED,\n                    qq.status.PAUSED\n                ]\n            }).length;\n        },\n\n        // Get the validation options for this button.  Could be the default validation option\n        // or a specific one assigned to this particular button.\n        _getValidationBase: function(buttonId) {\n            var extraButtonSpec = this._extraButtonSpecs[buttonId];\n\n            return extraButtonSpec ? extraButtonSpec.validation : this._options.validation;\n        },\n\n        _getValidationDescriptor: function(fileWrapper) {\n            if (fileWrapper.file instanceof qq.BlobProxy) {\n                return {\n                    name: qq.getFilename(fileWrapper.file.referenceBlob),\n                    size: fileWrapper.file.referenceBlob.size\n                };\n            }\n\n            return {\n                name: this.getUploads({id: fileWrapper.id}).name,\n                size: this.getUploads({id: fileWrapper.id}).size\n            };\n        },\n\n        _getValidationDescriptors: function(fileWrappers) {\n            var self = this,\n                fileDescriptors = [];\n\n            qq.each(fileWrappers, function(idx, fileWrapper) {\n                fileDescriptors.push(self._getValidationDescriptor(fileWrapper));\n            });\n\n            return fileDescriptors;\n        },\n\n        // Allows camera access on either the default or an extra button for iOS devices.\n        _handleCameraAccess: function() {\n            if (this._options.camera.ios && qq.ios()) {\n                var acceptIosCamera = \"image/*;capture=camera\",\n                    button = this._options.camera.button,\n                    buttonId = button ? this._getButtonId(button) : this._defaultButtonId,\n                    optionRoot = this._options;\n\n                // If we are not targeting the default button, it is an \"extra\" button\n                if (buttonId && buttonId !== this._defaultButtonId) {\n                    optionRoot = this._extraButtonSpecs[buttonId];\n                }\n\n                // Camera access won't work in iOS if the `multiple` attribute is present on the file input\n                optionRoot.multiple = false;\n\n                // update the options\n                if (optionRoot.validation.acceptFiles === null) {\n                    optionRoot.validation.acceptFiles = acceptIosCamera;\n                }\n                else {\n                    optionRoot.validation.acceptFiles += \",\" + acceptIosCamera;\n                }\n\n                // update the already-created button\n                qq.each(this._buttons, function(idx, button) {\n                    if (button.getButtonId() === buttonId) {\n                        button.setMultiple(optionRoot.multiple);\n                        button.setAcceptFiles(optionRoot.acceptFiles);\n\n                        return false;\n                    }\n                });\n            }\n        },\n\n        _handleCheckedCallback: function(details) {\n            var self = this,\n                callbackRetVal = details.callback();\n\n            if (qq.isGenericPromise(callbackRetVal)) {\n                this.log(details.name + \" - waiting for \" + details.name + \" promise to be fulfilled for \" + details.identifier);\n                return callbackRetVal.then(\n                    function(successParam) {\n                        self.log(details.name + \" promise success for \" + details.identifier);\n                        details.onSuccess(successParam);\n                    },\n                    function() {\n                        if (details.onFailure) {\n                            self.log(details.name + \" promise failure for \" + details.identifier);\n                            details.onFailure();\n                        }\n                        else {\n                            self.log(details.name + \" promise failure for \" + details.identifier);\n                        }\n                    });\n            }\n\n            if (callbackRetVal !== false) {\n                details.onSuccess(callbackRetVal);\n            }\n            else {\n                if (details.onFailure) {\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Invoking failure callback.\");\n                    details.onFailure();\n                }\n                else {\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Will not proceed.\");\n                }\n            }\n\n            return callbackRetVal;\n        },\n\n        // Updates internal state when a new file has been received, and adds it along with its ID to a passed array.\n        _handleNewFile: function(file, batchId, newFileWrapperList) {\n            var self = this,\n                uuid = qq.getUniqueId(),\n                size = -1,\n                name = qq.getFilename(file),\n                actualFile = file.blob || file,\n                handler = this._customNewFileHandler ?\n                    this._customNewFileHandler :\n                    qq.bind(self._handleNewFileGeneric, self);\n\n            if (!qq.isInput(actualFile) && actualFile.size >= 0) {\n                size = actualFile.size;\n            }\n\n            handler(actualFile, name, uuid, size, newFileWrapperList, batchId, this._options.request.uuidName, {\n                uploadData: self._uploadData,\n                paramsStore: self._paramsStore,\n                addFileToHandler: function(id, file) {\n                    self._handler.add(id, file);\n                    self._netUploadedOrQueued++;\n                    self._trackButton(id);\n                }\n            });\n        },\n\n        _handleNewFileGeneric: function(file, name, uuid, size, fileList, batchId) {\n            var id = this._uploadData.addFile({uuid: uuid, name: name, size: size, batchId: batchId});\n\n            this._handler.add(id, file);\n            this._trackButton(id);\n\n            this._netUploadedOrQueued++;\n\n            fileList.push({id: id, file: file});\n        },\n\n        _handlePasteSuccess: function(blob, extSuppliedName) {\n            var extension = blob.type.split(\"/\")[1],\n                name = extSuppliedName;\n\n            /*jshint eqeqeq: true, eqnull: true*/\n            if (name == null) {\n                name = this._options.paste.defaultName;\n            }\n\n            name += \".\" + extension;\n\n            this.addFiles({\n                name: name,\n                blob: blob\n            });\n        },\n\n        _handleDeleteSuccess: function(id) {\n            if (this.getUploads({id: id}).status !== qq.status.DELETED) {\n                var name = this.getName(id);\n\n                this._netUploadedOrQueued--;\n                this._netUploaded--;\n                this._handler.expunge(id);\n                this._uploadData.setStatus(id, qq.status.DELETED);\n                this.log(\"Delete request for '\" + name + \"' has succeeded.\");\n            }\n        },\n\n        _handleDeleteFailed: function(id, xhrOrXdr) {\n            var name = this.getName(id);\n\n            this._uploadData.setStatus(id, qq.status.DELETE_FAILED);\n            this.log(\"Delete request for '\" + name + \"' has failed.\", \"error\");\n\n            // Check first if xhrOrXdr is actually passed or valid\n            // For error reporting, we only have access to the response status if this is not\n            // an `XDomainRequest`.\n            if (!xhrOrXdr || xhrOrXdr.withCredentials === undefined) {\n                this._options.callbacks.onError(id, name, \"Delete request failed\", xhrOrXdr);\n            }\n            else {\n                this._options.callbacks.onError(id, name, \"Delete request failed with response code \" + xhrOrXdr.status, xhrOrXdr);\n            }\n        },\n\n        // Creates an extra button element\n        _initExtraButton: function(spec) {\n            var button = this._createUploadButton({\n                accept: spec.validation.acceptFiles,\n                allowedExtensions: spec.validation.allowedExtensions,\n                element: spec.element,\n                folders: spec.folders,\n                multiple: spec.multiple,\n                title: spec.fileInputTitle\n            });\n\n            this._extraButtonSpecs[button.getButtonId()] = spec;\n        },\n\n        _initFormSupportAndParams: function() {\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\n                this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\n            );\n\n            if (this._formSupport && this._formSupport.attachedToForm) {\n                this._paramsStore = this._createStore(\n                    this._options.request.params,  this._formSupport.getFormInputsAsObject\n                );\n\n                this._options.autoUpload = this._formSupport.newAutoUpload;\n                if (this._formSupport.newEndpoint) {\n                    this._options.request.endpoint = this._formSupport.newEndpoint;\n                }\n            }\n            else {\n                this._paramsStore = this._createStore(this._options.request.params);\n            }\n        },\n\n        _isDeletePossible: function() {\n            if (!qq.DeleteFileAjaxRequester || !this._options.deleteFile.enabled) {\n                return false;\n            }\n\n            if (this._options.cors.expected) {\n                if (qq.supportedFeatures.deleteFileCorsXhr) {\n                    return true;\n                }\n\n                if (qq.supportedFeatures.deleteFileCorsXdr && this._options.cors.allowXdr) {\n                    return true;\n                }\n\n                return false;\n            }\n\n            return true;\n        },\n\n        _isAllowedExtension: function(allowed, fileName) {\n            var valid = false;\n\n            if (!allowed.length) {\n                return true;\n            }\n\n            qq.each(allowed, function(idx, allowedExt) {\n                /**\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\n                 */\n                if (qq.isString(allowedExt)) {\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    var extRegex = new RegExp(\"\\\\.\" + allowedExt + \"$\", \"i\");\n\n                    if (fileName.match(extRegex) != null) {\n                        valid = true;\n                        return false;\n                    }\n                }\n            });\n\n            return valid;\n        },\n\n        /**\n         * Constructs and returns a message that describes an item/file error.  Also calls `onError` callback.\n         *\n         * @param code REQUIRED - a code that corresponds to a stock message describing this type of error\n         * @param maybeNameOrNames names of the items that have failed, if applicable\n         * @param item `File`, `Blob`, or `<input type=\"file\">`\n         * @private\n         */\n        _itemError: function(code, maybeNameOrNames, item) {\n            var message = this._options.messages[code],\n                allowedExtensions = [],\n                names = [].concat(maybeNameOrNames),\n                name = names[0],\n                buttonId = this._getButtonId(item),\n                validationBase = this._getValidationBase(buttonId),\n                extensionsForMessage, placeholderMatch;\n\n            function r(name, replacement) { message = message.replace(name, replacement); }\n\n            qq.each(validationBase.allowedExtensions, function(idx, allowedExtension) {\n                /**\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\n                 */\n                if (qq.isString(allowedExtension)) {\n                    allowedExtensions.push(allowedExtension);\n                }\n            });\n\n            extensionsForMessage = allowedExtensions.join(\", \").toLowerCase();\n\n            r(\"{file}\", this._options.formatFileName(name));\n            r(\"{extensions}\", extensionsForMessage);\n            r(\"{sizeLimit}\", this._formatSize(validationBase.sizeLimit));\n            r(\"{minSizeLimit}\", this._formatSize(validationBase.minSizeLimit));\n\n            placeholderMatch = message.match(/(\\{\\w+\\})/g);\n            if (placeholderMatch !== null) {\n                qq.each(placeholderMatch, function(idx, placeholder) {\n                    r(placeholder, names[idx]);\n                });\n            }\n\n            this._options.callbacks.onError(null, name, message, undefined);\n\n            return message;\n        },\n\n        /**\n         * Conditionally orders a manual retry of a failed upload.\n         *\n         * @param id File ID of the failed upload\n         * @param callback Optional callback to invoke if a retry is prudent.\n         * In lieu of asking the upload handler to retry.\n         * @returns {boolean} true if a manual retry will occur\n         * @private\n         */\n        _manualRetry: function(id, callback) {\n            if (this._onBeforeManualRetry(id)) {\n                this._netUploadedOrQueued++;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\n\n                if (callback) {\n                    callback(id);\n                }\n                else {\n                    this._handler.retry(id);\n                }\n\n                return true;\n            }\n        },\n\n        _maybeAllComplete: function(id, status) {\n            var self = this,\n                notFinished = this._getNotFinished();\n\n            if (status === qq.status.UPLOAD_SUCCESSFUL) {\n                this._succeededSinceLastAllComplete.push(id);\n            }\n            else if (status === qq.status.UPLOAD_FAILED) {\n                this._failedSinceLastAllComplete.push(id);\n            }\n\n            if (notFinished === 0 &&\n                (this._succeededSinceLastAllComplete.length || this._failedSinceLastAllComplete.length)) {\n                // Attempt to ensure onAllComplete is not invoked before other callbacks, such as onCancel & onComplete\n                setTimeout(function() {\n                    self._onAllComplete(self._succeededSinceLastAllComplete, self._failedSinceLastAllComplete);\n                }, 0);\n            }\n        },\n\n        _maybeHandleIos8SafariWorkaround: function() {\n            var self = this;\n\n            if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\n                setTimeout(function() {\n                    window.alert(self._options.messages.unsupportedBrowserIos8Safari);\n                }, 0);\n                throw new qq.Error(this._options.messages.unsupportedBrowserIos8Safari);\n            }\n        },\n\n        _maybeParseAndSendUploadError: function(id, name, response, xhr) {\n            // Assuming no one will actually set the response code to something other than 200\n            // and still set 'success' to true...\n            if (!response.success) {\n                if (xhr && xhr.status !== 200 && !response.error) {\n                    this._options.callbacks.onError(id, name, \"XHR returned response code \" + xhr.status, xhr);\n                }\n                else {\n                    var errorReason = response.error ? response.error : this._options.text.defaultResponseError;\n                    this._options.callbacks.onError(id, name, errorReason, xhr);\n                }\n            }\n        },\n\n        _maybeProcessNextItemAfterOnValidateCallback: function(validItem, items, index, params, endpoint) {\n            var self = this;\n\n            if (items.length > index) {\n                if (validItem || !this._options.validation.stopOnFirstInvalidFile) {\n                    //use setTimeout to prevent a stack overflow with a large number of files in the batch & non-promissory callbacks\n                    setTimeout(function() {\n                        var validationDescriptor = self._getValidationDescriptor(items[index]),\n                            buttonId = self._getButtonId(items[index].file),\n                            button = self._getButton(buttonId);\n\n                        self._handleCheckedCallback({\n                            name: \"onValidate\",\n                            callback: qq.bind(self._options.callbacks.onValidate, self, validationDescriptor, button),\n                            onSuccess: qq.bind(self._onValidateCallbackSuccess, self, items, index, params, endpoint),\n                            onFailure: qq.bind(self._onValidateCallbackFailure, self, items, index, params, endpoint),\n                            identifier: \"Item '\" + validationDescriptor.name + \"', size: \" + validationDescriptor.size\n                        });\n                    }, 0);\n                }\n                else if (!validItem) {\n                    for (; index < items.length; index++) {\n                        self._fileOrBlobRejected(items[index].id);\n                    }\n                }\n            }\n        },\n\n        _onAllComplete: function(successful, failed) {\n            this._totalProgress && this._totalProgress.onAllComplete(successful, failed, this._preventRetries);\n\n            this._options.callbacks.onAllComplete(qq.extend([], successful), qq.extend([], failed));\n\n            this._succeededSinceLastAllComplete = [];\n            this._failedSinceLastAllComplete = [];\n        },\n\n        /**\n         * Attempt to automatically retry a failed upload.\n         *\n         * @param id The file ID of the failed upload\n         * @param name The name of the file associated with the failed upload\n         * @param responseJSON Response from the server, parsed into a javascript object\n         * @param xhr Ajax transport used to send the failed request\n         * @param callback Optional callback to be invoked if a retry is prudent.\n         * Invoked in lieu of asking the upload handler to retry.\n         * @returns {boolean} true if an auto-retry will occur\n         * @private\n         */\n        _onAutoRetry: function(id, name, responseJSON, xhr, callback) {\n            var self = this;\n\n            self._preventRetries[id] = responseJSON[self._options.retry.preventRetryResponseProperty];\n\n            if (self._shouldAutoRetry(id, name, responseJSON)) {\n                var retryWaitPeriod = self._options.retry.autoAttemptDelay * 1000;\n\n                self._maybeParseAndSendUploadError.apply(self, arguments);\n                self._options.callbacks.onAutoRetry(id, name, self._autoRetries[id]);\n                self._onBeforeAutoRetry(id, name);\n\n                self._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\n                self._retryTimeouts[id] = setTimeout(function() {\n                    self.log(\"Starting retry for \" + name + \"...\");\n\n                    if (callback) {\n                        callback(id);\n                    }\n                    else {\n                        self._handler.retry(id);\n                    }\n                }, retryWaitPeriod);\n\n                return true;\n            }\n        },\n\n        _onBeforeAutoRetry: function(id, name) {\n            this.log(\"Waiting \" + this._options.retry.autoAttemptDelay + \" seconds before retrying \" + name + \"...\");\n        },\n\n        //return false if we should not attempt the requested retry\n        _onBeforeManualRetry: function(id) {\n            var itemLimit = this._currentItemLimit,\n                fileName;\n\n            if (this._preventRetries[id]) {\n                this.log(\"Retries are forbidden for id \" + id, \"warn\");\n                return false;\n            }\n            else if (this._handler.isValid(id)) {\n                fileName = this.getName(id);\n\n                if (this._options.callbacks.onManualRetry(id, fileName) === false) {\n                    return false;\n                }\n\n                if (itemLimit > 0 && this._netUploadedOrQueued + 1 > itemLimit) {\n                    this._itemError(\"retryFailTooManyItems\");\n                    return false;\n                }\n\n                this.log(\"Retrying upload for '\" + fileName + \"' (id: \" + id + \")...\");\n                return true;\n            }\n            else {\n                this.log(\"'\" + id + \"' is not a valid file ID\", \"error\");\n                return false;\n            }\n        },\n\n        _onCancel: function(id, name) {\n            this._netUploadedOrQueued--;\n\n            clearTimeout(this._retryTimeouts[id]);\n\n            var storedItemIndex = qq.indexOf(this._storedIds, id);\n            if (!this._options.autoUpload && storedItemIndex >= 0) {\n                this._storedIds.splice(storedItemIndex, 1);\n            }\n\n            this._uploadData.setStatus(id, qq.status.CANCELED);\n        },\n\n        _onComplete: function(id, name, result, xhr) {\n            if (!result.success) {\n                this._netUploadedOrQueued--;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_FAILED);\n\n                if (result[this._options.retry.preventRetryResponseProperty] === true) {\n                    this._preventRetries[id] = true;\n                }\n            }\n            else {\n                if (result.thumbnailUrl) {\n                    this._thumbnailUrls[id] = result.thumbnailUrl;\n                }\n\n                this._netUploaded++;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_SUCCESSFUL);\n            }\n\n            this._maybeParseAndSendUploadError(id, name, result, xhr);\n\n            return result.success ? true : false;\n        },\n\n        _onDelete: function(id) {\n            this._uploadData.setStatus(id, qq.status.DELETING);\n        },\n\n        _onDeleteComplete: function(id, xhrOrXdr, isError) {\n            var name = this.getName(id);\n\n            if (isError) {\n                this._handleDeleteFailed(id, xhrOrXdr);\n            }\n            else {\n                this._handleDeleteSuccess(id);\n            }\n        },\n\n        _onInputChange: function(input) {\n            var fileIndex;\n\n            if (qq.supportedFeatures.ajaxUploading) {\n                for (fileIndex = 0; fileIndex < input.files.length; fileIndex++) {\n                    this._annotateWithButtonId(input.files[fileIndex], input);\n                }\n\n                this.addFiles(input.files);\n            }\n            // Android 2.3.x will fire `onchange` even if no file has been selected\n            else if (input.value.length > 0) {\n                this.addFiles(input);\n            }\n\n            qq.each(this._buttons, function(idx, button) {\n                button.reset();\n            });\n        },\n\n        _onProgress: function(id, name, loaded, total) {\n            this._totalProgress && this._totalProgress.onIndividualProgress(id, loaded, total);\n        },\n\n        _onSubmit: function(id, name) {\n            //nothing to do yet in core uploader\n        },\n\n        _onSubmitCallbackSuccess: function(id, name) {\n            this._onSubmit.apply(this, arguments);\n            this._uploadData.setStatus(id, qq.status.SUBMITTED);\n            this._onSubmitted.apply(this, arguments);\n\n            if (this._options.autoUpload) {\n                this._options.callbacks.onSubmitted.apply(this, arguments);\n                this._uploadFile(id);\n            }\n            else {\n                this._storeForLater(id);\n                this._options.callbacks.onSubmitted.apply(this, arguments);\n            }\n        },\n\n        _onSubmitDelete: function(id, onSuccessCallback, additionalMandatedParams) {\n            var uuid = this.getUuid(id),\n                adjustedOnSuccessCallback;\n\n            if (onSuccessCallback) {\n                adjustedOnSuccessCallback = qq.bind(onSuccessCallback, this, id, uuid, additionalMandatedParams);\n            }\n\n            if (this._isDeletePossible()) {\n                this._handleCheckedCallback({\n                    name: \"onSubmitDelete\",\n                    callback: qq.bind(this._options.callbacks.onSubmitDelete, this, id),\n                    onSuccess: adjustedOnSuccessCallback ||\n                        qq.bind(this._deleteHandler.sendDelete, this, id, uuid, additionalMandatedParams),\n                    identifier: id\n                });\n                return true;\n            }\n            else {\n                this.log(\"Delete request ignored for ID \" + id + \", delete feature is disabled or request not possible \" +\n                    \"due to CORS on a user agent that does not support pre-flighting.\", \"warn\");\n                return false;\n            }\n        },\n\n        _onSubmitted: function(id) {\n            //nothing to do in the base uploader\n        },\n\n        _onTotalProgress: function(loaded, total) {\n            this._options.callbacks.onTotalProgress(loaded, total);\n        },\n\n        _onUploadPrep: function(id) {\n            // nothing to do in the core uploader for now\n        },\n\n        _onUpload: function(id, name) {\n            this._uploadData.setStatus(id, qq.status.UPLOADING);\n        },\n\n        _onUploadChunk: function(id, chunkData) {\n            //nothing to do in the base uploader\n        },\n\n        _onUploadChunkSuccess: function(id, chunkData) {\n            if (!this._preventRetries[id] && this._options.retry.enableAuto) {\n                this._autoRetries[id] = 0;\n            }\n        },\n\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\n            // Make sure a \"queued\" retry attempt is canceled if the upload has been paused\n            if (newStatus === qq.status.PAUSED) {\n                clearTimeout(this._retryTimeouts[id]);\n            }\n        },\n\n        _onValidateBatchCallbackFailure: function(fileWrappers) {\n            var self = this;\n\n            qq.each(fileWrappers, function(idx, fileWrapper) {\n                self._fileOrBlobRejected(fileWrapper.id);\n            });\n        },\n\n        _onValidateBatchCallbackSuccess: function(validationDescriptors, items, params, endpoint, button) {\n            var errorMessage,\n                itemLimit = this._currentItemLimit,\n                proposedNetFilesUploadedOrQueued = this._netUploadedOrQueued;\n\n            if (itemLimit === 0 || proposedNetFilesUploadedOrQueued <= itemLimit) {\n                if (items.length > 0) {\n                    this._handleCheckedCallback({\n                        name: \"onValidate\",\n                        callback: qq.bind(this._options.callbacks.onValidate, this, validationDescriptors[0], button),\n                        onSuccess: qq.bind(this._onValidateCallbackSuccess, this, items, 0, params, endpoint),\n                        onFailure: qq.bind(this._onValidateCallbackFailure, this, items, 0, params, endpoint),\n                        identifier: \"Item '\" + items[0].file.name + \"', size: \" + items[0].file.size\n                    });\n                }\n                else {\n                    this._itemError(\"noFilesError\");\n                }\n            }\n            else {\n                this._onValidateBatchCallbackFailure(items);\n                errorMessage = this._options.messages.tooManyItemsError\n                    .replace(/\\{netItems\\}/g, proposedNetFilesUploadedOrQueued)\n                    .replace(/\\{itemLimit\\}/g, itemLimit);\n                this._batchError(errorMessage);\n            }\n        },\n\n        _onValidateCallbackFailure: function(items, index, params, endpoint) {\n            var nextIndex = index + 1;\n\n            this._fileOrBlobRejected(items[index].id, items[index].file.name);\n\n            this._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\n        },\n\n        _onValidateCallbackSuccess: function(items, index, params, endpoint) {\n            var self = this,\n                nextIndex = index + 1,\n                validationDescriptor = this._getValidationDescriptor(items[index]);\n\n            this._validateFileOrBlobData(items[index], validationDescriptor)\n                .then(\n                function() {\n                    self._upload(items[index].id, params, endpoint);\n                    self._maybeProcessNextItemAfterOnValidateCallback(true, items, nextIndex, params, endpoint);\n                },\n                function() {\n                    self._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\n                }\n            );\n        },\n\n        _prepareItemsForUpload: function(items, params, endpoint) {\n            if (items.length === 0) {\n                this._itemError(\"noFilesError\");\n                return;\n            }\n\n            var validationDescriptors = this._getValidationDescriptors(items),\n                buttonId = this._getButtonId(items[0].file),\n                button = this._getButton(buttonId);\n\n            this._handleCheckedCallback({\n                name: \"onValidateBatch\",\n                callback: qq.bind(this._options.callbacks.onValidateBatch, this, validationDescriptors, button),\n                onSuccess: qq.bind(this._onValidateBatchCallbackSuccess, this, validationDescriptors, items, params, endpoint, button),\n                onFailure: qq.bind(this._onValidateBatchCallbackFailure, this, items),\n                identifier: \"batch validation\"\n            });\n        },\n\n        _preventLeaveInProgress: function() {\n            var self = this;\n\n            this._disposeSupport.attach(window, \"beforeunload\", function(e) {\n                if (self.getInProgress()) {\n                    e = e || window.event;\n                    // for ie, ff\n                    e.returnValue = self._options.messages.onLeave;\n                    // for webkit\n                    return self._options.messages.onLeave;\n                }\n            });\n        },\n\n        // Attempts to refresh session data only if the `qq.Session` module exists\n        // and a session endpoint has been specified.  The `onSessionRequestComplete`\n        // callback will be invoked once the refresh is complete.\n        _refreshSessionData: function() {\n            var self = this,\n                options = this._options.session;\n\n            /* jshint eqnull:true */\n            if (qq.Session && this._options.session.endpoint != null) {\n                if (!this._session) {\n                    qq.extend(options, {cors: this._options.cors});\n\n                    options.log = qq.bind(this.log, this);\n                    options.addFileRecord = qq.bind(this._addCannedFile, this);\n\n                    this._session = new qq.Session(options);\n                }\n\n                setTimeout(function() {\n                    self._session.refresh().then(function(response, xhrOrXdr) {\n                        self._sessionRequestComplete();\n                        self._options.callbacks.onSessionRequestComplete(response, true, xhrOrXdr);\n\n                    }, function(response, xhrOrXdr) {\n\n                        self._options.callbacks.onSessionRequestComplete(response, false, xhrOrXdr);\n                    });\n                }, 0);\n            }\n        },\n\n        _sessionRequestComplete: function() {},\n\n        _setSize: function(id, newSize) {\n            this._uploadData.updateSize(id, newSize);\n            this._totalProgress && this._totalProgress.onNewSize(id);\n        },\n\n        _shouldAutoRetry: function(id, name, responseJSON) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            /*jshint laxbreak: true */\n            if (!this._preventRetries[id]\n                && this._options.retry.enableAuto\n                && uploadData.status !== qq.status.PAUSED) {\n\n                if (this._autoRetries[id] === undefined) {\n                    this._autoRetries[id] = 0;\n                }\n\n                if (this._autoRetries[id] < this._options.retry.maxAutoAttempts) {\n                    this._autoRetries[id] += 1;\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        _storeForLater: function(id) {\n            this._storedIds.push(id);\n        },\n\n        // Maps a file with the button that was used to select it.\n        _trackButton: function(id) {\n            var buttonId;\n\n            if (qq.supportedFeatures.ajaxUploading) {\n                buttonId = this._handler.getFile(id).qqButtonId;\n            }\n            else {\n                buttonId = this._getButtonId(this._handler.getInput(id));\n            }\n\n            if (buttonId) {\n                this._buttonIdsForFileIds[id] = buttonId;\n            }\n        },\n\n        _updateFormSupportAndParams: function(formElementOrId) {\n            this._options.form.element = formElementOrId;\n\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\n                    this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\n                );\n\n            if (this._formSupport && this._formSupport.attachedToForm) {\n                this._paramsStore.addReadOnly(null, this._formSupport.getFormInputsAsObject);\n\n                this._options.autoUpload = this._formSupport.newAutoUpload;\n                if (this._formSupport.newEndpoint) {\n                    this.setEndpoint(this._formSupport.newEndpoint);\n                }\n            }\n        },\n\n        _upload: function(id, params, endpoint) {\n            var name = this.getName(id);\n\n            if (params) {\n                this.setParams(params, id);\n            }\n\n            if (endpoint) {\n                this.setEndpoint(endpoint, id);\n            }\n\n            this._handleCheckedCallback({\n                name: \"onSubmit\",\n                callback: qq.bind(this._options.callbacks.onSubmit, this, id, name),\n                onSuccess: qq.bind(this._onSubmitCallbackSuccess, this, id, name),\n                onFailure: qq.bind(this._fileOrBlobRejected, this, id, name),\n                identifier: id\n            });\n        },\n\n        _uploadFile: function(id) {\n            if (!this._handler.upload(id)) {\n                this._uploadData.setStatus(id, qq.status.QUEUED);\n            }\n        },\n\n        _uploadStoredFiles: function() {\n            var idToUpload, stillSubmitting,\n                self = this;\n\n            while (this._storedIds.length) {\n                idToUpload = this._storedIds.shift();\n                this._uploadFile(idToUpload);\n            }\n\n            // If we are still waiting for some files to clear validation, attempt to upload these again in a bit\n            stillSubmitting = this.getUploads({status: qq.status.SUBMITTING}).length;\n            if (stillSubmitting) {\n                qq.log(\"Still waiting for \" + stillSubmitting + \" files to clear submit queue. Will re-parse stored IDs array shortly.\");\n                setTimeout(function() {\n                    self._uploadStoredFiles();\n                }, 1000);\n            }\n        },\n\n        /**\n         * Performs some internal validation checks on an item, defined in the `validation` option.\n         *\n         * @param fileWrapper Wrapper containing a `file` along with an `id`\n         * @param validationDescriptor Normalized information about the item (`size`, `name`).\n         * @returns qq.Promise with appropriate callbacks invoked depending on the validity of the file\n         * @private\n         */\n        _validateFileOrBlobData: function(fileWrapper, validationDescriptor) {\n            var self = this,\n                file = (function() {\n                    if (fileWrapper.file instanceof qq.BlobProxy) {\n                        return fileWrapper.file.referenceBlob;\n                    }\n                    return fileWrapper.file;\n                }()),\n                name = validationDescriptor.name,\n                size = validationDescriptor.size,\n                buttonId = this._getButtonId(fileWrapper.file),\n                validationBase = this._getValidationBase(buttonId),\n                validityChecker = new qq.Promise();\n\n            validityChecker.then(\n                function() {},\n                function() {\n                    self._fileOrBlobRejected(fileWrapper.id, name);\n                });\n\n            if (qq.isFileOrInput(file) && !this._isAllowedExtension(validationBase.allowedExtensions, name)) {\n                this._itemError(\"typeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (!this._options.validation.allowEmpty && size === 0) {\n                this._itemError(\"emptyError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (size > 0 && validationBase.sizeLimit && size > validationBase.sizeLimit) {\n                this._itemError(\"sizeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (size > 0 && size < validationBase.minSizeLimit) {\n                this._itemError(\"minSizeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (qq.ImageValidation && qq.supportedFeatures.imagePreviews && qq.isFile(file)) {\n                new qq.ImageValidation(file, qq.bind(self.log, self)).validate(validationBase.image).then(\n                    validityChecker.success,\n                    function(errorCode) {\n                        self._itemError(errorCode + \"ImageError\", name, file);\n                        validityChecker.failure();\n                    }\n                );\n            }\n            else {\n                validityChecker.success();\n            }\n\n            return validityChecker;\n        },\n\n        _wrapCallbacks: function() {\n            var self, safeCallback, prop;\n\n            self = this;\n\n            safeCallback = function(name, callback, args) {\n                var errorMsg;\n\n                try {\n                    return callback.apply(self, args);\n                }\n                catch (exception) {\n                    errorMsg = exception.message || exception.toString();\n                    self.log(\"Caught exception in '\" + name + \"' callback - \" + errorMsg, \"error\");\n                }\n            };\n\n            /* jshint forin: false, loopfunc: true */\n            for (prop in this._options.callbacks) {\n                (function() {\n                    var callbackName, callbackFunc;\n                    callbackName = prop;\n                    callbackFunc = self._options.callbacks[callbackName];\n                    self._options.callbacks[callbackName] = function() {\n                        return safeCallback(callbackName, callbackFunc, arguments);\n                    };\n                }());\n            }\n        }\n    };\n}());\n","/*globals qq*/\n(function() {\n    \"use strict\";\n\n    qq.FineUploaderBasic = function(o) {\n        var self = this;\n\n        // These options define FineUploaderBasic mode.\n        this._options = {\n            debug: false,\n            button: null,\n            multiple: true,\n            maxConnections: 3,\n            disableCancelForFormUploads: false,\n            autoUpload: true,\n\n            request: {\n                customHeaders: {},\n                endpoint: \"/server/upload\",\n                filenameParam: \"qqfilename\",\n                forceMultipart: true,\n                inputName: \"qqfile\",\n                method: \"POST\",\n                params: {},\n                paramsInBody: true,\n                totalFileSizeName: \"qqtotalfilesize\",\n                uuidName: \"qquuid\"\n            },\n\n            validation: {\n                allowedExtensions: [],\n                sizeLimit: 0,\n                minSizeLimit: 0,\n                itemLimit: 0,\n                stopOnFirstInvalidFile: true,\n                acceptFiles: null,\n                image: {\n                    maxHeight: 0,\n                    maxWidth: 0,\n                    minHeight: 0,\n                    minWidth: 0\n                },\n                allowEmpty: false\n            },\n\n            callbacks: {\n                onSubmit: function(id, name) {},\n                onSubmitted: function(id, name) {},\n                onComplete: function(id, name, responseJSON, maybeXhr) {},\n                onAllComplete: function(successful, failed) {},\n                onCancel: function(id, name) {},\n                onUpload: function(id, name) {},\n                onUploadChunk: function(id, name, chunkData) {},\n                onUploadChunkSuccess: function(id, chunkData, responseJSON, xhr) {},\n                onResume: function(id, fileName, chunkData) {},\n                onProgress: function(id, name, loaded, total) {},\n                onTotalProgress: function(loaded, total) {},\n                onError: function(id, name, reason, maybeXhrOrXdr) {},\n                onAutoRetry: function(id, name, attemptNumber) {},\n                onManualRetry: function(id, name) {},\n                onValidateBatch: function(fileOrBlobData) {},\n                onValidate: function(fileOrBlobData) {},\n                onSubmitDelete: function(id) {},\n                onDelete: function(id) {},\n                onDeleteComplete: function(id, xhrOrXdr, isError) {},\n                onPasteReceived: function(blob) {},\n                onStatusChange: function(id, oldStatus, newStatus) {},\n                onSessionRequestComplete: function(response, success, xhrOrXdr) {}\n            },\n\n            messages: {\n                typeError: \"{file} has an invalid extension. Valid extension(s): {extensions}.\",\n                sizeError: \"{file} is too large, maximum file size is {sizeLimit}.\",\n                minSizeError: \"{file} is too small, minimum file size is {minSizeLimit}.\",\n                emptyError: \"{file} is empty, please select files again without it.\",\n                noFilesError: \"No files to upload.\",\n                tooManyItemsError: \"Too many items ({netItems}) would be uploaded.  Item limit is {itemLimit}.\",\n                maxHeightImageError: \"Image is too tall.\",\n                maxWidthImageError: \"Image is too wide.\",\n                minHeightImageError: \"Image is not tall enough.\",\n                minWidthImageError: \"Image is not wide enough.\",\n                retryFailTooManyItems: \"Retry failed - you have reached your file limit.\",\n                onLeave: \"The files are being uploaded, if you leave now the upload will be canceled.\",\n                unsupportedBrowserIos8Safari: \"Unrecoverable error - this browser does not permit file uploading of any kind due to serious bugs in iOS8 Safari.  Please use iOS8 Chrome until Apple fixes these issues.\"\n            },\n\n            retry: {\n                enableAuto: false,\n                maxAutoAttempts: 3,\n                autoAttemptDelay: 5,\n                preventRetryResponseProperty: \"preventRetry\"\n            },\n\n            classes: {\n                buttonHover: \"qq-upload-button-hover\",\n                buttonFocus: \"qq-upload-button-focus\"\n            },\n\n            chunking: {\n                enabled: false,\n                concurrent: {\n                    enabled: false\n                },\n                mandatory: false,\n                paramNames: {\n                    partIndex: \"qqpartindex\",\n                    partByteOffset: \"qqpartbyteoffset\",\n                    chunkSize: \"qqchunksize\",\n                    totalFileSize: \"qqtotalfilesize\",\n                    totalParts: \"qqtotalparts\"\n                },\n                partSize: 2000000,\n                // only relevant for traditional endpoints, only required when concurrent.enabled === true\n                success: {\n                    endpoint: null\n                }\n            },\n\n            resume: {\n                enabled: false,\n                recordsExpireIn: 7, //days\n                paramNames: {\n                    resuming: \"qqresume\"\n                }\n            },\n\n            formatFileName: function(fileOrBlobName) {\n                return fileOrBlobName;\n            },\n\n            text: {\n                defaultResponseError: \"Upload failure reason unknown\",\n                fileInputTitle: \"file input\",\n                sizeSymbols: [\"kB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\"]\n            },\n\n            deleteFile: {\n                enabled: false,\n                method: \"DELETE\",\n                endpoint: \"/server/upload\",\n                customHeaders: {},\n                params: {}\n            },\n\n            cors: {\n                expected: false,\n                sendCredentials: false,\n                allowXdr: false\n            },\n\n            blobs: {\n                defaultName: \"misc_data\"\n            },\n\n            paste: {\n                targetElement: null,\n                defaultName: \"pasted_image\"\n            },\n\n            camera: {\n                ios: false,\n\n                // if ios is true: button is null means target the default button, otherwise target the button specified\n                button: null\n            },\n\n            // This refers to additional upload buttons to be handled by Fine Uploader.\n            // Each element is an object, containing `element` as the only required\n            // property.  The `element` must be a container that will ultimately\n            // contain an invisible `<input type=\"file\">` created by Fine Uploader.\n            // Optional properties of each object include `multiple`, `validation`,\n            // and `folders`.\n            extraButtons: [],\n\n            // Depends on the session module.  Used to query the server for an initial file list\n            // during initialization and optionally after a `reset`.\n            session: {\n                endpoint: null,\n                params: {},\n                customHeaders: {},\n                refreshOnReset: true\n            },\n\n            // Send parameters associated with an existing form along with the files\n            form: {\n                // Element ID, HTMLElement, or null\n                element: \"qq-form\",\n\n                // Overrides the base `autoUpload`, unless `element` is null.\n                autoUpload: false,\n\n                // true = upload files on form submission (and squelch submit event)\n                interceptSubmit: true\n            },\n\n            // scale images client side, upload a new file for each scaled version\n            scaling: {\n                customResizer: null,\n\n                // send the original file as well\n                sendOriginal: true,\n\n                // fox orientation for scaled images\n                orient: true,\n\n                // If null, scaled image type will match reference image type.  This value will be referred to\n                // for any size record that does not specific a type.\n                defaultType: null,\n\n                defaultQuality: 80,\n\n                failureText: \"Failed to scale\",\n\n                includeExif: false,\n\n                // metadata about each requested scaled version\n                sizes: []\n            },\n\n            workarounds: {\n                iosEmptyVideos: true,\n                ios8SafariUploads: true,\n                ios8BrowserCrash: false\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(this._options, o, true);\n\n        this._buttons = [];\n        this._extraButtonSpecs = {};\n        this._buttonIdsForFileIds = [];\n\n        this._wrapCallbacks();\n        this._disposeSupport =  new qq.DisposeSupport();\n\n        this._storedIds = [];\n        this._autoRetries = [];\n        this._retryTimeouts = [];\n        this._preventRetries = [];\n        this._thumbnailUrls = [];\n\n        this._netUploadedOrQueued = 0;\n        this._netUploaded = 0;\n        this._uploadData = this._createUploadDataTracker();\n\n        this._initFormSupportAndParams();\n\n        this._customHeadersStore = this._createStore(this._options.request.customHeaders);\n        this._deleteFileCustomHeadersStore = this._createStore(this._options.deleteFile.customHeaders);\n\n        this._deleteFileParamsStore = this._createStore(this._options.deleteFile.params);\n\n        this._endpointStore = this._createStore(this._options.request.endpoint);\n        this._deleteFileEndpointStore = this._createStore(this._options.deleteFile.endpoint);\n\n        this._handler = this._createUploadHandler();\n\n        this._deleteHandler = qq.DeleteFileAjaxRequester && this._createDeleteHandler();\n\n        if (this._options.button) {\n            this._defaultButtonId = this._createUploadButton({\n                element: this._options.button,\n                title: this._options.text.fileInputTitle\n            }).getButtonId();\n        }\n\n        this._generateExtraButtonSpecs();\n\n        this._handleCameraAccess();\n\n        if (this._options.paste.targetElement) {\n            if (qq.PasteSupport) {\n                this._pasteHandler = this._createPasteHandler();\n            }\n            else {\n                this.log(\"Paste support module not found\", \"error\");\n            }\n        }\n\n        this._preventLeaveInProgress();\n\n        this._imageGenerator = qq.ImageGenerator && new qq.ImageGenerator(qq.bind(this.log, this));\n        this._refreshSessionData();\n\n        this._succeededSinceLastAllComplete = [];\n        this._failedSinceLastAllComplete = [];\n\n        this._scaler = (qq.Scaler && new qq.Scaler(this._options.scaling, qq.bind(this.log, this))) || {};\n        if (this._scaler.enabled) {\n            this._customNewFileHandler = qq.bind(this._scaler.handleNewFile, this._scaler);\n        }\n\n        if (qq.TotalProgress && qq.supportedFeatures.progressBar) {\n            this._totalProgress = new qq.TotalProgress(\n                qq.bind(this._onTotalProgress, this),\n\n                function(id) {\n                    var entry = self._uploadData.retrieve({id: id});\n                    return (entry && entry.size) || 0;\n                }\n            );\n        }\n\n        this._currentItemLimit = this._options.validation.itemLimit;\n    };\n\n    // Define the private & public API methods.\n    qq.FineUploaderBasic.prototype = qq.basePublicApi;\n    qq.extend(qq.FineUploaderBasic.prototype, qq.basePrivateApi);\n}());\n","/*globals qq, XDomainRequest*/\n/** Generic class for sending non-upload ajax requests and handling the associated responses **/\nqq.AjaxRequester = function(o) {\n    \"use strict\";\n\n    var log, shouldParamsBeInQueryString,\n        queue = [],\n        requestData = {},\n        options = {\n            acceptHeader: null,\n            validMethods: [\"PATCH\", \"POST\", \"PUT\"],\n            method: \"POST\",\n            contentType: \"application/x-www-form-urlencoded\",\n            maxConnections: 3,\n            customHeaders: {},\n            endpointStore: {},\n            paramsStore: {},\n            mandatedParams: {},\n            allowXRequestedWithAndCacheControl: true,\n            successfulResponseCodes: {\n                DELETE: [200, 202, 204],\n                PATCH: [200, 201, 202, 203, 204],\n                POST: [200, 201, 202, 203, 204],\n                PUT: [200, 201, 202, 203, 204],\n                GET: [200]\n            },\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onSend: function(id) {},\n            onComplete: function(id, xhrOrXdr, isError) {},\n            onProgress: null\n        };\n\n    qq.extend(options, o);\n    log = options.log;\n\n    if (qq.indexOf(options.validMethods, options.method) < 0) {\n        throw new Error(\"'\" + options.method + \"' is not a supported method for this type of request!\");\n    }\n\n    // [Simple methods](http://www.w3.org/TR/cors/#simple-method)\n    // are defined by the W3C in the CORS spec as a list of methods that, in part,\n    // make a CORS request eligible to be exempt from preflighting.\n    function isSimpleMethod() {\n        return qq.indexOf([\"GET\", \"POST\", \"HEAD\"], options.method) >= 0;\n    }\n\n    // [Simple headers](http://www.w3.org/TR/cors/#simple-header)\n    // are defined by the W3C in the CORS spec as a list of headers that, in part,\n    // make a CORS request eligible to be exempt from preflighting.\n    function containsNonSimpleHeaders(headers) {\n        var containsNonSimple = false;\n\n        qq.each(containsNonSimple, function(idx, header) {\n            if (qq.indexOf([\"Accept\", \"Accept-Language\", \"Content-Language\", \"Content-Type\"], header) < 0) {\n                containsNonSimple = true;\n                return false;\n            }\n        });\n\n        return containsNonSimple;\n    }\n\n    function isXdr(xhr) {\n        //The `withCredentials` test is a commonly accepted way to determine if XHR supports CORS.\n        return options.cors.expected && xhr.withCredentials === undefined;\n    }\n\n    // Returns either a new `XMLHttpRequest` or `XDomainRequest` instance.\n    function getCorsAjaxTransport() {\n        var xhrOrXdr;\n\n        if (window.XMLHttpRequest || window.ActiveXObject) {\n            xhrOrXdr = qq.createXhrInstance();\n\n            if (xhrOrXdr.withCredentials === undefined) {\n                xhrOrXdr = new XDomainRequest();\n                // Workaround for XDR bug in IE9 - https://social.msdn.microsoft.com/Forums/ie/en-US/30ef3add-767c-4436-b8a9-f1ca19b4812e/ie9-rtm-xdomainrequest-issued-requests-may-abort-if-all-event-handlers-not-specified?forum=iewebdevelopment\n                xhrOrXdr.onload = function() {};\n                xhrOrXdr.onerror = function() {};\n                xhrOrXdr.ontimeout = function() {};\n                xhrOrXdr.onprogress = function() {};\n            }\n        }\n\n        return xhrOrXdr;\n    }\n\n    // Returns either a new XHR/XDR instance, or an existing one for the associated `File` or `Blob`.\n    function getXhrOrXdr(id, suppliedXhr) {\n        var xhrOrXdr = requestData[id].xhr;\n\n        if (!xhrOrXdr) {\n            if (suppliedXhr) {\n                xhrOrXdr = suppliedXhr;\n            }\n            else {\n                if (options.cors.expected) {\n                    xhrOrXdr = getCorsAjaxTransport();\n                }\n                else {\n                    xhrOrXdr = qq.createXhrInstance();\n                }\n            }\n\n            requestData[id].xhr = xhrOrXdr;\n        }\n\n        return xhrOrXdr;\n    }\n\n    // Removes element from queue, sends next request\n    function dequeue(id) {\n        var i = qq.indexOf(queue, id),\n            max = options.maxConnections,\n            nextId;\n\n        delete requestData[id];\n        queue.splice(i, 1);\n\n        if (queue.length >= max && i < max) {\n            nextId = queue[max - 1];\n            sendRequest(nextId);\n        }\n    }\n\n    function onComplete(id, xdrError) {\n        var xhr = getXhrOrXdr(id),\n            method = options.method,\n            isError = xdrError === true;\n\n        dequeue(id);\n\n        if (isError) {\n            log(method + \" request for \" + id + \" has failed\", \"error\");\n        }\n        else if (!isXdr(xhr) && !isResponseSuccessful(xhr.status)) {\n            isError = true;\n            log(method + \" request for \" + id + \" has failed - response code \" + xhr.status, \"error\");\n        }\n\n        options.onComplete(id, xhr, isError);\n    }\n\n    function getParams(id) {\n        var onDemandParams = requestData[id].additionalParams,\n            mandatedParams = options.mandatedParams,\n            params;\n\n        if (options.paramsStore.get) {\n            params = options.paramsStore.get(id);\n        }\n\n        if (onDemandParams) {\n            qq.each(onDemandParams, function(name, val) {\n                params = params || {};\n                params[name] = val;\n            });\n        }\n\n        if (mandatedParams) {\n            qq.each(mandatedParams, function(name, val) {\n                params = params || {};\n                params[name] = val;\n            });\n        }\n\n        return params;\n    }\n\n    function sendRequest(id, optXhr) {\n        var xhr = getXhrOrXdr(id, optXhr),\n            method = options.method,\n            params = getParams(id),\n            payload = requestData[id].payload,\n            url;\n\n        options.onSend(id);\n\n        url = createUrl(id, params, requestData[id].additionalQueryParams);\n\n        // XDR and XHR status detection APIs differ a bit.\n        if (isXdr(xhr)) {\n            xhr.onload = getXdrLoadHandler(id);\n            xhr.onerror = getXdrErrorHandler(id);\n        }\n        else {\n            xhr.onreadystatechange = getXhrReadyStateChangeHandler(id);\n        }\n\n        registerForUploadProgress(id);\n\n        // The last parameter is assumed to be ignored if we are actually using `XDomainRequest`.\n        xhr.open(method, url, true);\n\n        // Instruct the transport to send cookies along with the CORS request,\n        // unless we are using `XDomainRequest`, which is not capable of this.\n        if (options.cors.expected && options.cors.sendCredentials && !isXdr(xhr)) {\n            xhr.withCredentials = true;\n        }\n\n        setHeaders(id);\n\n        log(\"Sending \" + method + \" request for \" + id);\n\n        if (payload) {\n            xhr.send(payload);\n        }\n        else if (shouldParamsBeInQueryString || !params) {\n            xhr.send();\n        }\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/x-www-form-urlencoded\") >= 0) {\n            xhr.send(qq.obj2url(params, \"\"));\n        }\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/json\") >= 0) {\n            xhr.send(JSON.stringify(params));\n        }\n        else {\n            xhr.send(params);\n        }\n\n        return xhr;\n    }\n\n    function createUrl(id, params, additionalQueryParams) {\n        var endpoint = options.endpointStore.get(id),\n            addToPath = requestData[id].addToPath;\n\n        /*jshint -W116,-W041 */\n        if (addToPath != undefined) {\n            endpoint += \"/\" + addToPath;\n        }\n\n        if (shouldParamsBeInQueryString && params) {\n            endpoint = qq.obj2url(params, endpoint);\n        }\n\n        if (additionalQueryParams) {\n            endpoint = qq.obj2url(additionalQueryParams, endpoint);\n        }\n\n        return endpoint;\n    }\n\n    // Invoked by the UA to indicate a number of possible states that describe\n    // a live `XMLHttpRequest` transport.\n    function getXhrReadyStateChangeHandler(id) {\n        return function() {\n            if (getXhrOrXdr(id).readyState === 4) {\n                onComplete(id);\n            }\n        };\n    }\n\n    function registerForUploadProgress(id) {\n        var onProgress = options.onProgress;\n\n        if (onProgress) {\n            getXhrOrXdr(id).upload.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    onProgress(id, e.loaded, e.total);\n                }\n            };\n        }\n    }\n\n    // This will be called by IE to indicate **success** for an associated\n    // `XDomainRequest` transported request.\n    function getXdrLoadHandler(id) {\n        return function() {\n            onComplete(id);\n        };\n    }\n\n    // This will be called by IE to indicate **failure** for an associated\n    // `XDomainRequest` transported request.\n    function getXdrErrorHandler(id) {\n        return function() {\n            onComplete(id, true);\n        };\n    }\n\n    function setHeaders(id) {\n        var xhr = getXhrOrXdr(id),\n            customHeaders = options.customHeaders,\n            onDemandHeaders = requestData[id].additionalHeaders || {},\n            method = options.method,\n            allHeaders = {};\n\n        // If XDomainRequest is being used, we can't set headers, so just ignore this block.\n        if (!isXdr(xhr)) {\n            options.acceptHeader && xhr.setRequestHeader(\"Accept\", options.acceptHeader);\n\n            // Only attempt to add X-Requested-With & Cache-Control if permitted\n            if (options.allowXRequestedWithAndCacheControl) {\n                // Do not add X-Requested-With & Cache-Control if this is a cross-origin request\n                // OR the cross-origin request contains a non-simple method or header.\n                // This is done to ensure a preflight is not triggered exclusively based on the\n                // addition of these 2 non-simple headers.\n                if (!options.cors.expected || (!isSimpleMethod() || containsNonSimpleHeaders(customHeaders))) {\n                    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n                    xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n                }\n            }\n\n            if (options.contentType && (method === \"POST\" || method === \"PUT\")) {\n                xhr.setRequestHeader(\"Content-Type\", options.contentType);\n            }\n\n            qq.extend(allHeaders, qq.isFunction(customHeaders) ? customHeaders(id) : customHeaders);\n            qq.extend(allHeaders, onDemandHeaders);\n\n            qq.each(allHeaders, function(name, val) {\n                xhr.setRequestHeader(name, val);\n            });\n        }\n    }\n\n    function isResponseSuccessful(responseCode) {\n        return qq.indexOf(options.successfulResponseCodes[options.method], responseCode) >= 0;\n    }\n\n    function prepareToSend(id, optXhr, addToPath, additionalParams, additionalQueryParams, additionalHeaders, payload) {\n        requestData[id] = {\n            addToPath: addToPath,\n            additionalParams: additionalParams,\n            additionalQueryParams: additionalQueryParams,\n            additionalHeaders: additionalHeaders,\n            payload: payload\n        };\n\n        var len = queue.push(id);\n\n        // if too many active connections, wait...\n        if (len <= options.maxConnections) {\n            return sendRequest(id, optXhr);\n        }\n    }\n\n    shouldParamsBeInQueryString = options.method === \"GET\" || options.method === \"DELETE\";\n\n    qq.extend(this, {\n        // Start the process of sending the request.  The ID refers to the file associated with the request.\n        initTransport: function(id) {\n            var path, params, headers, payload, cacheBuster, additionalQueryParams;\n\n            return {\n                // Optionally specify the end of the endpoint path for the request.\n                withPath: function(appendToPath) {\n                    path = appendToPath;\n                    return this;\n                },\n\n                // Optionally specify additional parameters to send along with the request.\n                // These will be added to the query string for GET/DELETE requests or the payload\n                // for POST/PUT requests.  The Content-Type of the request will be used to determine\n                // how these parameters should be formatted as well.\n                withParams: function(additionalParams) {\n                    params = additionalParams;\n                    return this;\n                },\n\n                withQueryParams: function(_additionalQueryParams_) {\n                    additionalQueryParams = _additionalQueryParams_;\n                    return this;\n                },\n\n                // Optionally specify additional headers to send along with the request.\n                withHeaders: function(additionalHeaders) {\n                    headers = additionalHeaders;\n                    return this;\n                },\n\n                // Optionally specify a payload/body for the request.\n                withPayload: function(thePayload) {\n                    payload = thePayload;\n                    return this;\n                },\n\n                // Appends a cache buster (timestamp) to the request URL as a query parameter (only if GET or DELETE)\n                withCacheBuster: function() {\n                    cacheBuster = true;\n                    return this;\n                },\n\n                // Send the constructed request.\n                send: function(optXhr) {\n                    if (cacheBuster && qq.indexOf([\"GET\", \"DELETE\"], options.method) >= 0) {\n                        params.qqtimestamp = new Date().getTime();\n                    }\n\n                    return prepareToSend(id, optXhr, path, params, additionalQueryParams, headers, payload);\n                }\n            };\n        },\n\n        canceled: function(id) {\n            dequeue(id);\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common upload handler functions.\n *\n * @constructor\n */\nqq.UploadHandler = function(spec) {\n    \"use strict\";\n\n    var proxy = spec.proxy,\n        fileState = {},\n        onCancel = proxy.onCancel,\n        getName = proxy.getName;\n\n    qq.extend(this, {\n        add: function(id, fileItem) {\n            fileState[id] = fileItem;\n            fileState[id].temp = {};\n        },\n\n        cancel: function(id) {\n            var self = this,\n                cancelFinalizationEffort = new qq.Promise(),\n                onCancelRetVal = onCancel(id, getName(id), cancelFinalizationEffort);\n\n            onCancelRetVal.then(function() {\n                if (self.isValid(id)) {\n                    fileState[id].canceled = true;\n                    self.expunge(id);\n                }\n                cancelFinalizationEffort.success();\n            });\n        },\n\n        expunge: function(id) {\n            delete fileState[id];\n        },\n\n        getThirdPartyFileId: function(id) {\n            return fileState[id].key;\n        },\n\n        isValid: function(id) {\n            return fileState[id] !== undefined;\n        },\n\n        reset: function() {\n            fileState = {};\n        },\n\n        _getFileState: function(id) {\n            return fileState[id];\n        },\n\n        _setThirdPartyFileId: function(id, thirdPartyFileId) {\n            fileState[id].key = thirdPartyFileId;\n        },\n\n        _wasCanceled: function(id) {\n            return !!fileState[id].canceled;\n        }\n    });\n};\n","/*globals qq*/\n/**\n * Base upload handler module.  Controls more specific handlers.\n *\n * @param o Options.  Passed along to the specific handler submodule as well.\n * @param namespace [optional] Namespace for the specific handler.\n */\nqq.UploadHandlerController = function(o, namespace) {\n    \"use strict\";\n\n    var controller = this,\n        chunkingPossible = false,\n        concurrentChunkingPossible = false,\n        chunking, preventRetryResponse, log, handler,\n\n    options = {\n        paramsStore: {},\n        maxConnections: 3, // maximum number of concurrent uploads\n        chunking: {\n            enabled: false,\n            multiple: {\n                enabled: false\n            }\n        },\n        log: function(str, level) {},\n        onProgress: function(id, fileName, loaded, total) {},\n        onComplete: function(id, fileName, response, xhr) {},\n        onCancel: function(id, fileName) {},\n        onUploadPrep: function(id) {}, // Called if non-trivial operations will be performed before onUpload\n        onUpload: function(id, fileName) {},\n        onUploadChunk: function(id, fileName, chunkData) {},\n        onUploadChunkSuccess: function(id, chunkData, response, xhr) {},\n        onAutoRetry: function(id, fileName, response, xhr) {},\n        onResume: function(id, fileName, chunkData) {},\n        onUuidChanged: function(id, newUuid) {},\n        getName: function(id) {},\n        setSize: function(id, newSize) {},\n        isQueued: function(id) {},\n        getIdsInProxyGroup: function(id) {},\n        getIdsInBatch: function(id) {}\n    },\n\n    chunked = {\n        // Called when each chunk has uploaded successfully\n        done: function(id, chunkIdx, response, xhr) {\n            var chunkData = handler._getChunkData(id, chunkIdx);\n\n            handler._getFileState(id).attemptingResume = false;\n\n            delete handler._getFileState(id).temp.chunkProgress[chunkIdx];\n            handler._getFileState(id).loaded += chunkData.size;\n\n            options.onUploadChunkSuccess(id, handler._getChunkDataForCallback(chunkData), response, xhr);\n        },\n\n        // Called when all chunks have been successfully uploaded and we want to ask the handler to perform any\n        // logic associated with closing out the file, such as combining the chunks.\n        finalize: function(id) {\n            var size = options.getSize(id),\n                name = options.getName(id);\n\n            log(\"All chunks have been uploaded for \" + id + \" - finalizing....\");\n            handler.finalizeChunks(id).then(\n                function(response, xhr) {\n                    log(\"Finalize successful for \" + id);\n\n                    var normaizedResponse = upload.normalizeResponse(response, true);\n\n                    options.onProgress(id, name, size, size);\n                    handler._maybeDeletePersistedChunkData(id);\n                    upload.cleanup(id, normaizedResponse, xhr);\n                },\n                function(response, xhr) {\n                    var normaizedResponse = upload.normalizeResponse(response, false);\n\n                    log(\"Problem finalizing chunks for file ID \" + id + \" - \" + normaizedResponse.error, \"error\");\n\n                    if (normaizedResponse.reset) {\n                        chunked.reset(id);\n                    }\n\n                    if (!options.onAutoRetry(id, name, normaizedResponse, xhr)) {\n                        upload.cleanup(id, normaizedResponse, xhr);\n                    }\n                }\n            );\n        },\n\n        handleFailure: function(chunkIdx, id, response, xhr) {\n            var name = options.getName(id);\n\n            log(\"Chunked upload request failed for \" + id + \", chunk \" + chunkIdx);\n\n            handler.clearCachedChunk(id, chunkIdx);\n\n            var responseToReport = upload.normalizeResponse(response, false),\n                inProgressIdx;\n\n            if (responseToReport.reset) {\n                chunked.reset(id);\n            }\n            else {\n                inProgressIdx = qq.indexOf(handler._getFileState(id).chunking.inProgress, chunkIdx);\n                if (inProgressIdx >= 0) {\n                    handler._getFileState(id).chunking.inProgress.splice(inProgressIdx, 1);\n                    handler._getFileState(id).chunking.remaining.unshift(chunkIdx);\n                }\n            }\n\n            // We may have aborted all other in-progress chunks for this file due to a failure.\n            // If so, ignore the failures associated with those aborts.\n            if (!handler._getFileState(id).temp.ignoreFailure) {\n                // If this chunk has failed, we want to ignore all other failures of currently in-progress\n                // chunks since they will be explicitly aborted\n                if (concurrentChunkingPossible) {\n                    handler._getFileState(id).temp.ignoreFailure = true;\n\n                    log(qq.format(\"Going to attempt to abort these chunks: {}. These are currently in-progress: {}.\", JSON.stringify(Object.keys(handler._getXhrs(id))), JSON.stringify(handler._getFileState(id).chunking.inProgress)));\n                    qq.each(handler._getXhrs(id), function(ckid, ckXhr) {\n                        log(qq.format(\"Attempting to abort file {}.{}. XHR readyState {}. \", id, ckid, ckXhr.readyState));\n                        ckXhr.abort();\n                        // Flag the transport, in case we are waiting for some other async operation\n                        // to complete before attempting to upload the chunk\n                        ckXhr._cancelled = true;\n                    });\n\n                    // We must indicate that all aborted chunks are no longer in progress\n                    handler.moveInProgressToRemaining(id);\n\n                    // Free up any connections used by these chunks, but don't allow any\n                    // other files to take up the connections (until we have exhausted all auto-retries)\n                    connectionManager.free(id, true);\n                }\n\n                if (!options.onAutoRetry(id, name, responseToReport, xhr)) {\n                    // If one chunk fails, abort all of the others to avoid odd race conditions that occur\n                    // if a chunk succeeds immediately after one fails before we have determined if the upload\n                    // is a failure or not.\n                    upload.cleanup(id, responseToReport, xhr);\n                }\n            }\n        },\n\n        hasMoreParts: function(id) {\n            return !!handler._getFileState(id).chunking.remaining.length;\n        },\n\n        nextPart: function(id) {\n            var nextIdx = handler._getFileState(id).chunking.remaining.shift();\n\n            if (nextIdx >= handler._getTotalChunks(id)) {\n                nextIdx = null;\n            }\n\n            return nextIdx;\n        },\n\n        reset: function(id) {\n            log(\"Server or callback has ordered chunking effort to be restarted on next attempt for item ID \" + id, \"error\");\n\n            handler._maybeDeletePersistedChunkData(id);\n            handler.reevaluateChunking(id);\n            handler._getFileState(id).loaded = 0;\n        },\n\n        sendNext: function(id) {\n            var size = options.getSize(id),\n                name = options.getName(id),\n                chunkIdx = chunked.nextPart(id),\n                chunkData = handler._getChunkData(id, chunkIdx),\n                resuming = handler._getFileState(id).attemptingResume,\n                inProgressChunks = handler._getFileState(id).chunking.inProgress || [];\n\n            if (handler._getFileState(id).loaded == null) {\n                handler._getFileState(id).loaded = 0;\n            }\n\n            // Don't follow-through with the resume attempt if the integrator returns false from onResume\n            if (resuming && options.onResume(id, name, chunkData) === false) {\n                chunked.reset(id);\n                chunkIdx = chunked.nextPart(id);\n                chunkData = handler._getChunkData(id, chunkIdx);\n                resuming = false;\n            }\n\n            // If all chunks have already uploaded successfully, we must be re-attempting the finalize step.\n            if (chunkIdx == null && inProgressChunks.length === 0) {\n                chunked.finalize(id);\n            }\n\n            // Send the next chunk\n            else {\n                log(qq.format(\"Sending chunked upload request for item {}.{}, bytes {}-{} of {}.\", id, chunkIdx, chunkData.start + 1, chunkData.end, size));\n                options.onUploadChunk(id, name, handler._getChunkDataForCallback(chunkData));\n                inProgressChunks.push(chunkIdx);\n                handler._getFileState(id).chunking.inProgress = inProgressChunks;\n\n                if (concurrentChunkingPossible) {\n                    connectionManager.open(id, chunkIdx);\n                }\n\n                if (concurrentChunkingPossible && connectionManager.available() && handler._getFileState(id).chunking.remaining.length) {\n                    chunked.sendNext(id);\n                }\n\n                if (chunkData.blob.size === 0) {\n                    log(qq.format(\"Chunk {} for file {} will not be uploaded, zero sized chunk.\", chunkIdx, id), \"error\");\n                    chunked.handleFailure(chunkIdx, id, \"File is no longer available\", null);\n                }\n                else {\n                    handler.uploadChunk(id, chunkIdx, resuming).then(\n                        // upload chunk success\n                        function success(response, xhr) {\n                            log(\"Chunked upload request succeeded for \" + id + \", chunk \" + chunkIdx);\n\n                            handler.clearCachedChunk(id, chunkIdx);\n\n                            var inProgressChunks = handler._getFileState(id).chunking.inProgress || [],\n                                responseToReport = upload.normalizeResponse(response, true),\n                                inProgressChunkIdx = qq.indexOf(inProgressChunks, chunkIdx);\n\n                            log(qq.format(\"Chunk {} for file {} uploaded successfully.\", chunkIdx, id));\n\n                            chunked.done(id, chunkIdx, responseToReport, xhr);\n\n                            if (inProgressChunkIdx >= 0) {\n                                inProgressChunks.splice(inProgressChunkIdx, 1);\n                            }\n\n                            handler._maybePersistChunkedState(id);\n\n                            if (!chunked.hasMoreParts(id) && inProgressChunks.length === 0) {\n                                chunked.finalize(id);\n                            }\n                            else if (chunked.hasMoreParts(id)) {\n                                chunked.sendNext(id);\n                            }\n                            else {\n                                log(qq.format(\"File ID {} has no more chunks to send and these chunk indexes are still marked as in-progress: {}\", id, JSON.stringify(inProgressChunks)));\n                            }\n                        },\n\n                        // upload chunk failure\n                        function failure(response, xhr) {\n                            chunked.handleFailure(chunkIdx, id, response, xhr);\n                        }\n                        )\n                        .done(function() {\n                            handler.clearXhr(id, chunkIdx);\n                        });\n                }\n            }\n        }\n    },\n\n    connectionManager = {\n        _open: [],\n        _openChunks: {},\n        _waiting: [],\n\n        available: function() {\n            var max = options.maxConnections,\n                openChunkEntriesCount = 0,\n                openChunksCount = 0;\n\n            qq.each(connectionManager._openChunks, function(fileId, openChunkIndexes) {\n                openChunkEntriesCount++;\n                openChunksCount += openChunkIndexes.length;\n            });\n\n            return max - (connectionManager._open.length - openChunkEntriesCount + openChunksCount);\n        },\n\n        /**\n         * Removes element from queue, starts upload of next\n         */\n        free: function(id, dontAllowNext) {\n            var allowNext = !dontAllowNext,\n                waitingIndex = qq.indexOf(connectionManager._waiting, id),\n                connectionsIndex = qq.indexOf(connectionManager._open, id),\n                nextId;\n\n            delete connectionManager._openChunks[id];\n\n            if (upload.getProxyOrBlob(id) instanceof qq.BlobProxy) {\n                log(\"Generated blob upload has ended for \" + id + \", disposing generated blob.\");\n                delete handler._getFileState(id).file;\n            }\n\n            // If this file was not consuming a connection, it was just waiting, so remove it from the waiting array\n            if (waitingIndex >= 0) {\n                connectionManager._waiting.splice(waitingIndex, 1);\n            }\n            // If this file was consuming a connection, allow the next file to be uploaded\n            else if (allowNext && connectionsIndex >= 0) {\n                connectionManager._open.splice(connectionsIndex, 1);\n\n                nextId = connectionManager._waiting.shift();\n                if (nextId >= 0) {\n                    connectionManager._open.push(nextId);\n                    upload.start(nextId);\n                }\n            }\n        },\n\n        getWaitingOrConnected: function() {\n            var waitingOrConnected = [];\n\n            // Chunked files may have multiple connections open per chunk (if concurrent chunking is enabled)\n            // We need to grab the file ID of any file that has at least one chunk consuming a connection.\n            qq.each(connectionManager._openChunks, function(fileId, chunks) {\n                if (chunks && chunks.length) {\n                    waitingOrConnected.push(parseInt(fileId));\n                }\n            });\n\n            // For non-chunked files, only one connection will be consumed per file.\n            // This is where we aggregate those file IDs.\n            qq.each(connectionManager._open, function(idx, fileId) {\n                if (!connectionManager._openChunks[fileId]) {\n                    waitingOrConnected.push(parseInt(fileId));\n                }\n            });\n\n            // There may be files waiting for a connection.\n            waitingOrConnected = waitingOrConnected.concat(connectionManager._waiting);\n\n            return waitingOrConnected;\n        },\n\n        isUsingConnection: function(id) {\n            return qq.indexOf(connectionManager._open, id) >= 0;\n        },\n\n        open: function(id, chunkIdx) {\n            if (chunkIdx == null) {\n                connectionManager._waiting.push(id);\n            }\n\n            if (connectionManager.available()) {\n                if (chunkIdx == null) {\n                    connectionManager._waiting.pop();\n                    connectionManager._open.push(id);\n                }\n                else {\n                    (function() {\n                        var openChunksEntry = connectionManager._openChunks[id] || [];\n                        openChunksEntry.push(chunkIdx);\n                        connectionManager._openChunks[id] = openChunksEntry;\n                    }());\n                }\n\n                return true;\n            }\n\n            return false;\n        },\n\n        reset: function() {\n            connectionManager._waiting = [];\n            connectionManager._open = [];\n        }\n    },\n\n    simple = {\n        send: function(id, name) {\n            handler._getFileState(id).loaded = 0;\n\n            log(\"Sending simple upload request for \" + id);\n            handler.uploadFile(id).then(\n                function(response, optXhr) {\n                    log(\"Simple upload request succeeded for \" + id);\n\n                    var responseToReport = upload.normalizeResponse(response, true),\n                        size = options.getSize(id);\n\n                    options.onProgress(id, name, size, size);\n                    upload.maybeNewUuid(id, responseToReport);\n                    upload.cleanup(id, responseToReport, optXhr);\n                },\n\n                function(response, optXhr) {\n                    log(\"Simple upload request failed for \" + id);\n\n                    var responseToReport = upload.normalizeResponse(response, false);\n\n                    if (!options.onAutoRetry(id, name, responseToReport, optXhr)) {\n                        upload.cleanup(id, responseToReport, optXhr);\n                    }\n                }\n            );\n        }\n    },\n\n    upload = {\n        cancel: function(id) {\n            log(\"Cancelling \" + id);\n            options.paramsStore.remove(id);\n            connectionManager.free(id);\n        },\n\n        cleanup: function(id, response, optXhr) {\n            var name = options.getName(id);\n\n            options.onComplete(id, name, response, optXhr);\n\n            if (handler._getFileState(id)) {\n                handler._clearXhrs && handler._clearXhrs(id);\n            }\n\n            connectionManager.free(id);\n        },\n\n        // Returns a qq.BlobProxy, or an actual File/Blob if no proxy is involved, or undefined\n        // if none of these are available for the ID\n        getProxyOrBlob: function(id) {\n            return (handler.getProxy && handler.getProxy(id)) ||\n                (handler.getFile && handler.getFile(id));\n        },\n\n        initHandler: function() {\n            var handlerType = namespace ? qq[namespace] : qq.traditional,\n                handlerModuleSubtype = qq.supportedFeatures.ajaxUploading ? \"Xhr\" : \"Form\";\n\n            handler = new handlerType[handlerModuleSubtype + \"UploadHandler\"](\n                options,\n                {\n                    getDataByUuid: options.getDataByUuid,\n                    getName: options.getName,\n                    getSize: options.getSize,\n                    getUuid: options.getUuid,\n                    log: log,\n                    onCancel: options.onCancel,\n                    onProgress: options.onProgress,\n                    onUuidChanged: options.onUuidChanged\n                }\n            );\n\n            if (handler._removeExpiredChunkingRecords) {\n                handler._removeExpiredChunkingRecords();\n            }\n        },\n\n        isDeferredEligibleForUpload: function(id) {\n            return options.isQueued(id);\n        },\n\n        // For Blobs that are part of a group of generated images, along with a reference image,\n        // this will ensure the blobs in the group are uploaded in the order they were triggered,\n        // even if some async processing must be completed on one or more Blobs first.\n        maybeDefer: function(id, blob) {\n            // If we don't have a file/blob yet & no file/blob exists for this item, request it,\n            // and then submit the upload to the specific handler once the blob is available.\n            // ASSUMPTION: This condition will only ever be true if XHR uploading is supported.\n            if (blob && !handler.getFile(id) && blob instanceof qq.BlobProxy) {\n\n                // Blob creation may take some time, so the caller may want to update the\n                // UI to indicate that an operation is in progress, even before the actual\n                // upload begins and an onUpload callback is invoked.\n                options.onUploadPrep(id);\n\n                log(\"Attempting to generate a blob on-demand for \" + id);\n                blob.create().then(function(generatedBlob) {\n                    log(\"Generated an on-demand blob for \" + id);\n\n                    // Update record associated with this file by providing the generated Blob\n                    handler.updateBlob(id, generatedBlob);\n\n                    // Propagate the size for this generated Blob\n                    options.setSize(id, generatedBlob.size);\n\n                    // Order handler to recalculate chunking possibility, if applicable\n                    handler.reevaluateChunking(id);\n\n                    upload.maybeSendDeferredFiles(id);\n                },\n\n                // Blob could not be generated.  Fail the upload & attempt to prevent retries.  Also bubble error message.\n                function(errorMessage) {\n                    var errorResponse = {};\n\n                    if (errorMessage) {\n                        errorResponse.error = errorMessage;\n                    }\n\n                    log(qq.format(\"Failed to generate blob for ID {}.  Error message: {}.\", id, errorMessage), \"error\");\n\n                    options.onComplete(id, options.getName(id), qq.extend(errorResponse, preventRetryResponse), null);\n                    upload.maybeSendDeferredFiles(id);\n                    connectionManager.free(id);\n                });\n            }\n            else {\n                return upload.maybeSendDeferredFiles(id);\n            }\n\n            return false;\n        },\n\n        // Upload any grouped blobs, in the proper order, that are ready to be uploaded\n        maybeSendDeferredFiles: function(id) {\n            var idsInGroup = options.getIdsInProxyGroup(id),\n                uploadedThisId = false;\n\n            if (idsInGroup && idsInGroup.length) {\n                log(\"Maybe ready to upload proxy group file \" + id);\n\n                qq.each(idsInGroup, function(idx, idInGroup) {\n                    if (upload.isDeferredEligibleForUpload(idInGroup) && !!handler.getFile(idInGroup)) {\n                        uploadedThisId = idInGroup === id;\n                        upload.now(idInGroup);\n                    }\n                    else if (upload.isDeferredEligibleForUpload(idInGroup)) {\n                        return false;\n                    }\n                });\n            }\n            else {\n                uploadedThisId = true;\n                upload.now(id);\n            }\n\n            return uploadedThisId;\n        },\n\n        maybeNewUuid: function(id, response) {\n            if (response.newUuid !== undefined) {\n                options.onUuidChanged(id, response.newUuid);\n            }\n        },\n\n        // The response coming from handler implementations may be in various formats.\n        // Instead of hoping a promise nested 5 levels deep will always return an object\n        // as its first param, let's just normalize the response here.\n        normalizeResponse: function(originalResponse, successful) {\n            var response = originalResponse;\n\n            // The passed \"response\" param may not be a response at all.\n            // It could be a string, detailing the error, for example.\n            if (!qq.isObject(originalResponse)) {\n                response = {};\n\n                if (qq.isString(originalResponse) && !successful) {\n                    response.error = originalResponse;\n                }\n            }\n\n            response.success = successful;\n\n            return response;\n        },\n\n        now: function(id) {\n            var name = options.getName(id);\n\n            if (!controller.isValid(id)) {\n                throw new qq.Error(id + \" is not a valid file ID to upload!\");\n            }\n\n            options.onUpload(id, name);\n\n            if (chunkingPossible && handler._shouldChunkThisFile(id)) {\n                chunked.sendNext(id);\n            }\n            else {\n                simple.send(id, name);\n            }\n        },\n\n        start: function(id) {\n            var blobToUpload = upload.getProxyOrBlob(id);\n\n            if (blobToUpload) {\n                return upload.maybeDefer(id, blobToUpload);\n            }\n            else {\n                upload.now(id);\n                return true;\n            }\n        }\n    };\n\n    qq.extend(this, {\n        /**\n         * Adds file or file input to the queue\n         **/\n        add: function(id, file) {\n            handler.add.apply(this, arguments);\n        },\n\n        /**\n         * Sends the file identified by id\n         */\n        upload: function(id) {\n            if (connectionManager.open(id)) {\n                return upload.start(id);\n            }\n            return false;\n        },\n\n        retry: function(id) {\n            // On retry, if concurrent chunking has been enabled, we may have aborted all other in-progress chunks\n            // for a file when encountering a failed chunk upload.  We then signaled the controller to ignore\n            // all failures associated with these aborts.  We are now retrying, so we don't want to ignore\n            // any more failures at this point.\n            if (concurrentChunkingPossible) {\n                handler._getFileState(id).temp.ignoreFailure = false;\n            }\n\n            // If we are attempting to retry a file that is already consuming a connection, this is likely an auto-retry.\n            // Just go ahead and ask the handler to upload again.\n            if (connectionManager.isUsingConnection(id)) {\n                return upload.start(id);\n            }\n\n            // If we are attempting to retry a file that is not currently consuming a connection,\n            // this is likely a manual retry attempt.  We will need to ensure a connection is available\n            // before the retry commences.\n            else {\n                return controller.upload(id);\n            }\n        },\n\n        /**\n         * Cancels file upload by id\n         */\n        cancel: function(id) {\n            var cancelRetVal = handler.cancel(id);\n\n            if (qq.isGenericPromise(cancelRetVal)) {\n                cancelRetVal.then(function() {\n                    upload.cancel(id);\n                });\n            }\n            else if (cancelRetVal !== false) {\n                upload.cancel(id);\n            }\n        },\n\n        /**\n         * Cancels all queued or in-progress uploads\n         */\n        cancelAll: function() {\n            var waitingOrConnected = connectionManager.getWaitingOrConnected(),\n                i;\n\n            // ensure files are cancelled in reverse order which they were added\n            // to avoid a flash of time where a queued file begins to upload before it is canceled\n            if (waitingOrConnected.length) {\n                for (i = waitingOrConnected.length - 1; i >= 0; i--) {\n                    controller.cancel(waitingOrConnected[i]);\n                }\n            }\n\n            connectionManager.reset();\n        },\n\n        // Returns a File, Blob, or the Blob/File for the reference/parent file if the targeted blob is a proxy.\n        // Undefined if no file record is available.\n        getFile: function(id) {\n            if (handler.getProxy && handler.getProxy(id)) {\n                return handler.getProxy(id).referenceBlob;\n            }\n\n            return handler.getFile && handler.getFile(id);\n        },\n\n        // Returns true if the Blob associated with the ID is related to a proxy s\n        isProxied: function(id) {\n            return !!(handler.getProxy && handler.getProxy(id));\n        },\n\n        getInput: function(id) {\n            if (handler.getInput) {\n                return handler.getInput(id);\n            }\n        },\n\n        reset: function() {\n            log(\"Resetting upload handler\");\n            controller.cancelAll();\n            connectionManager.reset();\n            handler.reset();\n        },\n\n        expunge: function(id) {\n            if (controller.isValid(id)) {\n                return handler.expunge(id);\n            }\n        },\n\n        /**\n         * Determine if the file exists.\n         */\n        isValid: function(id) {\n            return handler.isValid(id);\n        },\n\n        getResumableFilesData: function() {\n            if (handler.getResumableFilesData) {\n                return handler.getResumableFilesData();\n            }\n            return [];\n        },\n\n        /**\n         * This may or may not be implemented, depending on the handler.  For handlers where a third-party ID is\n         * available (such as the \"key\" for Amazon S3), this will return that value.  Otherwise, the return value\n         * will be undefined.\n         *\n         * @param id Internal file ID\n         * @returns {*} Some identifier used by a 3rd-party service involved in the upload process\n         */\n        getThirdPartyFileId: function(id) {\n            if (controller.isValid(id)) {\n                return handler.getThirdPartyFileId(id);\n            }\n        },\n\n        /**\n         * Attempts to pause the associated upload if the specific handler supports this and the file is \"valid\".\n         * @param id ID of the upload/file to pause\n         * @returns {boolean} true if the upload was paused\n         */\n        pause: function(id) {\n            if (controller.isResumable(id) && handler.pause && controller.isValid(id) && handler.pause(id)) {\n                connectionManager.free(id);\n                handler.moveInProgressToRemaining(id);\n                return true;\n            }\n            return false;\n        },\n\n        // True if the file is eligible for pause/resume.\n        isResumable: function(id) {\n            return !!handler.isResumable && handler.isResumable(id);\n        }\n    });\n\n    qq.extend(options, o);\n    log = options.log;\n    chunkingPossible = options.chunking.enabled && qq.supportedFeatures.chunking;\n    concurrentChunkingPossible = chunkingPossible && options.chunking.concurrent.enabled;\n\n    preventRetryResponse = (function() {\n        var response = {};\n\n        response[options.preventRetryParam] = true;\n\n        return response;\n    }());\n\n    upload.initHandler();\n};\n","/*globals qq */\n/*jshint -W117 */\nqq.WindowReceiveMessage = function(o) {\n    \"use strict\";\n\n    var options = {\n            log: function(message, level) {}\n        },\n        callbackWrapperDetachers = {};\n\n    qq.extend(options, o);\n\n    qq.extend(this, {\n        receiveMessage: function(id, callback) {\n            var onMessageCallbackWrapper = function(event) {\n                    callback(event.data);\n                };\n\n            if (window.postMessage) {\n                callbackWrapperDetachers[id] = qq(window).attach(\"message\", onMessageCallbackWrapper);\n            }\n            else {\n                log(\"iframe message passing not supported in this browser!\", \"error\");\n            }\n        },\n\n        stopReceivingMessages: function(id) {\n            if (window.postMessage) {\n                var detacher = callbackWrapperDetachers[id];\n                if (detacher) {\n                    detacher();\n                }\n            }\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common APIs exposed to creators of upload via form/iframe handlers.  This is reused and possibly overridden\n * in some cases by specific form upload handlers.\n *\n * @constructor\n */\nqq.FormUploadHandler = function(spec) {\n    \"use strict\";\n\n    var options = spec.options,\n        handler = this,\n        proxy = spec.proxy,\n        formHandlerInstanceId = qq.getUniqueId(),\n        onloadCallbacks = {},\n        detachLoadEvents = {},\n        postMessageCallbackTimers = {},\n        isCors = options.isCors,\n        inputName = options.inputName,\n        getUuid = proxy.getUuid,\n        log = proxy.log,\n        corsMessageReceiver = new qq.WindowReceiveMessage({log: log});\n\n    /**\n     * Remove any trace of the file from the handler.\n     *\n     * @param id ID of the associated file\n     */\n    function expungeFile(id) {\n        delete detachLoadEvents[id];\n\n        // If we are dealing with CORS, we might still be waiting for a response from a loaded iframe.\n        // In that case, terminate the timer waiting for a message from the loaded iframe\n        // and stop listening for any more messages coming from this iframe.\n        if (isCors) {\n            clearTimeout(postMessageCallbackTimers[id]);\n            delete postMessageCallbackTimers[id];\n            corsMessageReceiver.stopReceivingMessages(id);\n        }\n\n        var iframe = document.getElementById(handler._getIframeName(id));\n        if (iframe) {\n            // To cancel request set src to something else.  We use src=\"javascript:false;\"\n            // because it doesn't trigger ie6 prompt on https\n            /* jshint scripturl:true */\n            iframe.setAttribute(\"src\", \"javascript:false;\");\n\n            qq(iframe).remove();\n        }\n    }\n\n    /**\n     * @param iframeName `document`-unique Name of the associated iframe\n     * @returns {*} ID of the associated file\n     */\n    function getFileIdForIframeName(iframeName) {\n        return iframeName.split(\"_\")[0];\n    }\n\n    /**\n     * Generates an iframe to be used as a target for upload-related form submits.  This also adds the iframe\n     * to the current `document`.  Note that the iframe is hidden from view.\n     *\n     * @param name Name of the iframe.\n     * @returns {HTMLIFrameElement} The created iframe\n     */\n    function initIframeForUpload(name) {\n        var iframe = qq.toElement(\"<iframe src='javascript:false;' name='\" + name + \"' />\");\n\n        iframe.setAttribute(\"id\", name);\n\n        iframe.style.display = \"none\";\n        document.body.appendChild(iframe);\n\n        return iframe;\n    }\n\n    /**\n     * If we are in CORS mode, we must listen for messages (containing the server response) from the associated\n     * iframe, since we cannot directly parse the content of the iframe due to cross-origin restrictions.\n     *\n     * @param iframe Listen for messages on this iframe.\n     * @param callback Invoke this callback with the message from the iframe.\n     */\n    function registerPostMessageCallback(iframe, callback) {\n        var iframeName = iframe.id,\n            fileId = getFileIdForIframeName(iframeName),\n            uuid = getUuid(fileId);\n\n        onloadCallbacks[uuid] = callback;\n\n        // When the iframe has loaded (after the server responds to an upload request)\n        // declare the attempt a failure if we don't receive a valid message shortly after the response comes in.\n        detachLoadEvents[fileId] = qq(iframe).attach(\"load\", function() {\n            if (handler.getInput(fileId)) {\n                log(\"Received iframe load event for CORS upload request (iframe name \" + iframeName + \")\");\n\n                postMessageCallbackTimers[iframeName] = setTimeout(function() {\n                    var errorMessage = \"No valid message received from loaded iframe for iframe name \" + iframeName;\n                    log(errorMessage, \"error\");\n                    callback({\n                        error: errorMessage\n                    });\n                }, 1000);\n            }\n        });\n\n        // Listen for messages coming from this iframe.  When a message has been received, cancel the timer\n        // that declares the upload a failure if a message is not received within a reasonable amount of time.\n        corsMessageReceiver.receiveMessage(iframeName, function(message) {\n            log(\"Received the following window message: '\" + message + \"'\");\n            var fileId = getFileIdForIframeName(iframeName),\n                response = handler._parseJsonResponse(message),\n                uuid = response.uuid,\n                onloadCallback;\n\n            if (uuid && onloadCallbacks[uuid]) {\n                log(\"Handling response for iframe name \" + iframeName);\n                clearTimeout(postMessageCallbackTimers[iframeName]);\n                delete postMessageCallbackTimers[iframeName];\n\n                handler._detachLoadEvent(iframeName);\n\n                onloadCallback = onloadCallbacks[uuid];\n\n                delete onloadCallbacks[uuid];\n                corsMessageReceiver.stopReceivingMessages(iframeName);\n                onloadCallback(response);\n            }\n            else if (!uuid) {\n                log(\"'\" + message + \"' does not contain a UUID - ignoring.\");\n            }\n        });\n    }\n\n    qq.extend(this, new qq.UploadHandler(spec));\n\n    qq.override(this, function(super_) {\n        return {\n            /**\n             * Adds File or Blob to the queue\n             **/\n            add: function(id, fileInput) {\n                super_.add(id, {input: fileInput});\n\n                fileInput.setAttribute(\"name\", inputName);\n\n                // remove file input from DOM\n                if (fileInput.parentNode) {\n                    qq(fileInput).remove();\n                }\n            },\n\n            expunge: function(id) {\n                expungeFile(id);\n                super_.expunge(id);\n            },\n\n            isValid: function(id) {\n                return super_.isValid(id) &&\n                    handler._getFileState(id).input !== undefined;\n            }\n        };\n    });\n\n    qq.extend(this, {\n        getInput: function(id) {\n            return handler._getFileState(id).input;\n        },\n\n        /**\n         * This function either delegates to a more specific message handler if CORS is involved,\n         * or simply registers a callback when the iframe has been loaded that invokes the passed callback\n         * after determining if the content of the iframe is accessible.\n         *\n         * @param iframe Associated iframe\n         * @param callback Callback to invoke after we have determined if the iframe content is accessible.\n         */\n        _attachLoadEvent: function(iframe, callback) {\n            /*jslint eqeq: true*/\n            var responseDescriptor;\n\n            if (isCors) {\n                registerPostMessageCallback(iframe, callback);\n            }\n            else {\n                detachLoadEvents[iframe.id] = qq(iframe).attach(\"load\", function() {\n                    log(\"Received response for \" + iframe.id);\n\n                    // when we remove iframe from dom\n                    // the request stops, but in IE load\n                    // event fires\n                    if (!iframe.parentNode) {\n                        return;\n                    }\n\n                    try {\n                        // fixing Opera 10.53\n                        if (iframe.contentDocument &&\n                            iframe.contentDocument.body &&\n                            iframe.contentDocument.body.innerHTML == \"false\") {\n                            // In Opera event is fired second time\n                            // when body.innerHTML changed from false\n                            // to server response approx. after 1 sec\n                            // when we upload file with iframe\n                            return;\n                        }\n                    }\n                    catch (error) {\n                        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\n                        log(\"Error when attempting to access iframe during handling of upload response (\" + error.message + \")\", \"error\");\n                        responseDescriptor = {success: false};\n                    }\n\n                    callback(responseDescriptor);\n                });\n            }\n        },\n\n        /**\n         * Creates an iframe with a specific document-unique name.\n         *\n         * @param id ID of the associated file\n         * @returns {HTMLIFrameElement}\n         */\n        _createIframe: function(id) {\n            var iframeName = handler._getIframeName(id);\n\n            return initIframeForUpload(iframeName);\n        },\n\n        /**\n         * Called when we are no longer interested in being notified when an iframe has loaded.\n         *\n         * @param id Associated file ID\n         */\n        _detachLoadEvent: function(id) {\n            if (detachLoadEvents[id] !== undefined) {\n                detachLoadEvents[id]();\n                delete detachLoadEvents[id];\n            }\n        },\n\n        /**\n         * @param fileId ID of the associated file\n         * @returns {string} The `document`-unique name of the iframe\n         */\n        _getIframeName: function(fileId) {\n            return fileId + \"_\" + formHandlerInstanceId;\n        },\n\n        /**\n         * Generates a form element and appends it to the `document`.  When the form is submitted, a specific iframe is targeted.\n         * The name of the iframe is passed in as a property of the spec parameter, and must be unique in the `document`.  Note\n         * that the form is hidden from view.\n         *\n         * @param spec An object containing various properties to be used when constructing the form.  Required properties are\n         * currently: `method`, `endpoint`, `params`, `paramsInBody`, and `targetName`.\n         * @returns {HTMLFormElement} The created form\n         */\n        _initFormForUpload: function(spec) {\n            var method = spec.method,\n                endpoint = spec.endpoint,\n                params = spec.params,\n                paramsInBody = spec.paramsInBody,\n                targetName = spec.targetName,\n                form = qq.toElement(\"<form method='\" + method + \"' enctype='multipart/form-data'></form>\"),\n                url = endpoint;\n\n            if (paramsInBody) {\n                qq.obj2Inputs(params, form);\n            }\n            else {\n                url = qq.obj2url(params, endpoint);\n            }\n\n            form.setAttribute(\"action\", url);\n            form.setAttribute(\"target\", targetName);\n            form.style.display = \"none\";\n            document.body.appendChild(form);\n\n            return form;\n        },\n\n        /**\n         * @param innerHtmlOrMessage JSON message\n         * @returns {*} The parsed response, or an empty object if the response could not be parsed\n         */\n        _parseJsonResponse: function(innerHtmlOrMessage) {\n            var response = {};\n\n            try {\n                response = qq.parseJson(innerHtmlOrMessage);\n            }\n            catch (error) {\n                log(\"Error when attempting to parse iframe upload response (\" + error.message + \")\", \"error\");\n            }\n\n            return response;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common API exposed to creators of XHR handlers.  This is reused and possibly overriding in some cases by specific\n * XHR upload handlers.\n *\n * @constructor\n */\nqq.XhrUploadHandler = function(spec) {\n    \"use strict\";\n\n    var handler = this,\n        namespace = spec.options.namespace,\n        proxy = spec.proxy,\n        chunking = spec.options.chunking,\n        resume = spec.options.resume,\n        chunkFiles = chunking && spec.options.chunking.enabled && qq.supportedFeatures.chunking,\n        resumeEnabled = resume && spec.options.resume.enabled && chunkFiles && qq.supportedFeatures.resume,\n        getName = proxy.getName,\n        getSize = proxy.getSize,\n        getUuid = proxy.getUuid,\n        getEndpoint = proxy.getEndpoint,\n        getDataByUuid = proxy.getDataByUuid,\n        onUuidChanged = proxy.onUuidChanged,\n        onProgress = proxy.onProgress,\n        log = proxy.log;\n\n    function abort(id) {\n        qq.each(handler._getXhrs(id), function(xhrId, xhr) {\n            var ajaxRequester = handler._getAjaxRequester(id, xhrId);\n\n            xhr.onreadystatechange = null;\n            xhr.upload.onprogress = null;\n            xhr.abort();\n            ajaxRequester && ajaxRequester.canceled && ajaxRequester.canceled(id);\n        });\n    }\n\n    qq.extend(this, new qq.UploadHandler(spec));\n\n    qq.override(this, function(super_) {\n        return {\n            /**\n             * Adds File or Blob to the queue\n             **/\n            add: function(id, blobOrProxy) {\n                if (qq.isFile(blobOrProxy) || qq.isBlob(blobOrProxy)) {\n                    super_.add(id, {file: blobOrProxy});\n                }\n                else if (blobOrProxy instanceof qq.BlobProxy) {\n                    super_.add(id, {proxy: blobOrProxy});\n                }\n                else {\n                    throw new Error(\"Passed obj is not a File, Blob, or proxy\");\n                }\n\n                handler._initTempState(id);\n                resumeEnabled && handler._maybePrepareForResume(id);\n            },\n\n            expunge: function(id) {\n                abort(id);\n                handler._maybeDeletePersistedChunkData(id);\n                handler._clearXhrs(id);\n                super_.expunge(id);\n            }\n        };\n    });\n\n    qq.extend(this, {\n        // Clear the cached chunk `Blob` after we are done with it, just in case the `Blob` bytes are stored in memory.\n        clearCachedChunk: function(id, chunkIdx) {\n            delete handler._getFileState(id).temp.cachedChunks[chunkIdx];\n        },\n\n        clearXhr: function(id, chunkIdx) {\n            var tempState = handler._getFileState(id).temp;\n\n            if (tempState.xhrs) {\n                delete tempState.xhrs[chunkIdx];\n            }\n            if (tempState.ajaxRequesters) {\n                delete tempState.ajaxRequesters[chunkIdx];\n            }\n        },\n\n        // Called when all chunks have been successfully uploaded.  Expected promissory return type.\n        // This defines the default behavior if nothing further is required when all chunks have been uploaded.\n        finalizeChunks: function(id, responseParser) {\n            var lastChunkIdx = handler._getTotalChunks(id) - 1,\n                xhr = handler._getXhr(id, lastChunkIdx);\n\n            if (responseParser) {\n                return new qq.Promise().success(responseParser(xhr), xhr);\n            }\n\n            return new qq.Promise().success({}, xhr);\n        },\n\n        getFile: function(id) {\n            return handler.isValid(id) && handler._getFileState(id).file;\n        },\n\n        getProxy: function(id) {\n            return handler.isValid(id) && handler._getFileState(id).proxy;\n        },\n\n        /**\n         * @returns {Array} Array of objects containing properties useful to integrators\n         * when it is important to determine which files are potentially resumable.\n         */\n        getResumableFilesData: function() {\n            var resumableFilesData = [];\n\n            handler._iterateResumeRecords(function(key, uploadData) {\n                handler.moveInProgressToRemaining(null, uploadData.chunking.inProgress,  uploadData.chunking.remaining);\n\n                var data = {\n                    name: uploadData.name,\n                    remaining: uploadData.chunking.remaining,\n                    size: uploadData.size,\n                    uuid: uploadData.uuid\n                };\n\n                if (uploadData.key) {\n                    data.key = uploadData.key;\n                }\n\n                resumableFilesData.push(data);\n            });\n\n            return resumableFilesData;\n        },\n\n        isResumable: function(id) {\n            return !!chunking && handler.isValid(id) && !handler._getFileState(id).notResumable;\n        },\n\n        moveInProgressToRemaining: function(id, optInProgress, optRemaining) {\n            var inProgress = optInProgress || handler._getFileState(id).chunking.inProgress,\n                remaining = optRemaining || handler._getFileState(id).chunking.remaining;\n\n            if (inProgress) {\n                log(qq.format(\"Moving these chunks from in-progress {}, to remaining.\", JSON.stringify(inProgress)));\n                inProgress.reverse();\n                qq.each(inProgress, function(idx, chunkIdx) {\n                    remaining.unshift(chunkIdx);\n                });\n                inProgress.length = 0;\n            }\n        },\n\n        pause: function(id) {\n            if (handler.isValid(id)) {\n                log(qq.format(\"Aborting XHR upload for {} '{}' due to pause instruction.\", id, getName(id)));\n                handler._getFileState(id).paused = true;\n                abort(id);\n                return true;\n            }\n        },\n\n        reevaluateChunking: function(id) {\n            if (chunking && handler.isValid(id)) {\n                var state = handler._getFileState(id),\n                    totalChunks,\n                    i;\n\n                delete state.chunking;\n\n                state.chunking = {};\n                totalChunks = handler._getTotalChunks(id);\n                if (totalChunks > 1 || chunking.mandatory) {\n                    state.chunking.enabled = true;\n                    state.chunking.parts = totalChunks;\n                    state.chunking.remaining = [];\n\n                    for (i = 0; i < totalChunks; i++) {\n                        state.chunking.remaining.push(i);\n                    }\n\n                    handler._initTempState(id);\n                }\n                else {\n                    state.chunking.enabled = false;\n                }\n            }\n        },\n\n        updateBlob: function(id, newBlob) {\n            if (handler.isValid(id)) {\n                handler._getFileState(id).file = newBlob;\n            }\n        },\n\n        _clearXhrs: function(id) {\n            var tempState = handler._getFileState(id).temp;\n\n            qq.each(tempState.ajaxRequesters, function(chunkId) {\n                delete tempState.ajaxRequesters[chunkId];\n            });\n\n            qq.each(tempState.xhrs, function(chunkId) {\n                delete tempState.xhrs[chunkId];\n            });\n        },\n\n        /**\n         * Creates an XHR instance for this file and stores it in the fileState.\n         *\n         * @param id File ID\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\n         * @returns {XMLHttpRequest}\n         */\n        _createXhr: function(id, optChunkIdx) {\n            return handler._registerXhr(id, optChunkIdx, qq.createXhrInstance());\n        },\n\n        _getAjaxRequester: function(id, optChunkIdx) {\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n            return handler._getFileState(id).temp.ajaxRequesters[chunkIdx];\n        },\n\n        _getChunkData: function(id, chunkIndex) {\n            var chunkSize = chunking.partSize,\n                fileSize = getSize(id),\n                fileOrBlob = handler.getFile(id),\n                startBytes = chunkSize * chunkIndex,\n                endBytes = startBytes + chunkSize >= fileSize ? fileSize : startBytes + chunkSize,\n                totalChunks = handler._getTotalChunks(id),\n                cachedChunks = this._getFileState(id).temp.cachedChunks,\n\n            // To work around a Webkit GC bug, we must keep each chunk `Blob` in scope until we are done with it.\n            // See https://github.com/FineUploader/fine-uploader/issues/937#issuecomment-41418760\n                blob = cachedChunks[chunkIndex] || qq.sliceBlob(fileOrBlob, startBytes, endBytes);\n\n            cachedChunks[chunkIndex] = blob;\n\n            return {\n                part: chunkIndex,\n                start: startBytes,\n                end: endBytes,\n                count: totalChunks,\n                blob: blob,\n                size: endBytes - startBytes\n            };\n        },\n\n        _getChunkDataForCallback: function(chunkData) {\n            return {\n                partIndex: chunkData.part,\n                startByte: chunkData.start + 1,\n                endByte: chunkData.end,\n                totalParts: chunkData.count\n            };\n        },\n\n        /**\n         * @param id File ID\n         * @returns {string} Identifier for this item that may appear in the browser's local storage\n         */\n        _getLocalStorageId: function(id) {\n            var formatVersion = \"5.0\",\n                name = getName(id),\n                size = getSize(id),\n                chunkSize = chunking.partSize,\n                endpoint = getEndpoint(id);\n\n            return qq.format(\"qq{}resume{}-{}-{}-{}-{}\", namespace, formatVersion, name, size, chunkSize, endpoint);\n        },\n\n        _getMimeType: function(id) {\n            return handler.getFile(id).type;\n        },\n\n        _getPersistableData: function(id) {\n            return handler._getFileState(id).chunking;\n        },\n\n        /**\n         * @param id ID of the associated file\n         * @returns {number} Number of parts this file can be divided into, or undefined if chunking is not supported in this UA\n         */\n        _getTotalChunks: function(id) {\n            if (chunking) {\n                var fileSize = getSize(id),\n                    chunkSize = chunking.partSize;\n\n                return Math.ceil(fileSize / chunkSize);\n            }\n        },\n\n        _getXhr: function(id, optChunkIdx) {\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n            return handler._getFileState(id).temp.xhrs[chunkIdx];\n        },\n\n        _getXhrs: function(id) {\n            return handler._getFileState(id).temp.xhrs;\n        },\n\n        // Iterates through all XHR handler-created resume records (in local storage),\n        // invoking the passed callback and passing in the key and value of each local storage record.\n        _iterateResumeRecords: function(callback) {\n            if (resumeEnabled) {\n                qq.each(localStorage, function(key, item) {\n                    if (key.indexOf(qq.format(\"qq{}resume\", namespace)) === 0) {\n                        var uploadData = JSON.parse(item);\n                        callback(key, uploadData);\n                    }\n                });\n            }\n        },\n\n        _initTempState: function(id) {\n            handler._getFileState(id).temp = {\n                ajaxRequesters: {},\n                chunkProgress: {},\n                xhrs: {},\n                cachedChunks: {}\n            };\n        },\n\n        _markNotResumable: function(id) {\n            handler._getFileState(id).notResumable = true;\n        },\n\n        // Removes a chunked upload record from local storage, if possible.\n        // Returns true if the item was removed, false otherwise.\n        _maybeDeletePersistedChunkData: function(id) {\n            var localStorageId;\n\n            if (resumeEnabled && handler.isResumable(id)) {\n                localStorageId = handler._getLocalStorageId(id);\n\n                if (localStorageId && localStorage.getItem(localStorageId)) {\n                    localStorage.removeItem(localStorageId);\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        // If this is a resumable upload, grab the relevant data from storage and items in memory that track this upload\n        // so we can pick up from where we left off.\n        _maybePrepareForResume: function(id) {\n            var state = handler._getFileState(id),\n                localStorageId, persistedData;\n\n            // Resume is enabled and possible and this is the first time we've tried to upload this file in this session,\n            // so prepare for a resume attempt.\n            if (resumeEnabled && state.key === undefined) {\n                localStorageId = handler._getLocalStorageId(id);\n                persistedData = localStorage.getItem(localStorageId);\n\n                // If we found this item in local storage, maybe we should resume it.\n                if (persistedData) {\n                    persistedData = JSON.parse(persistedData);\n\n                    // If we found a resume record but we have already handled this file in this session,\n                    // don't try to resume it & ensure we don't persist future check data\n                    if (getDataByUuid(persistedData.uuid)) {\n                        handler._markNotResumable(id);\n                    }\n                    else {\n                        log(qq.format(\"Identified file with ID {} and name of {} as resumable.\", id, getName(id)));\n\n                        onUuidChanged(id, persistedData.uuid);\n\n                        state.key = persistedData.key;\n                        state.chunking = persistedData.chunking;\n                        state.loaded = persistedData.loaded;\n                        state.attemptingResume = true;\n\n                        handler.moveInProgressToRemaining(id);\n                    }\n                }\n            }\n        },\n\n        // Persist any data needed to resume this upload in a new session.\n        _maybePersistChunkedState: function(id) {\n            var state = handler._getFileState(id),\n                localStorageId, persistedData;\n\n            // If local storage isn't supported by the browser, or if resume isn't enabled or possible, give up\n            if (resumeEnabled && handler.isResumable(id)) {\n                localStorageId = handler._getLocalStorageId(id);\n\n                persistedData = {\n                    name: getName(id),\n                    size: getSize(id),\n                    uuid: getUuid(id),\n                    key: state.key,\n                    chunking: state.chunking,\n                    loaded: state.loaded,\n                    lastUpdated: Date.now()\n                };\n\n                try {\n                    localStorage.setItem(localStorageId, JSON.stringify(persistedData));\n                }\n                catch (error) {\n                    log(qq.format(\"Unable to save resume data for '{}' due to error: '{}'.\", id, error.toString()), \"warn\");\n                }\n            }\n        },\n\n        _registerProgressHandler: function(id, chunkIdx, chunkSize) {\n            var xhr = handler._getXhr(id, chunkIdx),\n                name = getName(id),\n                progressCalculator = {\n                    simple: function(loaded, total) {\n                        var fileSize = getSize(id);\n\n                        if (loaded === total) {\n                            onProgress(id, name, fileSize, fileSize);\n                        }\n                        else {\n                            onProgress(id, name, (loaded >= fileSize ? fileSize - 1 : loaded), fileSize);\n                        }\n                    },\n\n                    chunked: function(loaded, total) {\n                        var chunkProgress = handler._getFileState(id).temp.chunkProgress,\n                            totalSuccessfullyLoadedForFile = handler._getFileState(id).loaded,\n                            loadedForRequest = loaded,\n                            totalForRequest = total,\n                            totalFileSize = getSize(id),\n                            estActualChunkLoaded = loadedForRequest - (totalForRequest - chunkSize),\n                            totalLoadedForFile = totalSuccessfullyLoadedForFile;\n\n                        chunkProgress[chunkIdx] = estActualChunkLoaded;\n\n                        qq.each(chunkProgress, function(chunkIdx, chunkLoaded) {\n                            totalLoadedForFile += chunkLoaded;\n                        });\n\n                        onProgress(id, name, totalLoadedForFile, totalFileSize);\n                    }\n                };\n\n            xhr.upload.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    /* jshint eqnull: true */\n                    var type = chunkSize == null ? \"simple\" : \"chunked\";\n                    progressCalculator[type](e.loaded, e.total);\n                }\n            };\n        },\n\n        /**\n         * Registers an XHR transport instance created elsewhere.\n         *\n         * @param id ID of the associated file\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\n         * @param xhr XMLHttpRequest object instance\n         * @param optAjaxRequester `qq.AjaxRequester` associated with this request, if applicable.\n         * @returns {XMLHttpRequest}\n         */\n        _registerXhr: function(id, optChunkIdx, xhr, optAjaxRequester) {\n            var xhrsId = optChunkIdx == null ? -1 : optChunkIdx,\n                tempState = handler._getFileState(id).temp;\n\n            tempState.xhrs = tempState.xhrs || {};\n            tempState.ajaxRequesters = tempState.ajaxRequesters || {};\n\n            tempState.xhrs[xhrsId] = xhr;\n\n            if (optAjaxRequester) {\n                tempState.ajaxRequesters[xhrsId] = optAjaxRequester;\n            }\n\n            return xhr;\n        },\n\n        // Deletes any local storage records that are \"expired\".\n        _removeExpiredChunkingRecords: function() {\n            var expirationDays = resume.recordsExpireIn;\n\n            handler._iterateResumeRecords(function(key, uploadData) {\n                var expirationDate = new Date(uploadData.lastUpdated);\n\n                // transform updated date into expiration date\n                expirationDate.setDate(expirationDate.getDate() + expirationDays);\n\n                if (expirationDate.getTime() <= Date.now()) {\n                    log(\"Removing expired resume record with key \" + key);\n                    localStorage.removeItem(key);\n                }\n            });\n        },\n\n        /**\n         * Determine if the associated file should be chunked.\n         *\n         * @param id ID of the associated file\n         * @returns {*} true if chunking is enabled, possible, and the file can be split into more than 1 part\n         */\n        _shouldChunkThisFile: function(id) {\n            var state = handler._getFileState(id);\n\n            if (!state.chunking) {\n                handler.reevaluateChunking(id);\n            }\n\n            return state.chunking.enabled;\n        }\n    });\n};\n","/*globals qq, XMLHttpRequest*/\nqq.DeleteFileAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            method: \"DELETE\",\n            uuidParamName: \"qquuid\",\n            endpointStore: {},\n            maxConnections: 3,\n            customHeaders: function(id) {return {};},\n            paramsStore: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onDelete: function(id) {},\n            onDeleteComplete: function(id, xhrOrXdr, isError) {}\n        };\n\n    qq.extend(options, o);\n\n    function getMandatedParams() {\n        if (options.method.toUpperCase() === \"POST\") {\n            return {\n                _method: \"DELETE\"\n            };\n        }\n\n        return {};\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"POST\", \"DELETE\"],\n        method: options.method,\n        endpointStore: options.endpointStore,\n        paramsStore: options.paramsStore,\n        mandatedParams: getMandatedParams(),\n        maxConnections: options.maxConnections,\n        customHeaders: function(id) {\n            return options.customHeaders.get(id);\n        },\n        log: options.log,\n        onSend: options.onDelete,\n        onComplete: options.onDeleteComplete,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        sendDelete: function(id, uuid, additionalMandatedParams) {\n            var additionalOptions = additionalMandatedParams || {};\n\n            options.log(\"Submitting delete file request for \" + id);\n\n            if (options.method === \"DELETE\") {\n                requester.initTransport(id)\n                    .withPath(uuid)\n                    .withParams(additionalOptions)\n                    .send();\n            }\n            else {\n                additionalOptions[options.uuidParamName] = uuid;\n                requester.initTransport(id)\n                    .withParams(additionalOptions)\n                    .send();\n            }\n        }\n    });\n};\n","/*global qq, define */\n/*jshint strict:false,bitwise:false,nonew:false,asi:true,-W064,-W116,-W089 */\n/**\n * Mega pixel image rendering library for iOS6+\n *\n * Fixes iOS6+'s image file rendering issue for large size image (over mega-pixel),\n * which causes unexpected subsampling when drawing it in canvas.\n * By using this library, you can safely render the image with proper stretching.\n *\n * Copyright (c) 2012 Shinichi Tomita <shinichi.tomita@gmail.com>\n * Released under the MIT license\n *\n * Heavily modified by Widen for Fine Uploader\n */\n(function() {\n\n    /**\n     * Detect subsampling in loaded image.\n     * In iOS, larger images than 2M pixels may be subsampled in rendering.\n     */\n    function detectSubsampling(img) {\n        var iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            canvas = document.createElement(\"canvas\"),\n            ctx;\n\n        if (iw * ih > 1024 * 1024) { // subsampling may happen over megapixel image\n            canvas.width = canvas.height = 1;\n            ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, -iw + 1, 0);\n            // subsampled image becomes half smaller in rendering size.\n            // check alpha channel value to confirm image is covering edge pixel or not.\n            // if alpha value is 0 image is not covering, hence subsampled.\n            return ctx.getImageData(0, 0, 1, 1).data[3] === 0;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Detecting vertical squash in loaded image.\n     * Fixes a bug which squash image vertically while drawing into canvas for some images.\n     */\n    function detectVerticalSquash(img, iw, ih) {\n        var canvas = document.createElement(\"canvas\"),\n            sy = 0,\n            ey = ih,\n            py = ih,\n            ctx, data, alpha, ratio;\n\n        canvas.width = 1;\n        canvas.height = ih;\n        ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(img, 0, 0);\n        data = ctx.getImageData(0, 0, 1, ih).data;\n\n        // search image edge pixel position in case it is squashed vertically.\n        while (py > sy) {\n            alpha = data[(py - 1) * 4 + 3];\n            if (alpha === 0) {\n                ey = py;\n            } else {\n                sy = py;\n            }\n            py = (ey + sy) >> 1;\n        }\n\n        ratio = (py / ih);\n        return (ratio === 0) ? 1 : ratio;\n    }\n\n    /**\n     * Rendering image element (with resizing) and get its data URL\n     */\n    function renderImageToDataURL(img, blob, options, doSquash) {\n        var canvas = document.createElement(\"canvas\"),\n            mime = options.mime || \"image/jpeg\",\n            promise = new qq.Promise();\n\n        renderImageToCanvas(img, blob, canvas, options, doSquash)\n            .then(function() {\n                promise.success(\n                    canvas.toDataURL(mime, options.quality || 0.8)\n                );\n            });\n\n        return promise;\n    }\n\n    function maybeCalculateDownsampledDimensions(spec) {\n        var maxPixels = 5241000; //iOS specific value\n\n        if (!qq.ios()) {\n            throw new qq.Error(\"Downsampled dimensions can only be reliably calculated for iOS!\");\n        }\n\n        if (spec.origHeight * spec.origWidth > maxPixels) {\n            return {\n                newHeight: Math.round(Math.sqrt(maxPixels * (spec.origHeight / spec.origWidth))),\n                newWidth: Math.round(Math.sqrt(maxPixels * (spec.origWidth / spec.origHeight)))\n            };\n        }\n    }\n\n    /**\n     * Rendering image element (with resizing) into the canvas element\n     */\n    function renderImageToCanvas(img, blob, canvas, options, doSquash) {\n        var iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            width = options.width,\n            height = options.height,\n            ctx = canvas.getContext(\"2d\"),\n            promise = new qq.Promise(),\n            modifiedDimensions;\n\n        ctx.save();\n\n        if (options.resize) {\n            return renderImageToCanvasWithCustomResizer({\n                blob: blob,\n                canvas: canvas,\n                image: img,\n                imageHeight: ih,\n                imageWidth: iw,\n                orientation: options.orientation,\n                resize: options.resize,\n                targetHeight: height,\n                targetWidth: width\n            });\n        }\n\n        if (!qq.supportedFeatures.unlimitedScaledImageSize) {\n            modifiedDimensions = maybeCalculateDownsampledDimensions({\n                origWidth: width,\n                origHeight: height\n            });\n\n            if (modifiedDimensions) {\n                qq.log(qq.format(\"Had to reduce dimensions due to device limitations from {}w / {}h to {}w / {}h\",\n                    width, height, modifiedDimensions.newWidth, modifiedDimensions.newHeight),\n                    \"warn\");\n\n                width = modifiedDimensions.newWidth;\n                height = modifiedDimensions.newHeight;\n            }\n        }\n\n        transformCoordinate(canvas, width, height, options.orientation);\n\n        // Fine Uploader specific: Save some CPU cycles if not using iOS\n        // Assumption: This logic is only needed to overcome iOS image sampling issues\n        if (qq.ios()) {\n            (function() {\n                if (detectSubsampling(img)) {\n                    iw /= 2;\n                    ih /= 2;\n                }\n\n                var d = 1024, // size of tiling canvas\n                    tmpCanvas = document.createElement(\"canvas\"),\n                    vertSquashRatio = doSquash ? detectVerticalSquash(img, iw, ih) : 1,\n                    dw = Math.ceil(d * width / iw),\n                    dh = Math.ceil(d * height / ih / vertSquashRatio),\n                    sy = 0,\n                    dy = 0,\n                    tmpCtx, sx, dx;\n\n                tmpCanvas.width = tmpCanvas.height = d;\n                tmpCtx = tmpCanvas.getContext(\"2d\");\n\n                while (sy < ih) {\n                    sx = 0;\n                    dx = 0;\n                    while (sx < iw) {\n                        tmpCtx.clearRect(0, 0, d, d);\n                        tmpCtx.drawImage(img, -sx, -sy);\n                        ctx.drawImage(tmpCanvas, 0, 0, d, d, dx, dy, dw, dh);\n                        sx += d;\n                        dx += dw;\n                    }\n                    sy += d;\n                    dy += dh;\n                }\n                ctx.restore();\n                tmpCanvas = tmpCtx = null;\n            }());\n        }\n        else {\n            ctx.drawImage(img, 0, 0, width, height);\n        }\n\n        canvas.qqImageRendered && canvas.qqImageRendered();\n        promise.success();\n\n        return promise;\n    }\n\n    function renderImageToCanvasWithCustomResizer(resizeInfo) {\n        var blob = resizeInfo.blob,\n            image = resizeInfo.image,\n            imageHeight = resizeInfo.imageHeight,\n            imageWidth = resizeInfo.imageWidth,\n            orientation = resizeInfo.orientation,\n            promise = new qq.Promise(),\n            resize = resizeInfo.resize,\n            sourceCanvas = document.createElement(\"canvas\"),\n            sourceCanvasContext = sourceCanvas.getContext(\"2d\"),\n            targetCanvas = resizeInfo.canvas,\n            targetHeight = resizeInfo.targetHeight,\n            targetWidth = resizeInfo.targetWidth;\n\n        transformCoordinate(sourceCanvas, imageWidth, imageHeight, orientation);\n\n        targetCanvas.height = targetHeight;\n        targetCanvas.width = targetWidth;\n\n        sourceCanvasContext.drawImage(image, 0, 0);\n\n        resize({\n            blob: blob,\n            height: targetHeight,\n            image: image,\n            sourceCanvas: sourceCanvas,\n            targetCanvas: targetCanvas,\n            width: targetWidth\n        })\n            .then(\n                function success() {\n                    targetCanvas.qqImageRendered && targetCanvas.qqImageRendered();\n                    promise.success();\n                },\n                promise.failure\n            );\n\n        return promise;\n    }\n\n    /**\n     * Transform canvas coordination according to specified frame size and orientation\n     * Orientation value is from EXIF tag\n     */\n    function transformCoordinate(canvas, width, height, orientation) {\n        switch (orientation) {\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n                canvas.width = height;\n                canvas.height = width;\n                break;\n            default:\n                canvas.width = width;\n                canvas.height = height;\n        }\n        var ctx = canvas.getContext(\"2d\");\n        switch (orientation) {\n            case 2:\n                // horizontal flip\n                ctx.translate(width, 0);\n                ctx.scale(-1, 1);\n                break;\n            case 3:\n                // 180 rotate left\n                ctx.translate(width, height);\n                ctx.rotate(Math.PI);\n                break;\n            case 4:\n                // vertical flip\n                ctx.translate(0, height);\n                ctx.scale(1, -1);\n                break;\n            case 5:\n                // vertical flip + 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.scale(1, -1);\n                break;\n            case 6:\n                // 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(0, -height);\n                break;\n            case 7:\n                // horizontal flip + 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(width, -height);\n                ctx.scale(-1, 1);\n                break;\n            case 8:\n                // 90 rotate left\n                ctx.rotate(-0.5 * Math.PI);\n                ctx.translate(-width, 0);\n                break;\n            default:\n                break;\n        }\n    }\n\n    /**\n     * MegaPixImage class\n     */\n    function MegaPixImage(srcImage, errorCallback) {\n        var self = this;\n\n        if (window.Blob && srcImage instanceof Blob) {\n            (function() {\n                var img = new Image(),\n                    URL = window.URL && window.URL.createObjectURL ? window.URL :\n                        window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL : null;\n                if (!URL) { throw Error(\"No createObjectURL function found to create blob url\"); }\n                img.src = URL.createObjectURL(srcImage);\n                self.blob = srcImage;\n                srcImage = img;\n            }());\n        }\n        if (!srcImage.naturalWidth && !srcImage.naturalHeight) {\n            srcImage.onload = function() {\n                var listeners = self.imageLoadListeners;\n                if (listeners) {\n                    self.imageLoadListeners = null;\n                    // IE11 doesn't reliably report actual image dimensions immediately after onload for small files,\n                    // so let's push this to the end of the UI thread queue.\n                    setTimeout(function() {\n                        for (var i = 0, len = listeners.length; i < len; i++) {\n                            listeners[i]();\n                        }\n                    }, 0);\n                }\n            };\n            srcImage.onerror = errorCallback;\n            this.imageLoadListeners = [];\n        }\n        this.srcImage = srcImage;\n    }\n\n    /**\n     * Rendering megapix image into specified target element\n     */\n    MegaPixImage.prototype.render = function(target, options) {\n        options = options || {};\n\n        var self = this,\n            imgWidth = this.srcImage.naturalWidth,\n            imgHeight = this.srcImage.naturalHeight,\n            width = options.width,\n            height = options.height,\n            maxWidth = options.maxWidth,\n            maxHeight = options.maxHeight,\n            doSquash = !this.blob || this.blob.type === \"image/jpeg\",\n            tagName = target.tagName.toLowerCase(),\n            opt;\n\n        if (this.imageLoadListeners) {\n            this.imageLoadListeners.push(function() { self.render(target, options); });\n            return;\n        }\n\n        if (width && !height) {\n            height = (imgHeight * width / imgWidth) << 0;\n        } else if (height && !width) {\n            width = (imgWidth * height / imgHeight) << 0;\n        } else {\n            width = imgWidth;\n            height = imgHeight;\n        }\n        if (maxWidth && width > maxWidth) {\n            width = maxWidth;\n            height = (imgHeight * width / imgWidth) << 0;\n        }\n        if (maxHeight && height > maxHeight) {\n            height = maxHeight;\n            width = (imgWidth * height / imgHeight) << 0;\n        }\n\n        opt = { width: width, height: height },\n        qq.each(options, function(optionsKey, optionsValue) {\n            opt[optionsKey] = optionsValue;\n        });\n\n        if (tagName === \"img\") {\n            (function() {\n                var oldTargetSrc = target.src;\n                renderImageToDataURL(self.srcImage, self.blob, opt, doSquash)\n                    .then(function(dataUri) {\n                        target.src = dataUri;\n                        oldTargetSrc === target.src && target.onload();\n                    });\n            }());\n        } else if (tagName === \"canvas\") {\n            renderImageToCanvas(this.srcImage, this.blob, target, opt, doSquash);\n        }\n        if (typeof this.onrender === \"function\") {\n            this.onrender(target);\n        }\n    };\n\n    qq.MegaPixImage = MegaPixImage;\n})();\n","/*globals qq */\n/**\n * Draws a thumbnail of a Blob/File/URL onto an <img> or <canvas>.\n *\n * @constructor\n */\nqq.ImageGenerator = function(log) {\n    \"use strict\";\n\n    function isImg(el) {\n        return el.tagName.toLowerCase() === \"img\";\n    }\n\n    function isCanvas(el) {\n        return el.tagName.toLowerCase() === \"canvas\";\n    }\n\n    function isImgCorsSupported() {\n        return new Image().crossOrigin !== undefined;\n    }\n\n    function isCanvasSupported() {\n        var canvas = document.createElement(\"canvas\");\n\n        return canvas.getContext && canvas.getContext(\"2d\");\n    }\n\n    // This is only meant to determine the MIME type of a renderable image file.\n    // It is used to ensure images drawn from a URL that have transparent backgrounds\n    // are rendered correctly, among other things.\n    function determineMimeOfFileName(nameWithPath) {\n        /*jshint -W015 */\n        var pathSegments = nameWithPath.split(\"/\"),\n            name = pathSegments[pathSegments.length - 1].split(\"?\")[0],\n            extension = qq.getExtension(name);\n\n        extension = extension && extension.toLowerCase();\n\n        switch (extension) {\n            case \"jpeg\":\n            case \"jpg\":\n                return \"image/jpeg\";\n            case \"png\":\n                return \"image/png\";\n            case \"bmp\":\n                return \"image/bmp\";\n            case \"gif\":\n                return \"image/gif\";\n            case \"tiff\":\n            case \"tif\":\n                return \"image/tiff\";\n        }\n    }\n\n    // This will likely not work correctly in IE8 and older.\n    // It's only used as part of a formula to determine\n    // if a canvas can be used to scale a server-hosted thumbnail.\n    // If canvas isn't supported by the UA (IE8 and older)\n    // this method should not even be called.\n    function isCrossOrigin(url) {\n        var targetAnchor = document.createElement(\"a\"),\n            targetProtocol, targetHostname, targetPort;\n\n        targetAnchor.href = url;\n\n        targetProtocol = targetAnchor.protocol;\n        targetPort = targetAnchor.port;\n        targetHostname = targetAnchor.hostname;\n\n        if (targetProtocol.toLowerCase() !== window.location.protocol.toLowerCase()) {\n            return true;\n        }\n\n        if (targetHostname.toLowerCase() !== window.location.hostname.toLowerCase()) {\n            return true;\n        }\n\n        // IE doesn't take ports into consideration when determining if two endpoints are same origin.\n        if (targetPort !== window.location.port && !qq.ie()) {\n            return true;\n        }\n\n        return false;\n    }\n\n    function registerImgLoadListeners(img, promise) {\n        img.onload = function() {\n            img.onload = null;\n            img.onerror = null;\n            promise.success(img);\n        };\n\n        img.onerror = function() {\n            img.onload = null;\n            img.onerror = null;\n            log(\"Problem drawing thumbnail!\", \"error\");\n            promise.failure(img, \"Problem drawing thumbnail!\");\n        };\n    }\n\n    function registerCanvasDrawImageListener(canvas, promise) {\n        // The image is drawn on the canvas by a third-party library,\n        // and we want to know when this is completed.  Since the library\n        // may invoke drawImage many times in a loop, we need to be called\n        // back when the image is fully rendered.  So, we are expecting the\n        // code that draws this image to follow a convention that involves a\n        // function attached to the canvas instance be invoked when it is done.\n        canvas.qqImageRendered = function() {\n            promise.success(canvas);\n        };\n    }\n\n    // Fulfills a `qq.Promise` when an image has been drawn onto the target,\n    // whether that is a <canvas> or an <img>.  The attempt is considered a\n    // failure if the target is not an <img> or a <canvas>, or if the drawing\n    // attempt was not successful.\n    function registerThumbnailRenderedListener(imgOrCanvas, promise) {\n        var registered = isImg(imgOrCanvas) || isCanvas(imgOrCanvas);\n\n        if (isImg(imgOrCanvas)) {\n            registerImgLoadListeners(imgOrCanvas, promise);\n        }\n        else if (isCanvas(imgOrCanvas)) {\n            registerCanvasDrawImageListener(imgOrCanvas, promise);\n        }\n        else {\n            promise.failure(imgOrCanvas);\n            log(qq.format(\"Element container of type {} is not supported!\", imgOrCanvas.tagName), \"error\");\n        }\n\n        return registered;\n    }\n\n    // Draw a preview iff the current UA can natively display it.\n    // Also rotate the image if necessary.\n    function draw(fileOrBlob, container, options) {\n        var drawPreview = new qq.Promise(),\n            identifier = new qq.Identify(fileOrBlob, log),\n            maxSize = options.maxSize,\n            // jshint eqnull:true\n            orient = options.orient == null ? true : options.orient,\n            megapixErrorHandler = function() {\n                container.onerror = null;\n                container.onload = null;\n                log(\"Could not render preview, file may be too large!\", \"error\");\n                drawPreview.failure(container, \"Browser cannot render image!\");\n            };\n\n        identifier.isPreviewable().then(\n            function(mime) {\n                // If options explicitly specify that Orientation is not desired,\n                // replace the orient task with a dummy promise that \"succeeds\" immediately.\n                var dummyExif = {\n                        parse: function() {\n                            return new qq.Promise().success();\n                        }\n                    },\n                    exif = orient ? new qq.Exif(fileOrBlob, log) : dummyExif,\n                    mpImg = new qq.MegaPixImage(fileOrBlob, megapixErrorHandler);\n\n                if (registerThumbnailRenderedListener(container, drawPreview)) {\n                    exif.parse().then(\n                        function(exif) {\n                            var orientation = exif && exif.Orientation;\n\n                            mpImg.render(container, {\n                                maxWidth: maxSize,\n                                maxHeight: maxSize,\n                                orientation: orientation,\n                                mime: mime,\n                                resize: options.customResizeFunction\n                            });\n                        },\n\n                        function(failureMsg) {\n                            log(qq.format(\"EXIF data could not be parsed ({}).  Assuming orientation = 1.\", failureMsg));\n\n                            mpImg.render(container, {\n                                maxWidth: maxSize,\n                                maxHeight: maxSize,\n                                mime: mime,\n                                resize: options.customResizeFunction\n                            });\n                        }\n                    );\n                }\n            },\n\n            function() {\n                log(\"Not previewable\");\n                drawPreview.failure(container, \"Not previewable\");\n            }\n        );\n\n        return drawPreview;\n    }\n\n    function drawOnCanvasOrImgFromUrl(url, canvasOrImg, draw, maxSize, customResizeFunction) {\n        var tempImg = new Image(),\n            tempImgRender = new qq.Promise();\n\n        registerThumbnailRenderedListener(tempImg, tempImgRender);\n\n        if (isCrossOrigin(url)) {\n            tempImg.crossOrigin = \"anonymous\";\n        }\n\n        tempImg.src = url;\n\n        tempImgRender.then(\n            function rendered() {\n                registerThumbnailRenderedListener(canvasOrImg, draw);\n\n                var mpImg = new qq.MegaPixImage(tempImg);\n                mpImg.render(canvasOrImg, {\n                    maxWidth: maxSize,\n                    maxHeight: maxSize,\n                    mime: determineMimeOfFileName(url),\n                    resize: customResizeFunction\n                });\n            },\n\n            draw.failure\n        );\n    }\n\n    function drawOnImgFromUrlWithCssScaling(url, img, draw, maxSize) {\n        registerThumbnailRenderedListener(img, draw);\n        // NOTE: The fact that maxWidth/height is set on the thumbnail for scaled images\n        // that must drop back to CSS is known and exploited by the templating module.\n        // In this module, we pre-render \"waiting\" thumbs for all files immediately after they\n        // are submitted, and we must be sure to pass any style associated with the \"waiting\" preview.\n        qq(img).css({\n            maxWidth: maxSize + \"px\",\n            maxHeight: maxSize + \"px\"\n        });\n\n        img.src = url;\n    }\n\n    // Draw a (server-hosted) thumbnail given a URL.\n    // This will optionally scale the thumbnail as well.\n    // It attempts to use <canvas> to scale, but will fall back\n    // to max-width and max-height style properties if the UA\n    // doesn't support canvas or if the images is cross-domain and\n    // the UA doesn't support the crossorigin attribute on img tags,\n    // which is required to scale a cross-origin image using <canvas> &\n    // then export it back to an <img>.\n    function drawFromUrl(url, container, options) {\n        var draw = new qq.Promise(),\n            scale = options.scale,\n            maxSize = scale ? options.maxSize : null;\n\n        // container is an img, scaling needed\n        if (scale && isImg(container)) {\n            // Iff canvas is available in this UA, try to use it for scaling.\n            // Otherwise, fall back to CSS scaling\n            if (isCanvasSupported()) {\n                // Attempt to use <canvas> for image scaling,\n                // but we must fall back to scaling via CSS/styles\n                // if this is a cross-origin image and the UA doesn't support <img> CORS.\n                if (isCrossOrigin(url) && !isImgCorsSupported()) {\n                    drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n                }\n                else {\n                    drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n                }\n            }\n            else {\n                drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n            }\n        }\n        // container is a canvas, scaling optional\n        else if (isCanvas(container)) {\n            drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n        }\n        // container is an img & no scaling: just set the src attr to the passed url\n        else if (registerThumbnailRenderedListener(container, draw)) {\n            container.src = url;\n        }\n\n        return draw;\n    }\n\n    qq.extend(this, {\n        /**\n         * Generate a thumbnail.  Depending on the arguments, this may either result in\n         * a client-side rendering of an image (if a `Blob` is supplied) or a server-generated\n         * image that may optionally be scaled client-side using <canvas> or CSS/styles (as a fallback).\n         *\n         * @param fileBlobOrUrl a `File`, `Blob`, or a URL pointing to the image\n         * @param container <img> or <canvas> to contain the preview\n         * @param options possible properties include `maxSize` (int), `orient` (bool - default true), resize` (bool - default true), and `customResizeFunction`.\n         * @returns qq.Promise fulfilled when the preview has been drawn, or the attempt has failed\n         */\n        generate: function(fileBlobOrUrl, container, options) {\n            if (qq.isString(fileBlobOrUrl)) {\n                log(\"Attempting to update thumbnail based on server response.\");\n                return drawFromUrl(fileBlobOrUrl, container, options || {});\n            }\n            else {\n                log(\"Attempting to draw client-side image preview.\");\n                return draw(fileBlobOrUrl, container, options || {});\n            }\n        }\n    });\n\n    /*<testing>*/\n    this._testing = {};\n    this._testing.isImg = isImg;\n    this._testing.isCanvas = isCanvas;\n    this._testing.isCrossOrigin = isCrossOrigin;\n    this._testing.determineMimeOfFileName = determineMimeOfFileName;\n    /*</testing>*/\n};\n","/*globals qq */\n/**\n * EXIF image data parser.  Currently only parses the Orientation tag value,\n * but this may be expanded to other tags in the future.\n *\n * @param fileOrBlob Attempt to parse EXIF data in this `Blob`\n * @constructor\n */\nqq.Exif = function(fileOrBlob, log) {\n    \"use strict\";\n\n    // Orientation is the only tag parsed here at this time.\n    var TAG_IDS = [274],\n        TAG_INFO = {\n            274: {\n                name: \"Orientation\",\n                bytes: 2\n            }\n        };\n\n    // Convert a little endian (hex string) to big endian (decimal).\n    function parseLittleEndian(hex) {\n        var result = 0,\n            pow = 0;\n\n        while (hex.length > 0) {\n            result += parseInt(hex.substring(0, 2), 16) * Math.pow(2, pow);\n            hex = hex.substring(2, hex.length);\n            pow += 8;\n        }\n\n        return result;\n    }\n\n    // Find the byte offset, of Application Segment 1 (EXIF).\n    // External callers need not supply any arguments.\n    function seekToApp1(offset, promise) {\n        var theOffset = offset,\n            thePromise = promise;\n        if (theOffset === undefined) {\n            theOffset = 2;\n            thePromise = new qq.Promise();\n        }\n\n        qq.readBlobToHex(fileOrBlob, theOffset, 4).then(function(hex) {\n            var match = /^ffe([0-9])/.exec(hex),\n                segmentLength;\n\n            if (match) {\n                if (match[1] !== \"1\") {\n                    segmentLength = parseInt(hex.slice(4, 8), 16);\n                    seekToApp1(theOffset + segmentLength + 2, thePromise);\n                }\n                else {\n                    thePromise.success(theOffset);\n                }\n            }\n            else {\n                thePromise.failure(\"No EXIF header to be found!\");\n            }\n        });\n\n        return thePromise;\n    }\n\n    // Find the byte offset of Application Segment 1 (EXIF) for valid JPEGs only.\n    function getApp1Offset() {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, 0, 6).then(function(hex) {\n            if (hex.indexOf(\"ffd8\") !== 0) {\n                promise.failure(\"Not a valid JPEG!\");\n            }\n            else {\n                seekToApp1().then(function(offset) {\n                    promise.success(offset);\n                },\n                function(error) {\n                    promise.failure(error);\n                });\n            }\n        });\n\n        return promise;\n    }\n\n    // Determine the byte ordering of the EXIF header.\n    function isLittleEndian(app1Start) {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, app1Start + 10, 2).then(function(hex) {\n            promise.success(hex === \"4949\");\n        });\n\n        return promise;\n    }\n\n    // Determine the number of directory entries in the EXIF header.\n    function getDirEntryCount(app1Start, littleEndian) {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, app1Start + 18, 2).then(function(hex) {\n            if (littleEndian) {\n                return promise.success(parseLittleEndian(hex));\n            }\n            else {\n                promise.success(parseInt(hex, 16));\n            }\n        });\n\n        return promise;\n    }\n\n    // Get the IFD portion of the EXIF header as a hex string.\n    function getIfd(app1Start, dirEntries) {\n        var offset = app1Start + 20,\n            bytes = dirEntries * 12;\n\n        return qq.readBlobToHex(fileOrBlob, offset, bytes);\n    }\n\n    // Obtain an array of all directory entries (as hex strings) in the EXIF header.\n    function getDirEntries(ifdHex) {\n        var entries = [],\n            offset = 0;\n\n        while (offset + 24 <= ifdHex.length) {\n            entries.push(ifdHex.slice(offset, offset + 24));\n            offset += 24;\n        }\n\n        return entries;\n    }\n\n    // Obtain values for all relevant tags and return them.\n    function getTagValues(littleEndian, dirEntries) {\n        var TAG_VAL_OFFSET = 16,\n            tagsToFind = qq.extend([], TAG_IDS),\n            vals = {};\n\n        qq.each(dirEntries, function(idx, entry) {\n            var idHex = entry.slice(0, 4),\n                id = littleEndian ? parseLittleEndian(idHex) : parseInt(idHex, 16),\n                tagsToFindIdx = tagsToFind.indexOf(id),\n                tagValHex, tagName, tagValLength;\n\n            if (tagsToFindIdx >= 0) {\n                tagName = TAG_INFO[id].name;\n                tagValLength = TAG_INFO[id].bytes;\n                tagValHex = entry.slice(TAG_VAL_OFFSET, TAG_VAL_OFFSET + (tagValLength * 2));\n                vals[tagName] = littleEndian ? parseLittleEndian(tagValHex) : parseInt(tagValHex, 16);\n\n                tagsToFind.splice(tagsToFindIdx, 1);\n            }\n\n            if (tagsToFind.length === 0) {\n                return false;\n            }\n        });\n\n        return vals;\n    }\n\n    qq.extend(this, {\n        /**\n         * Attempt to parse the EXIF header for the `Blob` associated with this instance.\n         *\n         * @returns {qq.Promise} To be fulfilled when the parsing is complete.\n         * If successful, the parsed EXIF header as an object will be included.\n         */\n        parse: function() {\n            var parser = new qq.Promise(),\n                onParseFailure = function(message) {\n                    log(qq.format(\"EXIF header parse failed: '{}' \", message));\n                    parser.failure(message);\n                };\n\n            getApp1Offset().then(function(app1Offset) {\n                log(qq.format(\"Moving forward with EXIF header parsing for '{}'\", fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name));\n\n                isLittleEndian(app1Offset).then(function(littleEndian) {\n\n                    log(qq.format(\"EXIF Byte order is {} endian\", littleEndian ? \"little\" : \"big\"));\n\n                    getDirEntryCount(app1Offset, littleEndian).then(function(dirEntryCount) {\n\n                        log(qq.format(\"Found {} APP1 directory entries\", dirEntryCount));\n\n                        getIfd(app1Offset, dirEntryCount).then(function(ifdHex) {\n                            var dirEntries = getDirEntries(ifdHex),\n                                tagValues = getTagValues(littleEndian, dirEntries);\n\n                            log(\"Successfully parsed some EXIF tags\");\n\n                            parser.success(tagValues);\n                        }, onParseFailure);\n                    }, onParseFailure);\n                }, onParseFailure);\n            }, onParseFailure);\n\n            return parser;\n        }\n    });\n\n    /*<testing>*/\n    this._testing = {};\n    this._testing.parseLittleEndian = parseLittleEndian;\n    /*</testing>*/\n};\n","/*globals qq */\nqq.Identify = function(fileOrBlob, log) {\n    \"use strict\";\n\n    function isIdentifiable(magicBytes, questionableBytes) {\n        var identifiable = false,\n            magicBytesEntries = [].concat(magicBytes);\n\n        qq.each(magicBytesEntries, function(idx, magicBytesArrayEntry) {\n            if (questionableBytes.indexOf(magicBytesArrayEntry) === 0) {\n                identifiable = true;\n                return false;\n            }\n        });\n\n        return identifiable;\n    }\n\n    qq.extend(this, {\n        /**\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by reading magic\n         * bytes in the beginning of the file, so this is an asynchronous operation.  Before we attempt to read the\n         * file, we will examine the blob's type attribute to save CPU cycles.\n         *\n         * @returns {qq.Promise} Promise that is fulfilled when identification is complete.\n         * If successful, the MIME string is passed to the success handler.\n         */\n        isPreviewable: function() {\n            var self = this,\n                identifier = new qq.Promise(),\n                previewable = false,\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n\n            log(qq.format(\"Attempting to determine if {} can be rendered in this browser\", name));\n\n            log(\"First pass: check type attribute of blob object.\");\n\n            if (this.isPreviewableSync()) {\n                log(\"Second pass: check for magic bytes in file header.\");\n\n                qq.readBlobToHex(fileOrBlob, 0, 4).then(function(hex) {\n                    qq.each(self.PREVIEWABLE_MIME_TYPES, function(mime, bytes) {\n                        if (isIdentifiable(bytes, hex)) {\n                            // Safari is the only supported browser that can deal with TIFFs natively,\n                            // so, if this is a TIFF and the UA isn't Safari, declare this file \"non-previewable\".\n                            if (mime !== \"image/tiff\" || qq.supportedFeatures.tiffPreviews) {\n                                previewable = true;\n                                identifier.success(mime);\n                            }\n\n                            return false;\n                        }\n                    });\n\n                    log(qq.format(\"'{}' is {} able to be rendered in this browser\", name, previewable ? \"\" : \"NOT\"));\n\n                    if (!previewable) {\n                        identifier.failure();\n                    }\n                },\n                function() {\n                    log(\"Error reading file w/ name '\" + name + \"'.  Not able to be rendered in this browser.\");\n                    identifier.failure();\n                });\n            }\n            else {\n                identifier.failure();\n            }\n\n            return identifier;\n        },\n\n        /**\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by checking the\n         * blob's type attribute.  This is a synchronous operation, useful for situations where an asynchronous operation\n         * would be challenging to support.  Note that the blob's type property is not as accurate as reading the\n         * file's magic bytes.\n         *\n         * @returns {Boolean} true if the blob can be rendered in the current browser\n         */\n        isPreviewableSync: function() {\n            var fileMime = fileOrBlob.type,\n                // Assumption: This will only ever be executed in browsers that support `Object.keys`.\n                isRecognizedImage = qq.indexOf(Object.keys(this.PREVIEWABLE_MIME_TYPES), fileMime) >= 0,\n                previewable = false,\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n\n            if (isRecognizedImage) {\n                if (fileMime === \"image/tiff\") {\n                    previewable = qq.supportedFeatures.tiffPreviews;\n                }\n                else {\n                    previewable = true;\n                }\n            }\n\n            !previewable && log(name + \" is not previewable in this browser per the blob's type attr\");\n\n            return previewable;\n        }\n    });\n};\n\nqq.Identify.prototype.PREVIEWABLE_MIME_TYPES = {\n    \"image/jpeg\": \"ffd8ff\",\n    \"image/gif\": \"474946\",\n    \"image/png\": \"89504e\",\n    \"image/bmp\": \"424d\",\n    \"image/tiff\": [\"49492a00\", \"4d4d002a\"]\n};\n","/*globals qq*/\n/**\n * Attempts to validate an image, wherever possible.\n *\n * @param blob File or Blob representing a user-selecting image.\n * @param log Uses this to post log messages to the console.\n * @constructor\n */\nqq.ImageValidation = function(blob, log) {\n    \"use strict\";\n\n    /**\n     * @param limits Object with possible image-related limits to enforce.\n     * @returns {boolean} true if at least one of the limits has a non-zero value\n     */\n    function hasNonZeroLimits(limits) {\n        var atLeastOne = false;\n\n        qq.each(limits, function(limit, value) {\n            if (value > 0) {\n                atLeastOne = true;\n                return false;\n            }\n        });\n\n        return atLeastOne;\n    }\n\n    /**\n     * @returns {qq.Promise} The promise is a failure if we can't obtain the width & height.\n     * Otherwise, `success` is called on the returned promise with an object containing\n     * `width` and `height` properties.\n     */\n    function getWidthHeight() {\n        var sizeDetermination = new qq.Promise();\n\n        new qq.Identify(blob, log).isPreviewable().then(function() {\n            var image = new Image(),\n                url = window.URL && window.URL.createObjectURL ? window.URL :\n                      window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL :\n                      null;\n\n            if (url) {\n                image.onerror = function() {\n                    log(\"Cannot determine dimensions for image.  May be too large.\", \"error\");\n                    sizeDetermination.failure();\n                };\n\n                image.onload = function() {\n                    sizeDetermination.success({\n                        width: this.width,\n                        height: this.height\n                    });\n                };\n\n                image.src = url.createObjectURL(blob);\n            }\n            else {\n                log(\"No createObjectURL function available to generate image URL!\", \"error\");\n                sizeDetermination.failure();\n            }\n        }, sizeDetermination.failure);\n\n        return sizeDetermination;\n    }\n\n    /**\n     *\n     * @param limits Object with possible image-related limits to enforce.\n     * @param dimensions Object containing `width` & `height` properties for the image to test.\n     * @returns {String || undefined} The name of the failing limit.  Undefined if no failing limits.\n     */\n    function getFailingLimit(limits, dimensions) {\n        var failingLimit;\n\n        qq.each(limits, function(limitName, limitValue) {\n            if (limitValue > 0) {\n                var limitMatcher = /(max|min)(Width|Height)/.exec(limitName),\n                    dimensionPropName = limitMatcher[2].charAt(0).toLowerCase() + limitMatcher[2].slice(1),\n                    actualValue = dimensions[dimensionPropName];\n\n                /*jshint -W015*/\n                switch (limitMatcher[1]) {\n                    case \"min\":\n                        if (actualValue < limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                    case \"max\":\n                        if (actualValue > limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                }\n            }\n        });\n\n        return failingLimit;\n    }\n\n    /**\n     * Validate the associated blob.\n     *\n     * @param limits\n     * @returns {qq.Promise} `success` is called on the promise is the image is valid or\n     * if the blob is not an image, or if the image is not verifiable.\n     * Otherwise, `failure` with the name of the failing limit.\n     */\n    this.validate = function(limits) {\n        var validationEffort = new qq.Promise();\n\n        log(\"Attempting to validate image.\");\n\n        if (hasNonZeroLimits(limits)) {\n            getWidthHeight().then(function(dimensions) {\n                var failingLimit = getFailingLimit(limits, dimensions);\n\n                if (failingLimit) {\n                    validationEffort.failure(failingLimit);\n                }\n                else {\n                    validationEffort.success();\n                }\n            }, validationEffort.success);\n        }\n        else {\n            validationEffort.success();\n        }\n\n        return validationEffort;\n    };\n};\n","/* globals qq */\n/**\n * Module used to control populating the initial list of files.\n *\n * @constructor\n */\nqq.Session = function(spec) {\n    \"use strict\";\n\n    var options = {\n        endpoint: null,\n        params: {},\n        customHeaders: {},\n        cors: {},\n        addFileRecord: function(sessionData) {},\n        log: function(message, level) {}\n    };\n\n    qq.extend(options, spec, true);\n\n    function isJsonResponseValid(response) {\n        if (qq.isArray(response)) {\n            return true;\n        }\n\n        options.log(\"Session response is not an array.\", \"error\");\n    }\n\n    function handleFileItems(fileItems, success, xhrOrXdr, promise) {\n        var someItemsIgnored = false;\n\n        success = success && isJsonResponseValid(fileItems);\n\n        if (success) {\n            qq.each(fileItems, function(idx, fileItem) {\n                /* jshint eqnull:true */\n                if (fileItem.uuid == null) {\n                    someItemsIgnored = true;\n                    options.log(qq.format(\"Session response item {} did not include a valid UUID - ignoring.\", idx), \"error\");\n                }\n                else if (fileItem.name == null) {\n                    someItemsIgnored = true;\n                    options.log(qq.format(\"Session response item {} did not include a valid name - ignoring.\", idx), \"error\");\n                }\n                else {\n                    try {\n                        options.addFileRecord(fileItem);\n                        return true;\n                    }\n                    catch (err) {\n                        someItemsIgnored = true;\n                        options.log(err.message, \"error\");\n                    }\n                }\n\n                return false;\n            });\n        }\n\n        promise[success && !someItemsIgnored ? \"success\" : \"failure\"](fileItems, xhrOrXdr);\n    }\n\n    // Initiate a call to the server that will be used to populate the initial file list.\n    // Returns a `qq.Promise`.\n    this.refresh = function() {\n        /*jshint indent:false */\n        var refreshEffort = new qq.Promise(),\n            refreshCompleteCallback = function(response, success, xhrOrXdr) {\n                handleFileItems(response, success, xhrOrXdr, refreshEffort);\n            },\n            requesterOptions = qq.extend({}, options),\n            requester = new qq.SessionAjaxRequester(\n                qq.extend(requesterOptions, {onComplete: refreshCompleteCallback})\n            );\n\n        requester.queryServer();\n\n        return refreshEffort;\n    };\n};\n","/*globals qq, XMLHttpRequest*/\n/**\n * Thin module used to send GET requests to the server, expecting information about session\n * data used to initialize an uploader instance.\n *\n * @param spec Various options used to influence the associated request.\n * @constructor\n */\nqq.SessionAjaxRequester = function(spec) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            endpoint: null,\n            customHeaders: {},\n            params: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            onComplete: function(response, success, xhrOrXdr) {},\n            log: function(str, level) {}\n        };\n\n    qq.extend(options, spec);\n\n    function onComplete(id, xhrOrXdr, isError) {\n        var response = null;\n\n        /* jshint eqnull:true */\n        if (xhrOrXdr.responseText != null) {\n            try {\n                response = qq.parseJson(xhrOrXdr.responseText);\n            }\n            catch (err) {\n                options.log(\"Problem parsing session response: \" + err.message, \"error\");\n                isError = true;\n            }\n        }\n\n        options.onComplete(response, !isError, xhrOrXdr);\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"GET\"],\n        method: \"GET\",\n        endpointStore: {\n            get: function() {\n                return options.endpoint;\n            }\n        },\n        customHeaders: options.customHeaders,\n        log: options.log,\n        onComplete: onComplete,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        queryServer: function() {\n            var params = qq.extend({}, options.params);\n\n            options.log(\"Session query request.\");\n\n            requester.initTransport(\"sessionRefresh\")\n                .withParams(params)\n                .withCacheBuster()\n                .send();\n        }\n    });\n};\n","/* globals qq, ExifRestorer */\n/**\n * Controls generation of scaled images based on a reference image encapsulated in a `File` or `Blob`.\n * Scaled images are generated and converted to blobs on-demand.\n * Multiple scaled images per reference image with varying sizes and other properties are supported.\n *\n * @param spec Information about the scaled images to generate.\n * @param log Logger instance\n * @constructor\n */\nqq.Scaler = function(spec, log) {\n    \"use strict\";\n\n    var self = this,\n        customResizeFunction = spec.customResizer,\n        includeOriginal = spec.sendOriginal,\n        orient = spec.orient,\n        defaultType = spec.defaultType,\n        defaultQuality = spec.defaultQuality / 100,\n        failedToScaleText = spec.failureText,\n        includeExif = spec.includeExif,\n        sizes = this._getSortedSizes(spec.sizes);\n\n    // Revealed API for instances of this module\n    qq.extend(this, {\n        // If no targeted sizes have been declared or if this browser doesn't support\n        // client-side image preview generation, there is no scaling to do.\n        enabled: qq.supportedFeatures.scaling && sizes.length > 0,\n\n        getFileRecords: function(originalFileUuid, originalFileName, originalBlobOrBlobData) {\n            var self = this,\n                records = [],\n                originalBlob = originalBlobOrBlobData.blob ? originalBlobOrBlobData.blob : originalBlobOrBlobData,\n                identifier = new qq.Identify(originalBlob, log);\n\n            // If the reference file cannot be rendered natively, we can't create scaled versions.\n            if (identifier.isPreviewableSync()) {\n                // Create records for each scaled version & add them to the records array, smallest first.\n                qq.each(sizes, function(idx, sizeRecord) {\n                    var outputType = self._determineOutputType({\n                        defaultType: defaultType,\n                        requestedType: sizeRecord.type,\n                        refType: originalBlob.type\n                    });\n\n                    records.push({\n                        uuid: qq.getUniqueId(),\n                        name: self._getName(originalFileName, {\n                            name: sizeRecord.name,\n                            type: outputType,\n                            refType: originalBlob.type\n                        }),\n                        blob: new qq.BlobProxy(originalBlob,\n                        qq.bind(self._generateScaledImage, self, {\n                            customResizeFunction: customResizeFunction,\n                            maxSize: sizeRecord.maxSize,\n                            orient: orient,\n                            type: outputType,\n                            quality: defaultQuality,\n                            failedText: failedToScaleText,\n                            includeExif: includeExif,\n                            log: log\n                        }))\n                    });\n                });\n\n                records.push({\n                    uuid: originalFileUuid,\n                    name: originalFileName,\n                    size: originalBlob.size,\n                    blob: includeOriginal ? originalBlob : null\n                });\n            }\n            else {\n                records.push({\n                    uuid: originalFileUuid,\n                    name: originalFileName,\n                    size: originalBlob.size,\n                    blob: originalBlob\n                });\n            }\n\n            return records;\n        },\n\n        handleNewFile: function(file, name, uuid, size, fileList, batchId, uuidParamName, api) {\n            var self = this,\n                buttonId = file.qqButtonId || (file.blob && file.blob.qqButtonId),\n                scaledIds = [],\n                originalId = null,\n                addFileToHandler = api.addFileToHandler,\n                uploadData = api.uploadData,\n                paramsStore = api.paramsStore,\n                proxyGroupId = qq.getUniqueId();\n\n            qq.each(self.getFileRecords(uuid, name, file), function(idx, record) {\n                var blobSize = record.size,\n                    id;\n\n                if (record.blob instanceof qq.BlobProxy) {\n                    blobSize = -1;\n                }\n\n                id = uploadData.addFile({\n                    uuid: record.uuid,\n                    name: record.name,\n                    size: blobSize,\n                    batchId: batchId,\n                    proxyGroupId: proxyGroupId\n                });\n\n                if (record.blob instanceof qq.BlobProxy) {\n                    scaledIds.push(id);\n                }\n                else {\n                    originalId = id;\n                }\n\n                if (record.blob) {\n                    addFileToHandler(id, record.blob);\n                    fileList.push({id: id, file: record.blob});\n                }\n                else {\n                    uploadData.setStatus(id, qq.status.REJECTED);\n                }\n            });\n\n            // If we are potentially uploading an original file and some scaled versions,\n            // ensure the scaled versions include reference's to the parent's UUID and size\n            // in their associated upload requests.\n            if (originalId !== null) {\n                qq.each(scaledIds, function(idx, scaledId) {\n                    var params = {\n                        qqparentuuid: uploadData.retrieve({id: originalId}).uuid,\n                        qqparentsize: uploadData.retrieve({id: originalId}).size\n                    };\n\n                    // Make sure the UUID for each scaled image is sent with the upload request,\n                    // to be consistent (since we may need to ensure it is sent for the original file as well).\n                    params[uuidParamName] = uploadData.retrieve({id: scaledId}).uuid;\n\n                    uploadData.setParentId(scaledId, originalId);\n                    paramsStore.addReadOnly(scaledId, params);\n                });\n\n                // If any scaled images are tied to this parent image, be SURE we send its UUID as an upload request\n                // parameter as well.\n                if (scaledIds.length) {\n                    (function() {\n                        var param = {};\n                        param[uuidParamName] = uploadData.retrieve({id: originalId}).uuid;\n                        paramsStore.addReadOnly(originalId, param);\n                    }());\n                }\n            }\n        }\n    });\n};\n\nqq.extend(qq.Scaler.prototype, {\n    scaleImage: function(id, specs, api) {\n        \"use strict\";\n\n        if (!qq.supportedFeatures.scaling) {\n            throw new qq.Error(\"Scaling is not supported in this browser!\");\n        }\n\n        var scalingEffort = new qq.Promise(),\n            log = api.log,\n            file = api.getFile(id),\n            uploadData = api.uploadData.retrieve({id: id}),\n            name = uploadData && uploadData.name,\n            uuid = uploadData && uploadData.uuid,\n            scalingOptions = {\n                customResizer: specs.customResizer,\n                sendOriginal: false,\n                orient: specs.orient,\n                defaultType: specs.type || null,\n                defaultQuality: specs.quality,\n                failedToScaleText: \"Unable to scale\",\n                sizes: [{name: \"\", maxSize: specs.maxSize}]\n            },\n            scaler = new qq.Scaler(scalingOptions, log);\n\n        if (!qq.Scaler || !qq.supportedFeatures.imagePreviews || !file) {\n            scalingEffort.failure();\n\n            log(\"Could not generate requested scaled image for \" + id + \".  \" +\n                \"Scaling is either not possible in this browser, or the file could not be located.\", \"error\");\n        }\n        else {\n            (qq.bind(function() {\n                // Assumption: There will never be more than one record\n                var record = scaler.getFileRecords(uuid, name, file)[0];\n\n                if (record && record.blob instanceof qq.BlobProxy) {\n                    record.blob.create().then(scalingEffort.success, scalingEffort.failure);\n                }\n                else {\n                    log(id + \" is not a scalable image!\", \"error\");\n                    scalingEffort.failure();\n                }\n            }, this)());\n        }\n\n        return scalingEffort;\n    },\n\n    // NOTE: We cannot reliably determine at this time if the UA supports a specific MIME type for the target format.\n    // image/jpeg and image/png are the only safe choices at this time.\n    _determineOutputType: function(spec) {\n        \"use strict\";\n\n        var requestedType = spec.requestedType,\n            defaultType = spec.defaultType,\n            referenceType = spec.refType;\n\n        // If a default type and requested type have not been specified, this should be a\n        // JPEG if the original type is a JPEG, otherwise, a PNG.\n        if (!defaultType && !requestedType) {\n            if (referenceType !== \"image/jpeg\") {\n                return \"image/png\";\n            }\n            return referenceType;\n        }\n\n        // A specified default type is used when a requested type is not specified.\n        if (!requestedType) {\n            return defaultType;\n        }\n\n        // If requested type is specified, use it, as long as this recognized type is supported by the current UA\n        if (qq.indexOf(Object.keys(qq.Identify.prototype.PREVIEWABLE_MIME_TYPES), requestedType) >= 0) {\n            if (requestedType === \"image/tiff\") {\n                return qq.supportedFeatures.tiffPreviews ? requestedType : defaultType;\n            }\n\n            return requestedType;\n        }\n\n        return defaultType;\n    },\n\n    // Get a file name for a generated scaled file record, based on the provided scaled image description\n    _getName: function(originalName, scaledVersionProperties) {\n        \"use strict\";\n\n        var startOfExt = originalName.lastIndexOf(\".\"),\n            versionType = scaledVersionProperties.type || \"image/png\",\n            referenceType = scaledVersionProperties.refType,\n            scaledName = \"\",\n            scaledExt = qq.getExtension(originalName),\n            nameAppendage = \"\";\n\n        if (scaledVersionProperties.name && scaledVersionProperties.name.trim().length) {\n            nameAppendage = \" (\" + scaledVersionProperties.name + \")\";\n        }\n\n        if (startOfExt >= 0) {\n            scaledName = originalName.substr(0, startOfExt);\n\n            if (referenceType !== versionType) {\n                scaledExt = versionType.split(\"/\")[1];\n            }\n\n            scaledName += nameAppendage + \".\" + scaledExt;\n        }\n        else {\n            scaledName = originalName + nameAppendage;\n        }\n\n        return scaledName;\n    },\n\n    // We want the smallest scaled file to be uploaded first\n    _getSortedSizes: function(sizes) {\n        \"use strict\";\n\n        sizes = qq.extend([], sizes);\n\n        return sizes.sort(function(a, b) {\n            if (a.maxSize > b.maxSize) {\n                return 1;\n            }\n            if (a.maxSize < b.maxSize) {\n                return -1;\n            }\n            return 0;\n        });\n    },\n\n    _generateScaledImage: function(spec, sourceFile) {\n        \"use strict\";\n\n        var self = this,\n            customResizeFunction = spec.customResizeFunction,\n            log = spec.log,\n            maxSize = spec.maxSize,\n            orient = spec.orient,\n            type = spec.type,\n            quality = spec.quality,\n            failedText = spec.failedText,\n            includeExif = spec.includeExif && sourceFile.type === \"image/jpeg\" && type === \"image/jpeg\",\n            scalingEffort = new qq.Promise(),\n            imageGenerator = new qq.ImageGenerator(log),\n            canvas = document.createElement(\"canvas\");\n\n        log(\"Attempting to generate scaled version for \" + sourceFile.name);\n\n        imageGenerator.generate(sourceFile, canvas, {maxSize: maxSize, orient: orient, customResizeFunction: customResizeFunction}).then(function() {\n            var scaledImageDataUri = canvas.toDataURL(type, quality),\n                signalSuccess = function() {\n                    log(\"Success generating scaled version for \" + sourceFile.name);\n                    var blob = qq.dataUriToBlob(scaledImageDataUri);\n                    scalingEffort.success(blob);\n                };\n\n            if (includeExif) {\n                self._insertExifHeader(sourceFile, scaledImageDataUri, log).then(function(scaledImageDataUriWithExif) {\n                    scaledImageDataUri = scaledImageDataUriWithExif;\n                    signalSuccess();\n                },\n                function() {\n                    log(\"Problem inserting EXIF header into scaled image.  Using scaled image w/out EXIF data.\", \"error\");\n                    signalSuccess();\n                });\n            }\n            else {\n                signalSuccess();\n            }\n        }, function() {\n            log(\"Failed attempt to generate scaled version for \" + sourceFile.name, \"error\");\n            scalingEffort.failure(failedText);\n        });\n\n        return scalingEffort;\n    },\n\n    // Attempt to insert the original image's EXIF header into a scaled version.\n    _insertExifHeader: function(originalImage, scaledImageDataUri, log) {\n        \"use strict\";\n\n        var reader = new FileReader(),\n            insertionEffort = new qq.Promise(),\n            originalImageDataUri = \"\";\n\n        reader.onload = function() {\n            originalImageDataUri = reader.result;\n            insertionEffort.success(qq.ExifRestorer.restore(originalImageDataUri, scaledImageDataUri));\n        };\n\n        reader.onerror = function() {\n            log(\"Problem reading \" + originalImage.name + \" during attempt to transfer EXIF data to scaled version.\", \"error\");\n            insertionEffort.failure();\n        };\n\n        reader.readAsDataURL(originalImage);\n\n        return insertionEffort;\n    },\n\n    _dataUriToBlob: function(dataUri) {\n        \"use strict\";\n\n        var byteString, mimeString, arrayBuffer, intArray;\n\n        // convert base64 to raw binary data held in a string\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n            byteString = atob(dataUri.split(\",\")[1]);\n        }\n        else {\n            byteString = decodeURI(dataUri.split(\",\")[1]);\n        }\n\n        // extract the MIME\n        mimeString = dataUri.split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n\n        // write the bytes of the binary string to an ArrayBuffer\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        qq.each(byteString, function(idx, character) {\n            intArray[idx] = character.charCodeAt(0);\n        });\n\n        return this._createBlob(arrayBuffer, mimeString);\n    },\n\n    _createBlob: function(data, mime) {\n        \"use strict\";\n\n        var BlobBuilder = window.BlobBuilder ||\n                window.WebKitBlobBuilder ||\n                window.MozBlobBuilder ||\n                window.MSBlobBuilder,\n            blobBuilder = BlobBuilder && new BlobBuilder();\n\n        if (blobBuilder) {\n            blobBuilder.append(data);\n            return blobBuilder.getBlob(mime);\n        }\n        else {\n            return new Blob([data], {type: mime});\n        }\n    }\n});\n","//Based on MinifyJpeg\n//http://elicon.blog57.fc2.com/blog-entry-206.html\n\nqq.ExifRestorer = (function()\n{\n   \n\tvar ExifRestorer = {};\n\t \n    ExifRestorer.KEY_STR = \"ABCDEFGHIJKLMNOP\" +\n                         \"QRSTUVWXYZabcdef\" +\n                         \"ghijklmnopqrstuv\" +\n                         \"wxyz0123456789+/\" +\n                         \"=\";\n\n    ExifRestorer.encode64 = function(input)\n    {\n        var output = \"\",\n            chr1, chr2, chr3 = \"\",\n            enc1, enc2, enc3, enc4 = \"\",\n            i = 0;\n\n        do {\n            chr1 = input[i++];\n            chr2 = input[i++];\n            chr3 = input[i++];\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2)) {\n               enc3 = enc4 = 64;\n            } else if (isNaN(chr3)) {\n               enc4 = 64;\n            }\n\n            output = output +\n               this.KEY_STR.charAt(enc1) +\n               this.KEY_STR.charAt(enc2) +\n               this.KEY_STR.charAt(enc3) +\n               this.KEY_STR.charAt(enc4);\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n        } while (i < input.length);\n\n        return output;\n    };\n    \n    ExifRestorer.restore = function(origFileBase64, resizedFileBase64)\n    {\n        var expectedBase64Header = \"data:image/jpeg;base64,\";\n\n        if (!origFileBase64.match(expectedBase64Header))\n        {\n        \treturn resizedFileBase64;\n        }       \n        \n        var rawImage = this.decode64(origFileBase64.replace(expectedBase64Header, \"\"));\n        var segments = this.slice2Segments(rawImage);\n                \n        var image = this.exifManipulation(resizedFileBase64, segments);\n        \n        return expectedBase64Header + this.encode64(image);\n        \n    };\n\n\n    ExifRestorer.exifManipulation = function(resizedFileBase64, segments)\n    {\n            var exifArray = this.getExifArray(segments),\n                newImageArray = this.insertExif(resizedFileBase64, exifArray),\n                aBuffer = new Uint8Array(newImageArray);\n\n            return aBuffer;\n    };\n\n\n    ExifRestorer.getExifArray = function(segments)\n    {\n            var seg;\n            for (var x = 0; x < segments.length; x++)\n            {\n                seg = segments[x];\n                if (seg[0] == 255 & seg[1] == 225) //(ff e1)\n                {\n                    return seg;\n                }\n            }\n            return [];\n    };\n\n\n    ExifRestorer.insertExif = function(resizedFileBase64, exifArray)\n    {\n            var imageData = resizedFileBase64.replace(\"data:image/jpeg;base64,\", \"\"),\n                buf = this.decode64(imageData),\n                separatePoint = buf.indexOf(255,3),\n                mae = buf.slice(0, separatePoint),\n                ato = buf.slice(separatePoint),\n                array = mae;\n\n            array = array.concat(exifArray);\n            array = array.concat(ato);\n           return array;\n    };\n\n\n    \n    ExifRestorer.slice2Segments = function(rawImageArray)\n    {\n        var head = 0,\n            segments = [];\n\n        while (1)\n        {\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 218){break;}\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 216)\n            {\n                head += 2;\n            }\n            else\n            {\n                var length = rawImageArray[head + 2] * 256 + rawImageArray[head + 3],\n                    endPoint = head + length + 2,\n                    seg = rawImageArray.slice(head, endPoint);\n                segments.push(seg);\n                head = endPoint;\n            }\n            if (head > rawImageArray.length){break;}\n        }\n\n        return segments;\n    };\n\n\n    \n    ExifRestorer.decode64 = function(input) \n    {\n        var output = \"\",\n            chr1, chr2, chr3 = \"\",\n            enc1, enc2, enc3, enc4 = \"\",\n            i = 0,\n            buf = [];\n\n        // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n        var base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\n        if (base64test.exec(input)) {\n            throw new Error(\"There were invalid base64 characters in the input text.  \" +\n                \"Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\");\n        }\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        do {\n            enc1 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc2 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc3 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc4 = this.KEY_STR.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            buf.push(chr1);\n\n            if (enc3 != 64) {\n               buf.push(chr2);\n            }\n            if (enc4 != 64) {\n               buf.push(chr3);\n            }\n\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n\n        } while (i < input.length);\n\n        return buf;\n    };\n\n    \n    return ExifRestorer;\n})();\n","/* globals qq */\n/**\n * Keeps a running tally of total upload progress for a batch of files.\n *\n * @param callback Invoked when total progress changes, passing calculated total loaded & total size values.\n * @param getSize Function that returns the size of a file given its ID\n * @constructor\n */\nqq.TotalProgress = function(callback, getSize) {\n    \"use strict\";\n\n    var perFileProgress = {},\n        totalLoaded = 0,\n        totalSize = 0,\n\n        lastLoadedSent = -1,\n        lastTotalSent = -1,\n        callbackProxy = function(loaded, total) {\n            if (loaded !== lastLoadedSent || total !== lastTotalSent) {\n                callback(loaded, total);\n            }\n\n            lastLoadedSent = loaded;\n            lastTotalSent = total;\n        },\n\n        /**\n         * @param failed Array of file IDs that have failed\n         * @param retryable Array of file IDs that are retryable\n         * @returns true if none of the failed files are eligible for retry\n         */\n        noRetryableFiles = function(failed, retryable) {\n            var none = true;\n\n            qq.each(failed, function(idx, failedId) {\n                if (qq.indexOf(retryable, failedId) >= 0) {\n                    none = false;\n                    return false;\n                }\n            });\n\n            return none;\n        },\n\n        onCancel = function(id) {\n            updateTotalProgress(id, -1, -1);\n            delete perFileProgress[id];\n        },\n\n        onAllComplete = function(successful, failed, retryable) {\n            if (failed.length === 0 || noRetryableFiles(failed, retryable)) {\n                callbackProxy(totalSize, totalSize);\n                this.reset();\n            }\n        },\n\n        onNew = function(id) {\n            var size = getSize(id);\n\n            // We might not know the size yet, such as for blob proxies\n            if (size > 0) {\n                updateTotalProgress(id, 0, size);\n                perFileProgress[id] = {loaded: 0, total: size};\n            }\n        },\n\n        /**\n         * Invokes the callback with the current total progress of all files in the batch.  Called whenever it may\n         * be appropriate to re-calculate and disseminate this data.\n         *\n         * @param id ID of a file that has changed in some important way\n         * @param newLoaded New loaded value for this file.  -1 if this value should no longer be part of calculations\n         * @param newTotal New total size of the file.  -1 if this value should no longer be part of calculations\n         */\n        updateTotalProgress = function(id, newLoaded, newTotal) {\n            var oldLoaded = perFileProgress[id] ? perFileProgress[id].loaded : 0,\n                oldTotal = perFileProgress[id] ? perFileProgress[id].total : 0;\n\n            if (newLoaded === -1 && newTotal === -1) {\n                totalLoaded -= oldLoaded;\n                totalSize -= oldTotal;\n            }\n            else {\n                if (newLoaded) {\n                    totalLoaded += newLoaded - oldLoaded;\n                }\n                if (newTotal) {\n                    totalSize += newTotal - oldTotal;\n                }\n            }\n\n            callbackProxy(totalLoaded, totalSize);\n        };\n\n    qq.extend(this, {\n        // Called when a batch of files has completed uploading.\n        onAllComplete: onAllComplete,\n\n        // Called when the status of a file has changed.\n        onStatusChange: function(id, oldStatus, newStatus) {\n            if (newStatus === qq.status.CANCELED || newStatus === qq.status.REJECTED) {\n                onCancel(id);\n            }\n            else if (newStatus === qq.status.SUBMITTING) {\n                onNew(id);\n            }\n        },\n\n        // Called whenever the upload progress of an individual file has changed.\n        onIndividualProgress: function(id, loaded, total) {\n            updateTotalProgress(id, loaded, total);\n            perFileProgress[id] = {loaded: loaded, total: total};\n        },\n\n        // Called whenever the total size of a file has changed, such as when the size of a generated blob is known.\n        onNewSize: function(id) {\n            onNew(id);\n        },\n\n        reset: function() {\n            perFileProgress = {};\n            totalLoaded = 0;\n            totalSize = 0;\n        }\n    });\n};\n","/*globals qq*/\nqq.PasteSupport = function(o) {\n    \"use strict\";\n\n    var options, detachPasteHandler;\n\n    options = {\n        targetElement: null,\n        callbacks: {\n            log: function(message, level) {},\n            pasteReceived: function(blob) {}\n        }\n    };\n\n    function isImage(item) {\n        return item.type &&\n            item.type.indexOf(\"image/\") === 0;\n    }\n\n    function registerPasteHandler() {\n        detachPasteHandler = qq(options.targetElement).attach(\"paste\", function(event) {\n            var clipboardData = event.clipboardData;\n\n            if (clipboardData) {\n                qq.each(clipboardData.items, function(idx, item) {\n                    if (isImage(item)) {\n                        var blob = item.getAsFile();\n                        options.callbacks.pasteReceived(blob);\n                    }\n                });\n            }\n        });\n    }\n\n    function unregisterPasteHandler() {\n        if (detachPasteHandler) {\n            detachPasteHandler();\n        }\n    }\n\n    qq.extend(options, o);\n    registerPasteHandler();\n\n    qq.extend(this, {\n        reset: function() {\n            unregisterPasteHandler();\n        }\n    });\n};\n","/* globals qq */\n/**\n * Module that handles support for existing forms.\n *\n * @param options Options passed from the integrator-supplied options related to form support.\n * @param startUpload Callback to invoke when files \"stored\" should be uploaded.\n * @param log Proxy for the logger\n * @constructor\n */\nqq.FormSupport = function(options, startUpload, log) {\n    \"use strict\";\n    var self  = this,\n        interceptSubmit = options.interceptSubmit,\n        formEl = options.element,\n        autoUpload = options.autoUpload;\n\n    // Available on the public API associated with this module.\n    qq.extend(this, {\n        // To be used by the caller to determine if the endpoint will be determined by some processing\n        // that occurs in this module, such as if the form has an action attribute.\n        // Ignore if `attachToForm === false`.\n        newEndpoint: null,\n\n        // To be used by the caller to determine if auto uploading should be allowed.\n        // Ignore if `attachToForm === false`.\n        newAutoUpload: autoUpload,\n\n        // true if a form was detected and is being tracked by this module\n        attachedToForm: false,\n\n        // Returns an object with names and values for all valid form elements associated with the attached form.\n        getFormInputsAsObject: function() {\n            /* jshint eqnull:true */\n            if (formEl == null) {\n                return null;\n            }\n\n            return self._form2Obj(formEl);\n        }\n    });\n\n    // If the form contains an action attribute, this should be the new upload endpoint.\n    function determineNewEndpoint(formEl) {\n        if (formEl.getAttribute(\"action\")) {\n            self.newEndpoint = formEl.getAttribute(\"action\");\n        }\n    }\n\n    // Return true only if the form is valid, or if we cannot make this determination.\n    // If the form is invalid, ensure invalid field(s) are highlighted in the UI.\n    function validateForm(formEl, nativeSubmit) {\n        if (formEl.checkValidity && !formEl.checkValidity()) {\n            log(\"Form did not pass validation checks - will not upload.\", \"error\");\n            nativeSubmit();\n        }\n        else {\n            return true;\n        }\n    }\n\n    // Intercept form submit attempts, unless the integrator has told us not to do this.\n    function maybeUploadOnSubmit(formEl) {\n        var nativeSubmit = formEl.submit;\n\n        // Intercept and squelch submit events.\n        qq(formEl).attach(\"submit\", function(event) {\n            event = event || window.event;\n\n            if (event.preventDefault) {\n                event.preventDefault();\n            }\n            else {\n                event.returnValue = false;\n            }\n\n            validateForm(formEl, nativeSubmit) && startUpload();\n        });\n\n        // The form's `submit()` function may be called instead (i.e. via jQuery.submit()).\n        // Intercept that too.\n        formEl.submit = function() {\n            validateForm(formEl, nativeSubmit) && startUpload();\n        };\n    }\n\n    // If the element value passed from the uploader is a string, assume it is an element ID - select it.\n    // The rest of the code in this module depends on this being an HTMLElement.\n    function determineFormEl(formEl) {\n        if (formEl) {\n            if (qq.isString(formEl)) {\n                formEl = document.getElementById(formEl);\n            }\n\n            if (formEl) {\n                log(\"Attaching to form element.\");\n                determineNewEndpoint(formEl);\n                interceptSubmit && maybeUploadOnSubmit(formEl);\n            }\n        }\n\n        return formEl;\n    }\n\n    formEl = determineFormEl(formEl);\n    this.attachedToForm = !!formEl;\n};\n\nqq.extend(qq.FormSupport.prototype, {\n    // Converts all relevant form fields to key/value pairs.  This is meant to mimic the data a browser will\n    // construct from a given form when the form is submitted.\n    _form2Obj: function(form) {\n        \"use strict\";\n        var obj = {},\n            notIrrelevantType = function(type) {\n                var irrelevantTypes = [\n                    \"button\",\n                    \"image\",\n                    \"reset\",\n                    \"submit\"\n                ];\n\n                return qq.indexOf(irrelevantTypes, type.toLowerCase()) < 0;\n            },\n            radioOrCheckbox = function(type) {\n                return qq.indexOf([\"checkbox\", \"radio\"], type.toLowerCase()) >= 0;\n            },\n            ignoreValue = function(el) {\n                if (radioOrCheckbox(el.type) && !el.checked) {\n                    return true;\n                }\n\n                return el.disabled && el.type.toLowerCase() !== \"hidden\";\n            },\n            selectValue = function(select) {\n                var value = null;\n\n                qq.each(qq(select).children(), function(idx, child) {\n                    if (child.tagName.toLowerCase() === \"option\" && child.selected) {\n                        value = child.value;\n                        return false;\n                    }\n                });\n\n                return value;\n            };\n\n        qq.each(form.elements, function(idx, el) {\n            if ((qq.isInput(el, true) || el.tagName.toLowerCase() === \"textarea\") &&\n                notIrrelevantType(el.type) &&\n                !ignoreValue(el)) {\n\n                obj[el.name] = el.value;\n            }\n            else if (el.tagName.toLowerCase() === \"select\" && !ignoreValue(el)) {\n                var value = selectValue(el);\n\n                if (value !== null) {\n                    obj[el.name] = value;\n                }\n            }\n        });\n\n        return obj;\n    }\n});\n","/*\nCryptoJS v3.1.2\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\n/**\n * CryptoJS core components.\n */\nqq.CryptoJS = (function (Math, undefined) {\n    /**\n     * CryptoJS namespace.\n     */\n    var C = {};\n\n    /**\n     * Library namespace.\n     */\n    var C_lib = C.lib = {};\n\n    /**\n     * Base object for prototypal inheritance.\n     */\n    var Base = C_lib.Base = (function () {\n        function F() {}\n\n        return {\n            /**\n             * Creates a new object that inherits from this object.\n             *\n             * @param {Object} overrides Properties to copy into the new object.\n             *\n             * @return {Object} The new object.\n             *\n             * @static\n             *\n             * @example\n             *\n             *     var MyType = CryptoJS.lib.Base.extend({\n             *         field: 'value',\n             *\n             *         method: function () {\n             *         }\n             *     });\n             */\n            extend: function (overrides) {\n                // Spawn\n                F.prototype = this;\n                var subtype = new F();\n\n                // Augment\n                if (overrides) {\n                    subtype.mixIn(overrides);\n                }\n\n                // Create default initializer\n                if (!subtype.hasOwnProperty('init')) {\n                    subtype.init = function () {\n                        subtype.$super.init.apply(this, arguments);\n                    };\n                }\n\n                // Initializer's prototype is the subtype object\n                subtype.init.prototype = subtype;\n\n                // Reference supertype\n                subtype.$super = this;\n\n                return subtype;\n            },\n\n            /**\n             * Extends this object and runs the init method.\n             * Arguments to create() will be passed to init().\n             *\n             * @return {Object} The new object.\n             *\n             * @static\n             *\n             * @example\n             *\n             *     var instance = MyType.create();\n             */\n            create: function () {\n                var instance = this.extend();\n                instance.init.apply(instance, arguments);\n\n                return instance;\n            },\n\n            /**\n             * Initializes a newly created object.\n             * Override this method to add some logic when your objects are created.\n             *\n             * @example\n             *\n             *     var MyType = CryptoJS.lib.Base.extend({\n             *         init: function () {\n             *             // ...\n             *         }\n             *     });\n             */\n            init: function () {\n            },\n\n            /**\n             * Copies properties into this object.\n             *\n             * @param {Object} properties The properties to mix in.\n             *\n             * @example\n             *\n             *     MyType.mixIn({\n             *         field: 'value'\n             *     });\n             */\n            mixIn: function (properties) {\n                for (var propertyName in properties) {\n                    if (properties.hasOwnProperty(propertyName)) {\n                        this[propertyName] = properties[propertyName];\n                    }\n                }\n\n                // IE won't copy toString using the loop above\n                if (properties.hasOwnProperty('toString')) {\n                    this.toString = properties.toString;\n                }\n            },\n\n            /**\n             * Creates a copy of this object.\n             *\n             * @return {Object} The clone.\n             *\n             * @example\n             *\n             *     var clone = instance.clone();\n             */\n            clone: function () {\n                return this.init.prototype.extend(this);\n            }\n        };\n    }());\n\n    /**\n     * An array of 32-bit words.\n     *\n     * @property {Array} words The array of 32-bit words.\n     * @property {number} sigBytes The number of significant bytes in this word array.\n     */\n    var WordArray = C_lib.WordArray = Base.extend({\n        /**\n         * Initializes a newly created word array.\n         *\n         * @param {Array} words (Optional) An array of 32-bit words.\n         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n         *\n         * @example\n         *\n         *     var wordArray = CryptoJS.lib.WordArray.create();\n         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n         */\n        init: function (words, sigBytes) {\n            words = this.words = words || [];\n\n            if (sigBytes != undefined) {\n                this.sigBytes = sigBytes;\n            } else {\n                this.sigBytes = words.length * 4;\n            }\n        },\n\n        /**\n         * Converts this word array to a string.\n         *\n         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n         *\n         * @return {string} The stringified word array.\n         *\n         * @example\n         *\n         *     var string = wordArray + '';\n         *     var string = wordArray.toString();\n         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n         */\n        toString: function (encoder) {\n            return (encoder || Hex).stringify(this);\n        },\n\n        /**\n         * Concatenates a word array to this word array.\n         *\n         * @param {WordArray} wordArray The word array to append.\n         *\n         * @return {WordArray} This word array.\n         *\n         * @example\n         *\n         *     wordArray1.concat(wordArray2);\n         */\n        concat: function (wordArray) {\n            // Shortcuts\n            var thisWords = this.words;\n            var thatWords = wordArray.words;\n            var thisSigBytes = this.sigBytes;\n            var thatSigBytes = wordArray.sigBytes;\n\n            // Clamp excess bits\n            this.clamp();\n\n            // Concat\n            if (thisSigBytes % 4) {\n                // Copy one byte at a time\n                for (var i = 0; i < thatSigBytes; i++) {\n                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n                }\n            } else if (thatWords.length > 0xffff) {\n                // Copy one word at a time\n                for (var i = 0; i < thatSigBytes; i += 4) {\n                    thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\n                }\n            } else {\n                // Copy all words at once\n                thisWords.push.apply(thisWords, thatWords);\n            }\n            this.sigBytes += thatSigBytes;\n\n            // Chainable\n            return this;\n        },\n\n        /**\n         * Removes insignificant bits.\n         *\n         * @example\n         *\n         *     wordArray.clamp();\n         */\n        clamp: function () {\n            // Shortcuts\n            var words = this.words;\n            var sigBytes = this.sigBytes;\n\n            // Clamp\n            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n            words.length = Math.ceil(sigBytes / 4);\n        },\n\n        /**\n         * Creates a copy of this word array.\n         *\n         * @return {WordArray} The clone.\n         *\n         * @example\n         *\n         *     var clone = wordArray.clone();\n         */\n        clone: function () {\n            var clone = Base.clone.call(this);\n            clone.words = this.words.slice(0);\n\n            return clone;\n        },\n\n        /**\n         * Creates a word array filled with random bytes.\n         *\n         * @param {number} nBytes The number of random bytes to generate.\n         *\n         * @return {WordArray} The random word array.\n         *\n         * @static\n         *\n         * @example\n         *\n         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n         */\n        random: function (nBytes) {\n            var words = [];\n            for (var i = 0; i < nBytes; i += 4) {\n                words.push((Math.random() * 0x100000000) | 0);\n            }\n\n            return new WordArray.init(words, nBytes);\n        }\n    });\n\n    /**\n     * Encoder namespace.\n     */\n    var C_enc = C.enc = {};\n\n    /**\n     * Hex encoding strategy.\n     */\n    var Hex = C_enc.Hex = {\n        /**\n         * Converts a word array to a hex string.\n         *\n         * @param {WordArray} wordArray The word array.\n         *\n         * @return {string} The hex string.\n         *\n         * @static\n         *\n         * @example\n         *\n         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n         */\n        stringify: function (wordArray) {\n            // Shortcuts\n            var words = wordArray.words;\n            var sigBytes = wordArray.sigBytes;\n\n            // Convert\n            var hexChars = [];\n            for (var i = 0; i < sigBytes; i++) {\n                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n                hexChars.push((bite >>> 4).toString(16));\n                hexChars.push((bite & 0x0f).toString(16));\n            }\n\n            return hexChars.join('');\n        },\n\n        /**\n         * Converts a hex string to a word array.\n         *\n         * @param {string} hexStr The hex string.\n         *\n         * @return {WordArray} The word array.\n         *\n         * @static\n         *\n         * @example\n         *\n         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n         */\n        parse: function (hexStr) {\n            // Shortcut\n            var hexStrLength = hexStr.length;\n\n            // Convert\n            var words = [];\n            for (var i = 0; i < hexStrLength; i += 2) {\n                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n            }\n\n            return new WordArray.init(words, hexStrLength / 2);\n        }\n    };\n\n    /**\n     * Latin1 encoding strategy.\n     */\n    var Latin1 = C_enc.Latin1 = {\n        /**\n         * Converts a word array to a Latin1 string.\n         *\n         * @param {WordArray} wordArray The word array.\n         *\n         * @return {string} The Latin1 string.\n         *\n         * @static\n         *\n         * @example\n         *\n         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n         */\n        stringify: function (wordArray) {\n            // Shortcuts\n            var words = wordArray.words;\n            var sigBytes = wordArray.sigBytes;\n\n            // Convert\n            var latin1Chars = [];\n            for (var i = 0; i < sigBytes; i++) {\n                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n                latin1Chars.push(String.fromCharCode(bite));\n            }\n\n            return latin1Chars.join('');\n        },\n\n        /**\n         * Converts a Latin1 string to a word array.\n         *\n         * @param {string} latin1Str The Latin1 string.\n         *\n         * @return {WordArray} The word array.\n         *\n         * @static\n         *\n         * @example\n         *\n         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n         */\n        parse: function (latin1Str) {\n            // Shortcut\n            var latin1StrLength = latin1Str.length;\n\n            // Convert\n            var words = [];\n            for (var i = 0; i < latin1StrLength; i++) {\n                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n            }\n\n            return new WordArray.init(words, latin1StrLength);\n        }\n    };\n\n    /**\n     * UTF-8 encoding strategy.\n     */\n    var Utf8 = C_enc.Utf8 = {\n        /**\n         * Converts a word array to a UTF-8 string.\n         *\n         * @param {WordArray} wordArray The word array.\n         *\n         * @return {string} The UTF-8 string.\n         *\n         * @static\n         *\n         * @example\n         *\n         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n         */\n        stringify: function (wordArray) {\n            try {\n                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n            } catch (e) {\n                throw new Error('Malformed UTF-8 data');\n            }\n        },\n\n        /**\n         * Converts a UTF-8 string to a word array.\n         *\n         * @param {string} utf8Str The UTF-8 string.\n         *\n         * @return {WordArray} The word array.\n         *\n         * @static\n         *\n         * @example\n         *\n         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n         */\n        parse: function (utf8Str) {\n            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n        }\n    };\n\n    /**\n     * Abstract buffered block algorithm template.\n     *\n     * The property blockSize must be implemented in a concrete subtype.\n     *\n     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n     */\n    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n        /**\n         * Resets this block algorithm's data buffer to its initial state.\n         *\n         * @example\n         *\n         *     bufferedBlockAlgorithm.reset();\n         */\n        reset: function () {\n            // Initial values\n            this._data = new WordArray.init();\n            this._nDataBytes = 0;\n        },\n\n        /**\n         * Adds new data to this block algorithm's buffer.\n         *\n         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n         *\n         * @example\n         *\n         *     bufferedBlockAlgorithm._append('data');\n         *     bufferedBlockAlgorithm._append(wordArray);\n         */\n        _append: function (data) {\n            // Convert string to WordArray, else assume WordArray already\n            if (typeof data == 'string') {\n                data = Utf8.parse(data);\n            }\n\n            // Append\n            this._data.concat(data);\n            this._nDataBytes += data.sigBytes;\n        },\n\n        /**\n         * Processes available data blocks.\n         *\n         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n         *\n         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n         *\n         * @return {WordArray} The processed data.\n         *\n         * @example\n         *\n         *     var processedData = bufferedBlockAlgorithm._process();\n         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n         */\n        _process: function (doFlush) {\n            // Shortcuts\n            var data = this._data;\n            var dataWords = data.words;\n            var dataSigBytes = data.sigBytes;\n            var blockSize = this.blockSize;\n            var blockSizeBytes = blockSize * 4;\n\n            // Count blocks ready\n            var nBlocksReady = dataSigBytes / blockSizeBytes;\n            if (doFlush) {\n                // Round up to include partial blocks\n                nBlocksReady = Math.ceil(nBlocksReady);\n            } else {\n                // Round down to include only full blocks,\n                // less the number of blocks that must remain in the buffer\n                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n            }\n\n            // Count words ready\n            var nWordsReady = nBlocksReady * blockSize;\n\n            // Count bytes ready\n            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n            // Process blocks\n            if (nWordsReady) {\n                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n                    // Perform concrete-algorithm logic\n                    this._doProcessBlock(dataWords, offset);\n                }\n\n                // Remove processed words\n                var processedWords = dataWords.splice(0, nWordsReady);\n                data.sigBytes -= nBytesReady;\n            }\n\n            // Return processed words\n            return new WordArray.init(processedWords, nBytesReady);\n        },\n\n        /**\n         * Creates a copy of this object.\n         *\n         * @return {Object} The clone.\n         *\n         * @example\n         *\n         *     var clone = bufferedBlockAlgorithm.clone();\n         */\n        clone: function () {\n            var clone = Base.clone.call(this);\n            clone._data = this._data.clone();\n\n            return clone;\n        },\n\n        _minBufferSize: 0\n    });\n\n    /**\n     * Abstract hasher template.\n     *\n     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n     */\n    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n        /**\n         * Configuration options.\n         */\n        cfg: Base.extend(),\n\n        /**\n         * Initializes a newly created hasher.\n         *\n         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n         *\n         * @example\n         *\n         *     var hasher = CryptoJS.algo.SHA256.create();\n         */\n        init: function (cfg) {\n            // Apply config defaults\n            this.cfg = this.cfg.extend(cfg);\n\n            // Set initial values\n            this.reset();\n        },\n\n        /**\n         * Resets this hasher to its initial state.\n         *\n         * @example\n         *\n         *     hasher.reset();\n         */\n        reset: function () {\n            // Reset data buffer\n            BufferedBlockAlgorithm.reset.call(this);\n\n            // Perform concrete-hasher logic\n            this._doReset();\n        },\n\n        /**\n         * Updates this hasher with a message.\n         *\n         * @param {WordArray|string} messageUpdate The message to append.\n         *\n         * @return {Hasher} This hasher.\n         *\n         * @example\n         *\n         *     hasher.update('message');\n         *     hasher.update(wordArray);\n         */\n        update: function (messageUpdate) {\n            // Append\n            this._append(messageUpdate);\n\n            // Update the hash\n            this._process();\n\n            // Chainable\n            return this;\n        },\n\n        /**\n         * Finalizes the hash computation.\n         * Note that the finalize operation is effectively a destructive, read-once operation.\n         *\n         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n         *\n         * @return {WordArray} The hash.\n         *\n         * @example\n         *\n         *     var hash = hasher.finalize();\n         *     var hash = hasher.finalize('message');\n         *     var hash = hasher.finalize(wordArray);\n         */\n        finalize: function (messageUpdate) {\n            // Final message update\n            if (messageUpdate) {\n                this._append(messageUpdate);\n            }\n\n            // Perform concrete-hasher logic\n            var hash = this._doFinalize();\n\n            return hash;\n        },\n\n        blockSize: 512/32,\n\n        /**\n         * Creates a shortcut function to a hasher's object interface.\n         *\n         * @param {Hasher} hasher The hasher to create a helper for.\n         *\n         * @return {Function} The shortcut function.\n         *\n         * @static\n         *\n         * @example\n         *\n         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n         */\n        _createHelper: function (hasher) {\n            return function (message, cfg) {\n                return new hasher.init(cfg).finalize(message);\n            };\n        },\n\n        /**\n         * Creates a shortcut function to the HMAC's object interface.\n         *\n         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n         *\n         * @return {Function} The shortcut function.\n         *\n         * @static\n         *\n         * @example\n         *\n         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n         */\n        _createHmacHelper: function (hasher) {\n            return function (message, key) {\n                return new C_algo.HMAC.init(hasher, key).finalize(message);\n            };\n        }\n    });\n\n    /**\n     * Algorithm namespace.\n     */\n    var C_algo = C.algo = {};\n\n    return C;\n}(Math));\n","/*\nCryptoJS v3.1.2\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\n(function () {\n    // Shortcuts\n    var C = qq.CryptoJS;\n    var C_lib = C.lib;\n    var WordArray = C_lib.WordArray;\n    var C_enc = C.enc;\n\n    /**\n     * Base64 encoding strategy.\n     */\n    var Base64 = C_enc.Base64 = {\n        /**\n         * Converts a word array to a Base64 string.\n         *\n         * @param {WordArray} wordArray The word array.\n         *\n         * @return {string} The Base64 string.\n         *\n         * @static\n         *\n         * @example\n         *\n         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\n         */\n        stringify: function (wordArray) {\n            // Shortcuts\n            var words = wordArray.words;\n            var sigBytes = wordArray.sigBytes;\n            var map = this._map;\n\n            // Clamp excess bits\n            wordArray.clamp();\n\n            // Convert\n            var base64Chars = [];\n            for (var i = 0; i < sigBytes; i += 3) {\n                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n                }\n            }\n\n            // Add padding\n            var paddingChar = map.charAt(64);\n            if (paddingChar) {\n                while (base64Chars.length % 4) {\n                    base64Chars.push(paddingChar);\n                }\n            }\n\n            return base64Chars.join('');\n        },\n\n        /**\n         * Converts a Base64 string to a word array.\n         *\n         * @param {string} base64Str The Base64 string.\n         *\n         * @return {WordArray} The word array.\n         *\n         * @static\n         *\n         * @example\n         *\n         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\n         */\n        parse: function (base64Str) {\n            // Shortcuts\n            var base64StrLength = base64Str.length;\n            var map = this._map;\n\n            // Ignore padding\n            var paddingChar = map.charAt(64);\n            if (paddingChar) {\n                var paddingIndex = base64Str.indexOf(paddingChar);\n                if (paddingIndex != -1) {\n                    base64StrLength = paddingIndex;\n                }\n            }\n\n            // Convert\n            var words = [];\n            var nBytes = 0;\n            for (var i = 0; i < base64StrLength; i++) {\n                if (i % 4) {\n                    var bits1 = map.indexOf(base64Str.charAt(i - 1)) << ((i % 4) * 2);\n                    var bits2 = map.indexOf(base64Str.charAt(i)) >>> (6 - (i % 4) * 2);\n                    words[nBytes >>> 2] |= (bits1 | bits2) << (24 - (nBytes % 4) * 8);\n                    nBytes++;\n                }\n            }\n\n            return WordArray.create(words, nBytes);\n        },\n\n        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n    };\n}());\n","/*\nCryptoJS v3.1.2\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\n(function () {\n    // Shortcuts\n    var C = qq.CryptoJS;\n    var C_lib = C.lib;\n    var Base = C_lib.Base;\n    var C_enc = C.enc;\n    var Utf8 = C_enc.Utf8;\n    var C_algo = C.algo;\n\n    /**\n     * HMAC algorithm.\n     */\n    var HMAC = C_algo.HMAC = Base.extend({\n        /**\n         * Initializes a newly created HMAC.\n         *\n         * @param {Hasher} hasher The hash algorithm to use.\n         * @param {WordArray|string} key The secret key.\n         *\n         * @example\n         *\n         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n         */\n        init: function (hasher, key) {\n            // Init hasher\n            hasher = this._hasher = new hasher.init();\n\n            // Convert string to WordArray, else assume WordArray already\n            if (typeof key == 'string') {\n                key = Utf8.parse(key);\n            }\n\n            // Shortcuts\n            var hasherBlockSize = hasher.blockSize;\n            var hasherBlockSizeBytes = hasherBlockSize * 4;\n\n            // Allow arbitrary length keys\n            if (key.sigBytes > hasherBlockSizeBytes) {\n                key = hasher.finalize(key);\n            }\n\n            // Clamp excess bits\n            key.clamp();\n\n            // Clone key for inner and outer pads\n            var oKey = this._oKey = key.clone();\n            var iKey = this._iKey = key.clone();\n\n            // Shortcuts\n            var oKeyWords = oKey.words;\n            var iKeyWords = iKey.words;\n\n            // XOR keys with pad constants\n            for (var i = 0; i < hasherBlockSize; i++) {\n                oKeyWords[i] ^= 0x5c5c5c5c;\n                iKeyWords[i] ^= 0x36363636;\n            }\n            oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\n\n            // Set initial values\n            this.reset();\n        },\n\n        /**\n         * Resets this HMAC to its initial state.\n         *\n         * @example\n         *\n         *     hmacHasher.reset();\n         */\n        reset: function () {\n            // Shortcut\n            var hasher = this._hasher;\n\n            // Reset\n            hasher.reset();\n            hasher.update(this._iKey);\n        },\n\n        /**\n         * Updates this HMAC with a message.\n         *\n         * @param {WordArray|string} messageUpdate The message to append.\n         *\n         * @return {HMAC} This HMAC instance.\n         *\n         * @example\n         *\n         *     hmacHasher.update('message');\n         *     hmacHasher.update(wordArray);\n         */\n        update: function (messageUpdate) {\n            this._hasher.update(messageUpdate);\n\n            // Chainable\n            return this;\n        },\n\n        /**\n         * Finalizes the HMAC computation.\n         * Note that the finalize operation is effectively a destructive, read-once operation.\n         *\n         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n         *\n         * @return {WordArray} The HMAC.\n         *\n         * @example\n         *\n         *     var hmac = hmacHasher.finalize();\n         *     var hmac = hmacHasher.finalize('message');\n         *     var hmac = hmacHasher.finalize(wordArray);\n         */\n        finalize: function (messageUpdate) {\n            // Shortcut\n            var hasher = this._hasher;\n\n            // Compute HMAC\n            var innerHash = hasher.finalize(messageUpdate);\n            hasher.reset();\n            var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n\n            return hmac;\n        }\n    });\n}());\n","/*\nCryptoJS v3.1.2\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\n(function () {\n    // Shortcuts\n    var C = qq.CryptoJS;\n    var C_lib = C.lib;\n    var WordArray = C_lib.WordArray;\n    var Hasher = C_lib.Hasher;\n    var C_algo = C.algo;\n\n    // Reusable object\n    var W = [];\n\n    /**\n     * SHA-1 hash algorithm.\n     */\n    var SHA1 = C_algo.SHA1 = Hasher.extend({\n        _doReset: function () {\n            this._hash = new WordArray.init([\n                0x67452301, 0xefcdab89,\n                0x98badcfe, 0x10325476,\n                0xc3d2e1f0\n            ]);\n        },\n\n        _doProcessBlock: function (M, offset) {\n            // Shortcut\n            var H = this._hash.words;\n\n            // Working variables\n            var a = H[0];\n            var b = H[1];\n            var c = H[2];\n            var d = H[3];\n            var e = H[4];\n\n            // Computation\n            for (var i = 0; i < 80; i++) {\n                if (i < 16) {\n                    W[i] = M[offset + i] | 0;\n                } else {\n                    var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n                    W[i] = (n << 1) | (n >>> 31);\n                }\n\n                var t = ((a << 5) | (a >>> 27)) + e + W[i];\n                if (i < 20) {\n                    t += ((b & c) | (~b & d)) + 0x5a827999;\n                } else if (i < 40) {\n                    t += (b ^ c ^ d) + 0x6ed9eba1;\n                } else if (i < 60) {\n                    t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;\n                } else /* if (i < 80) */ {\n                    t += (b ^ c ^ d) - 0x359d3e2a;\n                }\n\n                e = d;\n                d = c;\n                c = (b << 30) | (b >>> 2);\n                b = a;\n                a = t;\n            }\n\n            // Intermediate hash value\n            H[0] = (H[0] + a) | 0;\n            H[1] = (H[1] + b) | 0;\n            H[2] = (H[2] + c) | 0;\n            H[3] = (H[3] + d) | 0;\n            H[4] = (H[4] + e) | 0;\n        },\n\n        _doFinalize: function () {\n            // Shortcuts\n            var data = this._data;\n            var dataWords = data.words;\n\n            var nBitsTotal = this._nDataBytes * 8;\n            var nBitsLeft = data.sigBytes * 8;\n\n            // Add padding\n            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n            data.sigBytes = dataWords.length * 4;\n\n            // Hash final blocks\n            this._process();\n\n            // Return final computed hash\n            return this._hash;\n        },\n\n        clone: function () {\n            var clone = Hasher.clone.call(this);\n            clone._hash = this._hash.clone();\n\n            return clone;\n        }\n    });\n\n    /**\n     * Shortcut function to the hasher's object interface.\n     *\n     * @param {WordArray|string} message The message to hash.\n     *\n     * @return {WordArray} The hash.\n     *\n     * @static\n     *\n     * @example\n     *\n     *     var hash = CryptoJS.SHA1('message');\n     *     var hash = CryptoJS.SHA1(wordArray);\n     */\n    C.SHA1 = Hasher._createHelper(SHA1);\n\n    /**\n     * Shortcut function to the HMAC's object interface.\n     *\n     * @param {WordArray|string} message The message to hash.\n     * @param {WordArray|string} key The secret key.\n     *\n     * @return {WordArray} The HMAC.\n     *\n     * @static\n     *\n     * @example\n     *\n     *     var hmac = CryptoJS.HmacSHA1(message, key);\n     */\n    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);\n}());\n","/*\r\nCryptoJS v3.1.2\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n(function (Math) {\r\n    // Shortcuts\r\n    var C = qq.CryptoJS;\r\n    var C_lib = C.lib;\r\n    var WordArray = C_lib.WordArray;\r\n    var Hasher = C_lib.Hasher;\r\n    var C_algo = C.algo;\r\n\r\n    // Initialization and round constants tables\r\n    var H = [];\r\n    var K = [];\r\n\r\n    // Compute constants\r\n    (function () {\r\n        function isPrime(n) {\r\n            var sqrtN = Math.sqrt(n);\r\n            for (var factor = 2; factor <= sqrtN; factor++) {\r\n                if (!(n % factor)) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        function getFractionalBits(n) {\r\n            return ((n - (n | 0)) * 0x100000000) | 0;\r\n        }\r\n\r\n        var n = 2;\r\n        var nPrime = 0;\r\n        while (nPrime < 64) {\r\n            if (isPrime(n)) {\r\n                if (nPrime < 8) {\r\n                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\r\n                }\r\n                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\r\n\r\n                nPrime++;\r\n            }\r\n\r\n            n++;\r\n        }\r\n    }());\r\n\r\n    // Reusable object\r\n    var W = [];\r\n\r\n    /**\r\n     * SHA-256 hash algorithm.\r\n     */\r\n    var SHA256 = C_algo.SHA256 = Hasher.extend({\r\n        _doReset: function () {\r\n            this._hash = new WordArray.init(H.slice(0));\r\n        },\r\n\r\n        _doProcessBlock: function (M, offset) {\r\n            // Shortcut\r\n            var H = this._hash.words;\r\n\r\n            // Working variables\r\n            var a = H[0];\r\n            var b = H[1];\r\n            var c = H[2];\r\n            var d = H[3];\r\n            var e = H[4];\r\n            var f = H[5];\r\n            var g = H[6];\r\n            var h = H[7];\r\n\r\n            // Computation\r\n            for (var i = 0; i < 64; i++) {\r\n                if (i < 16) {\r\n                    W[i] = M[offset + i] | 0;\r\n                } else {\r\n                    var gamma0x = W[i - 15];\r\n                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\r\n                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\r\n                                   (gamma0x >>> 3);\r\n\r\n                    var gamma1x = W[i - 2];\r\n                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\r\n                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\r\n                                   (gamma1x >>> 10);\r\n\r\n                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\r\n                }\r\n\r\n                var ch  = (e & f) ^ (~e & g);\r\n                var maj = (a & b) ^ (a & c) ^ (b & c);\r\n\r\n                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\r\n                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\r\n\r\n                var t1 = h + sigma1 + ch + K[i] + W[i];\r\n                var t2 = sigma0 + maj;\r\n\r\n                h = g;\r\n                g = f;\r\n                f = e;\r\n                e = (d + t1) | 0;\r\n                d = c;\r\n                c = b;\r\n                b = a;\r\n                a = (t1 + t2) | 0;\r\n            }\r\n\r\n            // Intermediate hash value\r\n            H[0] = (H[0] + a) | 0;\r\n            H[1] = (H[1] + b) | 0;\r\n            H[2] = (H[2] + c) | 0;\r\n            H[3] = (H[3] + d) | 0;\r\n            H[4] = (H[4] + e) | 0;\r\n            H[5] = (H[5] + f) | 0;\r\n            H[6] = (H[6] + g) | 0;\r\n            H[7] = (H[7] + h) | 0;\r\n        },\r\n\r\n        _doFinalize: function () {\r\n            // Shortcuts\r\n            var data = this._data;\r\n            var dataWords = data.words;\r\n\r\n            var nBitsTotal = this._nDataBytes * 8;\r\n            var nBitsLeft = data.sigBytes * 8;\r\n\r\n            // Add padding\r\n            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\r\n            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\r\n            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\r\n            data.sigBytes = dataWords.length * 4;\r\n\r\n            // Hash final blocks\r\n            this._process();\r\n\r\n            // Return final computed hash\r\n            return this._hash;\r\n        },\r\n\r\n        clone: function () {\r\n            var clone = Hasher.clone.call(this);\r\n            clone._hash = this._hash.clone();\r\n\r\n            return clone;\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Shortcut function to the hasher's object interface.\r\n     *\r\n     * @param {WordArray|string} message The message to hash.\r\n     *\r\n     * @return {WordArray} The hash.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var hash = CryptoJS.SHA256('message');\r\n     *     var hash = CryptoJS.SHA256(wordArray);\r\n     */\r\n    C.SHA256 = Hasher._createHelper(SHA256);\r\n\r\n    /**\r\n     * Shortcut function to the HMAC's object interface.\r\n     *\r\n     * @param {WordArray|string} message The message to hash.\r\n     * @param {WordArray|string} key The secret key.\r\n     *\r\n     * @return {WordArray} The HMAC.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var hmac = CryptoJS.HmacSHA256(message, key);\r\n     */\r\n    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\r\n}(Math));\r\n","/*\r\nCryptoJS v3.1.2\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n(function () {\r\n    // Check if typed arrays are supported\r\n    if (typeof ArrayBuffer != 'function') {\r\n        return;\r\n    }\r\n\r\n    // Shortcuts\r\n    var C = qq.CryptoJS;\r\n    var C_lib = C.lib;\r\n    var WordArray = C_lib.WordArray;\r\n\r\n    // Reference original init\r\n    var superInit = WordArray.init;\r\n\r\n    // Augment WordArray.init to handle typed arrays\r\n    var subInit = WordArray.init = function (typedArray) {\r\n        // Convert buffers to uint8\r\n        if (typedArray instanceof ArrayBuffer) {\r\n            typedArray = new Uint8Array(typedArray);\r\n        }\r\n\r\n        // Convert other array views to uint8\r\n        if (\r\n            typedArray instanceof Int8Array ||\r\n            typedArray instanceof Uint8ClampedArray ||\r\n            typedArray instanceof Int16Array ||\r\n            typedArray instanceof Uint16Array ||\r\n            typedArray instanceof Int32Array ||\r\n            typedArray instanceof Uint32Array ||\r\n            typedArray instanceof Float32Array ||\r\n            typedArray instanceof Float64Array\r\n        ) {\r\n            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\r\n        }\r\n\r\n        // Handle Uint8Array\r\n        if (typedArray instanceof Uint8Array) {\r\n            // Shortcut\r\n            var typedArrayByteLength = typedArray.byteLength;\r\n\r\n            // Extract bytes\r\n            var words = [];\r\n            for (var i = 0; i < typedArrayByteLength; i++) {\r\n                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\r\n            }\r\n\r\n            // Initialize this word array\r\n            superInit.call(this, words, typedArrayByteLength);\r\n        } else {\r\n            // Else call normal init\r\n            superInit.apply(this, arguments);\r\n        }\r\n    };\r\n\r\n    subInit.prototype = WordArray;\r\n}());\r\n","/*globals qq */\nqq.s3 = qq.s3 || {};\n\nqq.s3.util = qq.s3.util || (function() {\n    \"use strict\";\n\n    return {\n        ALGORITHM_PARAM_NAME: \"x-amz-algorithm\",\n\n        AWS_PARAM_PREFIX: \"x-amz-meta-\",\n\n        CREDENTIAL_PARAM_NAME: \"x-amz-credential\",\n\n        DATE_PARAM_NAME: \"x-amz-date\",\n\n        REDUCED_REDUNDANCY_PARAM_NAME: \"x-amz-storage-class\",\n        REDUCED_REDUNDANCY_PARAM_VALUE: \"REDUCED_REDUNDANCY\",\n\n        SERVER_SIDE_ENCRYPTION_PARAM_NAME: \"x-amz-server-side-encryption\",\n        SERVER_SIDE_ENCRYPTION_PARAM_VALUE: \"AES256\",\n\n        SESSION_TOKEN_PARAM_NAME: \"x-amz-security-token\",\n\n        V4_ALGORITHM_PARAM_VALUE: \"AWS4-HMAC-SHA256\",\n\n        V4_SIGNATURE_PARAM_NAME: \"x-amz-signature\",\n\n        CASE_SENSITIVE_PARAM_NAMES: [\n            \"Cache-Control\",\n            \"Content-Disposition\",\n            \"Content-Encoding\",\n            \"Content-MD5\"\n        ],\n\n        UNSIGNABLE_REST_HEADER_NAMES: [\n            \"Cache-Control\",\n            \"Content-Disposition\",\n            \"Content-Encoding\",\n            \"Content-MD5\"\n        ],\n\n        UNPREFIXED_PARAM_NAMES: [\n            \"Cache-Control\",\n            \"Content-Disposition\",\n            \"Content-Encoding\",\n            \"Content-MD5\",\n            \"x-amz-server-side-encryption\",\n            \"x-amz-server-side-encryption-aws-kms-key-id\",\n            \"x-amz-server-side-encryption-customer-algorithm\",\n            \"x-amz-server-side-encryption-customer-key\",\n            \"x-amz-server-side-encryption-customer-key-MD5\"\n        ],\n\n        /**\n         * This allows for the region to be specified in the bucket's endpoint URL, or not.\n         *\n         * Examples of some valid endpoints are:\n         *     http://foo.s3.amazonaws.com\n         *     https://foo.s3.amazonaws.com\n         *     http://foo.s3-ap-northeast-1.amazonaws.com\n         *     foo.s3.amazonaws.com\n         *     http://foo.bar.com\n         *     http://s3.amazonaws.com/foo.bar.com\n         * ...etc\n         *\n         * @param endpoint The bucket's URL.\n         * @returns {String || undefined} The bucket name, or undefined if the URL cannot be parsed.\n         */\n        getBucket: function(endpoint) {\n            var patterns = [\n                    //bucket in domain\n                    /^(?:https?:\\/\\/)?([a-z0-9.\\-_]+)\\.s3(?:-[a-z0-9\\-]+)?\\.amazonaws\\.com/i,\n                    //bucket in path\n                    /^(?:https?:\\/\\/)?s3(?:-[a-z0-9\\-]+)?\\.amazonaws\\.com\\/([a-z0-9.\\-_]+)/i,\n                    //custom domain\n                    /^(?:https?:\\/\\/)?([a-z0-9.\\-_]+)/i\n                ],\n                bucket;\n\n            qq.each(patterns, function(idx, pattern) {\n                var match = pattern.exec(endpoint);\n\n                if (match) {\n                    bucket = match[1];\n                    return false;\n                }\n            });\n\n            return bucket;\n        },\n\n        /** Create Prefixed request headers which are appropriate for S3.\n         *\n         * If the request header is appropriate for S3 (e.g. Cache-Control) then pass\n         * it along without a metadata prefix. For all other request header parameter names,\n         * apply qq.s3.util.AWS_PARAM_PREFIX before the name.\n         * See: http://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPUT.html\n         */\n        _getPrefixedParamName: function(name) {\n            if (qq.indexOf(qq.s3.util.UNPREFIXED_PARAM_NAMES, name) >= 0) {\n                return name;\n            }\n            return qq.s3.util.AWS_PARAM_PREFIX + name;\n        },\n\n        /**\n         * Create a policy document to be signed and sent along with the S3 upload request.\n         *\n         * @param spec Object with properties use to construct the policy document.\n         * @returns {Object} Policy doc.\n         */\n        getPolicy: function(spec) {\n            var policy = {},\n                conditions = [],\n                bucket = spec.bucket,\n                date = spec.date,\n                drift = spec.clockDrift,\n                key = spec.key,\n                accessKey = spec.accessKey,\n                acl = spec.acl,\n                type = spec.type,\n                expectedStatus = spec.expectedStatus,\n                sessionToken = spec.sessionToken,\n                params = spec.params,\n                successRedirectUrl = qq.s3.util.getSuccessRedirectAbsoluteUrl(spec.successRedirectUrl),\n                minFileSize = spec.minFileSize,\n                maxFileSize = spec.maxFileSize,\n                reducedRedundancy = spec.reducedRedundancy,\n                region = spec.region,\n                serverSideEncryption = spec.serverSideEncryption,\n                signatureVersion = spec.signatureVersion;\n\n            policy.expiration = qq.s3.util.getPolicyExpirationDate(date, drift);\n\n            conditions.push({acl: acl});\n            conditions.push({bucket: bucket});\n\n            if (type) {\n                conditions.push({\"Content-Type\": type});\n            }\n\n            // jscs:disable requireCamelCaseOrUpperCaseIdentifiers\n            if (expectedStatus) {\n                conditions.push({success_action_status: expectedStatus.toString()});\n            }\n\n            if (successRedirectUrl) {\n                conditions.push({success_action_redirect: successRedirectUrl});\n            }\n            // jscs:enable\n            if (reducedRedundancy) {\n                conditions.push({});\n                conditions[conditions.length - 1][qq.s3.util.REDUCED_REDUNDANCY_PARAM_NAME] = qq.s3.util.REDUCED_REDUNDANCY_PARAM_VALUE;\n            }\n\n            if (sessionToken) {\n                conditions.push({});\n                conditions[conditions.length - 1][qq.s3.util.SESSION_TOKEN_PARAM_NAME] = sessionToken;\n            }\n\n            if (serverSideEncryption) {\n                conditions.push({});\n                conditions[conditions.length - 1][qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_NAME] = qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_VALUE;\n            }\n\n            if (signatureVersion === 2) {\n                conditions.push({key: key});\n            }\n            else if (signatureVersion === 4) {\n                conditions.push({});\n                conditions[conditions.length - 1][qq.s3.util.ALGORITHM_PARAM_NAME] = qq.s3.util.V4_ALGORITHM_PARAM_VALUE;\n\n                conditions.push({});\n                conditions[conditions.length - 1].key = key;\n\n                conditions.push({});\n                conditions[conditions.length - 1][qq.s3.util.CREDENTIAL_PARAM_NAME] =\n                    qq.s3.util.getV4CredentialsString({date: date, key: accessKey, region: region});\n\n                conditions.push({});\n                conditions[conditions.length - 1][qq.s3.util.DATE_PARAM_NAME] =\n                    qq.s3.util.getV4PolicyDate(date, drift);\n            }\n\n            // user metadata\n            qq.each(params, function(name, val) {\n                var awsParamName = qq.s3.util._getPrefixedParamName(name),\n                    param = {};\n\n                if (qq.indexOf(qq.s3.util.UNPREFIXED_PARAM_NAMES, awsParamName) >= 0) {\n                    param[awsParamName] = val;\n                }\n                else {\n                    param[awsParamName] = encodeURIComponent(val);\n                }\n\n                conditions.push(param);\n            });\n\n            policy.conditions = conditions;\n\n            qq.s3.util.enforceSizeLimits(policy, minFileSize, maxFileSize);\n\n            return policy;\n        },\n\n        /**\n         * Update a previously constructed policy document with updated credentials.  Currently, this only requires we\n         * update the session token.  This is only relevant if requests are being signed client-side.\n         *\n         * @param policy Live policy document\n         * @param newSessionToken Updated session token.\n         */\n        refreshPolicyCredentials: function(policy, newSessionToken) {\n            var sessionTokenFound = false;\n\n            qq.each(policy.conditions, function(oldCondIdx, oldCondObj) {\n                qq.each(oldCondObj, function(oldCondName, oldCondVal) {\n                    if (oldCondName === qq.s3.util.SESSION_TOKEN_PARAM_NAME) {\n                        oldCondObj[oldCondName] = newSessionToken;\n                        sessionTokenFound = true;\n                    }\n                });\n            });\n\n            if (!sessionTokenFound) {\n                policy.conditions.push({});\n                policy.conditions[policy.conditions.length - 1][qq.s3.util.SESSION_TOKEN_PARAM_NAME] = newSessionToken;\n            }\n        },\n\n        /**\n         * Generates all parameters to be passed along with the S3 upload request.  This includes invoking a callback\n         * that is expected to asynchronously retrieve a signature for the policy document.  Note that the server\n         * signing the request should reject a \"tainted\" policy document that includes unexpected values, since it is\n         * still possible for a malicious user to tamper with these values during policy document generation,\n         * before it is sent to the server for signing.\n         *\n         * @param spec Object with properties: `params`, `type`, `key`, `accessKey`, `acl`, `expectedStatus`, `successRedirectUrl`,\n         * `reducedRedundancy`, `region`, `serverSideEncryption`, `version`, and `log()`, along with any options associated with `qq.s3.util.getPolicy()`.\n         * @returns {qq.Promise} Promise that will be fulfilled once all parameters have been determined.\n         */\n        generateAwsParams: function(spec, signPolicyCallback) {\n            var awsParams = {},\n                customParams = spec.params,\n                promise = new qq.Promise(),\n                sessionToken = spec.sessionToken,\n                drift = spec.clockDrift,\n                type = spec.type,\n                key = spec.key,\n                accessKey = spec.accessKey,\n                acl = spec.acl,\n                expectedStatus = spec.expectedStatus,\n                successRedirectUrl = qq.s3.util.getSuccessRedirectAbsoluteUrl(spec.successRedirectUrl),\n                reducedRedundancy = spec.reducedRedundancy,\n                region = spec.region,\n                serverSideEncryption = spec.serverSideEncryption,\n                signatureVersion = spec.signatureVersion,\n                now = new Date(),\n                log = spec.log,\n                policyJson;\n\n            spec.date = now;\n            policyJson = qq.s3.util.getPolicy(spec);\n\n            awsParams.key = key;\n\n            if (type) {\n                awsParams[\"Content-Type\"] = type;\n            }\n            // jscs:disable requireCamelCaseOrUpperCaseIdentifiers\n            if (expectedStatus) {\n                awsParams.success_action_status = expectedStatus;\n            }\n\n            if (successRedirectUrl) {\n                awsParams.success_action_redirect = successRedirectUrl;\n            }\n            // jscs:enable\n            if (reducedRedundancy) {\n                awsParams[qq.s3.util.REDUCED_REDUNDANCY_PARAM_NAME] = qq.s3.util.REDUCED_REDUNDANCY_PARAM_VALUE;\n            }\n\n            if (serverSideEncryption) {\n                awsParams[qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_NAME] = qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_VALUE;\n            }\n\n            if (sessionToken) {\n                awsParams[qq.s3.util.SESSION_TOKEN_PARAM_NAME] = sessionToken;\n            }\n\n            awsParams.acl = acl;\n\n            // Custom (user-supplied) params must be prefixed with the value of `qq.s3.util.AWS_PARAM_PREFIX`.\n            // Params such as Cache-Control or Content-Disposition will not be prefixed.\n            // Prefixed param values will be URI encoded as well.\n            qq.each(customParams, function(name, val) {\n                var awsParamName = qq.s3.util._getPrefixedParamName(name);\n\n                if (qq.indexOf(qq.s3.util.UNPREFIXED_PARAM_NAMES, awsParamName) >= 0) {\n                    awsParams[awsParamName] = val;\n                }\n                else {\n                    awsParams[awsParamName] = encodeURIComponent(val);\n                }\n            });\n\n            if (signatureVersion === 2) {\n                awsParams.AWSAccessKeyId = accessKey;\n            }\n            else if (signatureVersion === 4) {\n                awsParams[qq.s3.util.ALGORITHM_PARAM_NAME] = qq.s3.util.V4_ALGORITHM_PARAM_VALUE;\n                awsParams[qq.s3.util.CREDENTIAL_PARAM_NAME] = qq.s3.util.getV4CredentialsString({date: now, key: accessKey, region: region});\n                awsParams[qq.s3.util.DATE_PARAM_NAME] = qq.s3.util.getV4PolicyDate(now, drift);\n            }\n\n            // Invoke a promissory callback that should provide us with a base64-encoded policy doc and an\n            // HMAC signature for the policy doc.\n            signPolicyCallback(policyJson).then(\n                function(policyAndSignature, updatedAccessKey, updatedSessionToken) {\n                    awsParams.policy = policyAndSignature.policy;\n\n                    if (spec.signatureVersion === 2) {\n                        awsParams.signature = policyAndSignature.signature;\n\n                        if (updatedAccessKey) {\n                            awsParams.AWSAccessKeyId = updatedAccessKey;\n                        }\n                    }\n                    else if (spec.signatureVersion === 4) {\n                        awsParams[qq.s3.util.V4_SIGNATURE_PARAM_NAME] = policyAndSignature.signature;\n                    }\n\n                    if (updatedSessionToken) {\n                        awsParams[qq.s3.util.SESSION_TOKEN_PARAM_NAME] = updatedSessionToken;\n                    }\n\n                    promise.success(awsParams);\n                },\n                function(errorMessage) {\n                    errorMessage = errorMessage || \"Can't continue further with request to S3 as we did not receive \" +\n                                                   \"a valid signature and policy from the server.\";\n\n                    log(\"Policy signing failed.  \" + errorMessage, \"error\");\n                    promise.failure(errorMessage);\n                }\n            );\n\n            return promise;\n        },\n\n        /**\n         * Add a condition to an existing S3 upload request policy document used to ensure AWS enforces any size\n         * restrictions placed on files server-side.  This is important to do, in case users mess with the client-side\n         * checks already in place.\n         *\n         * @param policy Policy document as an `Object`, with a `conditions` property already attached\n         * @param minSize Minimum acceptable size, in bytes\n         * @param maxSize Maximum acceptable size, in bytes (0 = unlimited)\n         */\n        enforceSizeLimits: function(policy, minSize, maxSize) {\n            var adjustedMinSize = minSize < 0 ? 0 : minSize,\n                // Adjust a maxSize of 0 to the largest possible integer, since we must specify a high and a low in the request\n                adjustedMaxSize = maxSize <= 0 ? 9007199254740992 : maxSize;\n\n            if (minSize > 0 || maxSize > 0) {\n                policy.conditions.push([\"content-length-range\", adjustedMinSize.toString(), adjustedMaxSize.toString()]);\n            }\n        },\n\n        getPolicyExpirationDate: function(date, drift) {\n            var adjustedDate = new Date(date.getTime() + drift);\n            return qq.s3.util.getPolicyDate(adjustedDate, 5);\n        },\n\n        getCredentialsDate: function(date) {\n            return date.getUTCFullYear() + \"\" +\n                (\"0\" + (date.getUTCMonth() + 1)).slice(-2) +\n                (\"0\" + date.getUTCDate()).slice(-2);\n        },\n\n        getPolicyDate: function(date, _minutesToAdd_) {\n            var minutesToAdd = _minutesToAdd_ || 0,\n                pad, r;\n\n            /*jshint -W014 */\n            // Is this going to be a problem if we encounter this moments before 2 AM just before daylight savings time ends?\n            date.setMinutes(date.getMinutes() + (minutesToAdd || 0));\n\n            if (Date.prototype.toISOString) {\n                return date.toISOString();\n            }\n            else {\n                pad = function(number) {\n                    r = String(number);\n\n                    if (r.length === 1) {\n                        r = \"0\" + r;\n                    }\n\n                    return r;\n                };\n\n                return date.getUTCFullYear()\n                    + \"-\" + pad(date.getUTCMonth() + 1)\n                    + \"-\" + pad(date.getUTCDate())\n                    + \"T\" + pad(date.getUTCHours())\n                    + \":\" + pad(date.getUTCMinutes())\n                    + \":\" + pad(date.getUTCSeconds())\n                    + \".\" + String((date.getUTCMilliseconds() / 1000).toFixed(3)).slice(2, 5)\n                    + \"Z\";\n            }\n        },\n\n        /**\n         * Looks at a response from S3 contained in an iframe and parses the query string in an attempt to identify\n         * the associated resource.\n         *\n         * @param iframe Iframe containing response\n         * @returns {{bucket: *, key: *, etag: *}}\n         */\n        parseIframeResponse: function(iframe) {\n            var doc = iframe.contentDocument || iframe.contentWindow.document,\n                queryString = doc.location.search,\n                match = /bucket=(.+)&key=(.+)&etag=(.+)/.exec(queryString);\n\n            if (match) {\n                return {\n                    bucket: match[1],\n                    key: match[2],\n                    etag: match[3].replace(/%22/g, \"\")\n                };\n            }\n        },\n\n        /**\n         * @param successRedirectUrl Relative or absolute location of success redirect page\n         * @returns {*|string} undefined if the parameter is undefined, otherwise the absolute location of the success redirect page\n         */\n        getSuccessRedirectAbsoluteUrl: function(successRedirectUrl) {\n            if (successRedirectUrl) {\n                var targetAnchorContainer = document.createElement(\"div\"),\n                    targetAnchor;\n\n                if (qq.ie7()) {\n                    // Note that we must make use of `innerHTML` for IE7 only instead of simply creating an anchor via\n                    // `document.createElement('a')` and setting the `href` attribute.  The latter approach does not allow us to\n                    // obtain an absolute URL in IE7 if the `endpoint` is a relative URL.\n                    targetAnchorContainer.innerHTML = \"<a href='\" + successRedirectUrl + \"'></a>\";\n                    targetAnchor = targetAnchorContainer.firstChild;\n                    return targetAnchor.href;\n                }\n                else {\n                    // IE8 and IE9 do not seem to derive an absolute URL from a relative URL using the `innerHTML`\n                    // approach above, so we'll just create an anchor this way and set it's `href` attribute.\n                    // Due to yet another quirk in IE8 and IE9, we have to set the `href` equal to itself\n                    // in order to ensure relative URLs will be properly parsed.\n                    targetAnchor = document.createElement(\"a\");\n                    targetAnchor.href = successRedirectUrl;\n                    targetAnchor.href = targetAnchor.href;\n                    return targetAnchor.href;\n                }\n            }\n        },\n\n        getV4CredentialsString: function(spec) {\n            return spec.key + \"/\" +\n                qq.s3.util.getCredentialsDate(spec.date) + \"/\" +\n                spec.region + \"/s3/aws4_request\";\n        },\n\n        getV4PolicyDate: function(date, drift) {\n            var adjustedDate = new Date(date.getTime() + drift);\n\n            return qq.s3.util.getCredentialsDate(adjustedDate) + \"T\" +\n                    (\"0\" + adjustedDate.getUTCHours()).slice(-2) +\n                    (\"0\" + adjustedDate.getUTCMinutes()).slice(-2) +\n                    (\"0\" + adjustedDate.getUTCSeconds()).slice(-2) +\n                    \"Z\";\n        },\n\n        // AWS employs a strict interpretation of [RFC 3986](http://tools.ietf.org/html/rfc3986#page-12).\n        // So, we must ensure all reserved characters listed in the spec are percent-encoded,\n        // and spaces are replaced with \"+\".\n        encodeQueryStringParam: function(param) {\n            var percentEncoded = encodeURIComponent(param);\n\n            // %-encode characters not handled by `encodeURIComponent` (to follow RFC 3986)\n            percentEncoded = percentEncoded.replace(/[!'()]/g, escape);\n\n            // %-encode characters not handled by `escape` (to follow RFC 3986)\n            percentEncoded = percentEncoded.replace(/\\*/g, \"%2A\");\n\n            // replace percent-encoded spaces with a \"+\"\n            return percentEncoded.replace(/%20/g, \"+\");\n        },\n        /**\n         * Escapes url part as for AWS requirements\n         * AWS uriEscapePath function pulled from aws-sdk-js licensed under Apache 2.0 - http://github.com/aws/aws-sdk-js\n         */\n        uriEscape: function(string) {\n            var output = encodeURIComponent(string);\n            output = output.replace(/[^A-Za-z0-9_.~\\-%]+/g, escape);\n            output = output.replace(/[*]/g, function(ch) {\n                return \"%\" + ch.charCodeAt(0).toString(16).toUpperCase();\n            });\n            return output;\n        },\n        /**\n         * Escapes a path as for AWS requirement\n         * AWS uriEscapePath function pulled from aws-sdk-js licensed under Apache 2.0 - http://github.com/aws/aws-sdk-js\n         */\n        uriEscapePath: function(path) {\n            var parts = [];\n            qq.each(path.split(\"/\"), function(idx, item) {\n                parts.push(qq.s3.util.uriEscape(item));\n            });\n            return parts.join(\"/\");\n        }\n    };\n}());\n","/*globals qq*/\n/**\n * Defines the public API for non-traditional FineUploaderBasic mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.nonTraditionalBasePublicApi = {\n        setUploadSuccessParams: function(params, id) {\n            this._uploadSuccessParamsStore.set(params, id);\n        },\n        setUploadSuccessEndpoint: function(endpoint, id) {\n            this._uploadSuccessEndpointStore.set(endpoint, id);\n        }\n    };\n\n    qq.nonTraditionalBasePrivateApi = {\n        /**\n         * When the upload has completed, if it is successful, send a request to the `successEndpoint` (if defined).\n         * This will hold up the call to the `onComplete` callback until we have determined success of the upload\n         * according to the local server, if a `successEndpoint` has been defined by the integrator.\n         *\n         * @param id ID of the completed upload\n         * @param name Name of the associated item\n         * @param result Object created from the server's parsed JSON response.\n         * @param xhr Associated XmlHttpRequest, if this was used to send the request.\n         * @returns {boolean || qq.Promise} true/false if success can be determined immediately, otherwise a `qq.Promise`\n         * if we need to ask the server.\n         * @private\n         */\n        _onComplete: function(id, name, result, xhr) {\n            var success = result.success ? true : false,\n                self = this,\n                onCompleteArgs = arguments,\n                successEndpoint = this._uploadSuccessEndpointStore.get(id),\n                successCustomHeaders = this._options.uploadSuccess.customHeaders,\n                successMethod = this._options.uploadSuccess.method,\n                cors = this._options.cors,\n                promise = new qq.Promise(),\n                uploadSuccessParams = this._uploadSuccessParamsStore.get(id),\n                fileParams = this._paramsStore.get(id),\n\n                // If we are waiting for confirmation from the local server, and have received it,\n                // include properties from the local server response in the `response` parameter\n                // sent to the `onComplete` callback, delegate to the parent `_onComplete`, and\n                // fulfill the associated promise.\n                onSuccessFromServer = function(successRequestResult) {\n                    delete self._failedSuccessRequestCallbacks[id];\n                    qq.extend(result, successRequestResult);\n                    qq.FineUploaderBasic.prototype._onComplete.apply(self, onCompleteArgs);\n                    promise.success(successRequestResult);\n                },\n\n                // If the upload success request fails, attempt to re-send the success request (via the core retry code).\n                // The entire upload may be restarted if the server returns a \"reset\" property with a value of true as well.\n                onFailureFromServer = function(successRequestResult) {\n                    var callback = submitSuccessRequest;\n\n                    qq.extend(result, successRequestResult);\n\n                    if (result && result.reset) {\n                        callback = null;\n                    }\n\n                    if (!callback) {\n                        delete self._failedSuccessRequestCallbacks[id];\n                    }\n                    else {\n                        self._failedSuccessRequestCallbacks[id] = callback;\n                    }\n\n                    if (!self._onAutoRetry(id, name, result, xhr, callback)) {\n                        qq.FineUploaderBasic.prototype._onComplete.apply(self, onCompleteArgs);\n                        promise.failure(successRequestResult);\n                    }\n                },\n                submitSuccessRequest,\n                successAjaxRequester;\n\n            // Ask the local server if the file sent is ok.\n            if (success && successEndpoint) {\n                successAjaxRequester = new qq.UploadSuccessAjaxRequester({\n                    endpoint: successEndpoint,\n                    method: successMethod,\n                    customHeaders: successCustomHeaders,\n                    cors: cors,\n                    log: qq.bind(this.log, this)\n                });\n\n                // combine custom params and default params\n                qq.extend(uploadSuccessParams, self._getEndpointSpecificParams(id, result, xhr), true);\n\n                // include any params associated with the file\n                fileParams && qq.extend(uploadSuccessParams, fileParams, true);\n\n                submitSuccessRequest = qq.bind(function() {\n                    successAjaxRequester.sendSuccessRequest(id, uploadSuccessParams)\n                        .then(onSuccessFromServer, onFailureFromServer);\n                }, self);\n\n                submitSuccessRequest();\n\n                return promise;\n            }\n\n            // If we are not asking the local server about the file, just delegate to the parent `_onComplete`.\n            return qq.FineUploaderBasic.prototype._onComplete.apply(this, arguments);\n        },\n\n        // If the failure occurred on an upload success request (and a reset was not ordered), try to resend that instead.\n        _manualRetry: function(id) {\n            var successRequestCallback = this._failedSuccessRequestCallbacks[id];\n\n            return qq.FineUploaderBasic.prototype._manualRetry.call(this, id, successRequestCallback);\n        }\n    };\n}());\n","/*globals qq */\n/**\n * This defines FineUploaderBasic mode w/ support for uploading to S3, which provides all the basic\n * functionality of Fine Uploader Basic as well as code to handle uploads directly to S3.\n * Some inherited options and API methods have a special meaning in the context of the S3 uploader.\n */\n(function() {\n    \"use strict\";\n\n    qq.s3.FineUploaderBasic = function(o) {\n        var options = {\n            request: {\n                // public key (required for server-side signing, ignored if `credentials` have been provided)\n                accessKey: null,\n\n                // padding, in milliseconds, to add to the x-amz-date header & the policy expiration date\n                clockDrift: 0\n            },\n\n            objectProperties: {\n                acl: \"private\",\n\n                // string or a function which may be promissory\n                bucket: qq.bind(function(id) {\n                    return qq.s3.util.getBucket(this.getEndpoint(id));\n                }, this),\n\n                // string or a function which may be promissory - only used for V4 multipart uploads\n                host: qq.bind(function(id) {\n                    return (/(?:http|https):\\/\\/(.+)(?:\\/.+)?/).exec(this._endpointStore.get(id))[1];\n                }, this),\n\n                // 'uuid', 'filename', or a function which may be promissory\n                key: \"uuid\",\n\n                reducedRedundancy: false,\n\n                // Defined at http://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region\n                region: \"us-east-1\",\n\n                serverSideEncryption: false\n            },\n\n            credentials: {\n                // Public key (required).\n                accessKey: null,\n                // Private key (required).\n                secretKey: null,\n                // Expiration date for the credentials (required).  May be an ISO string or a `Date`.\n                expiration: null,\n                // Temporary credentials session token.\n                // Only required for temporary credentials obtained via AssumeRoleWithWebIdentity.\n                sessionToken: null\n            },\n\n            // All but `version` are ignored if `credentials` is provided.\n            signature: {\n                customHeaders: {},\n                endpoint: null,\n                version: 2\n            },\n\n            uploadSuccess: {\n                endpoint: null,\n\n                method: \"POST\",\n\n                // In addition to the default params sent by Fine Uploader\n                params: {},\n\n                customHeaders: {}\n            },\n\n            // required if non-File-API browsers, such as IE9 and older, are used\n            iframeSupport: {\n                localBlankPagePath: null\n            },\n\n            chunking: {\n                // minimum part size is 5 MiB when uploading to S3\n                partSize: 5242880\n            },\n\n            cors: {\n                allowXdr: true\n            },\n\n            callbacks: {\n                onCredentialsExpired: function() {}\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(options, o, true);\n\n        if (!this.setCredentials(options.credentials, true)) {\n            this._currentCredentials.accessKey = options.request.accessKey;\n        }\n\n        this._aclStore = this._createStore(options.objectProperties.acl);\n\n        // Call base module\n        qq.FineUploaderBasic.call(this, options);\n\n        this._uploadSuccessParamsStore = this._createStore(this._options.uploadSuccess.params);\n        this._uploadSuccessEndpointStore = this._createStore(this._options.uploadSuccess.endpoint);\n\n        // This will hold callbacks for failed uploadSuccess requests that will be invoked on retry.\n        // Indexed by file ID.\n        this._failedSuccessRequestCallbacks = {};\n\n        // Holds S3 keys for file representations constructed from a session request.\n        this._cannedKeys = {};\n        // Holds S3 buckets for file representations constructed from a session request.\n        this._cannedBuckets = {};\n\n        this._buckets = {};\n        this._hosts = {};\n    };\n\n    // Inherit basic public & private API methods.\n    qq.extend(qq.s3.FineUploaderBasic.prototype, qq.basePublicApi);\n    qq.extend(qq.s3.FineUploaderBasic.prototype, qq.basePrivateApi);\n    qq.extend(qq.s3.FineUploaderBasic.prototype, qq.nonTraditionalBasePublicApi);\n    qq.extend(qq.s3.FineUploaderBasic.prototype, qq.nonTraditionalBasePrivateApi);\n\n    // Define public & private API methods for this module.\n    qq.extend(qq.s3.FineUploaderBasic.prototype, {\n        getBucket: function(id) {\n            if (this._cannedBuckets[id] == null) {\n                return this._buckets[id];\n            }\n            return this._cannedBuckets[id];\n        },\n\n        /**\n         * @param id File ID\n         * @returns {*} Key name associated w/ the file, if one exists\n         */\n        getKey: function(id) {\n            /* jshint eqnull:true */\n            if (this._cannedKeys[id] == null) {\n                return this._handler.getThirdPartyFileId(id);\n            }\n\n            return this._cannedKeys[id];\n        },\n\n        /**\n         * Override the parent's reset function to cleanup various S3-related items.\n         */\n        reset: function() {\n            qq.FineUploaderBasic.prototype.reset.call(this);\n            this._failedSuccessRequestCallbacks = [];\n            this._buckets = {};\n            this._hosts = {};\n        },\n\n        setCredentials: function(credentials, ignoreEmpty) {\n            if (credentials && credentials.secretKey) {\n                if (!credentials.accessKey) {\n                    throw new qq.Error(\"Invalid credentials: no accessKey\");\n                }\n                else if (!credentials.expiration) {\n                    throw new qq.Error(\"Invalid credentials: no expiration\");\n                }\n                else {\n                    this._currentCredentials = qq.extend({}, credentials);\n\n                    // Ensure expiration is a `Date`.  If initially a string, assuming it is in ISO format.\n                    if (qq.isString(credentials.expiration)) {\n                        this._currentCredentials.expiration = new Date(credentials.expiration);\n                    }\n                }\n\n                return true;\n            }\n            else if (!ignoreEmpty) {\n                throw new qq.Error(\"Invalid credentials parameter!\");\n            }\n            else {\n                this._currentCredentials = {};\n            }\n        },\n\n        setAcl: function(acl, id) {\n            this._aclStore.set(acl, id);\n        },\n\n        /**\n         * Ensures the parent's upload handler creator passes any additional S3-specific options to the handler as well\n         * as information required to instantiate the specific handler based on the current browser's capabilities.\n         *\n         * @returns {qq.UploadHandlerController}\n         * @private\n         */\n        _createUploadHandler: function() {\n            var self = this,\n                additionalOptions = {\n                    aclStore: this._aclStore,\n                    getBucket: qq.bind(this._determineBucket, this),\n                    getHost: qq.bind(this._determineHost, this),\n                    getKeyName: qq.bind(this._determineKeyName, this),\n                    iframeSupport: this._options.iframeSupport,\n                    objectProperties: this._options.objectProperties,\n                    signature: this._options.signature,\n                    clockDrift: this._options.request.clockDrift,\n                    // pass size limit validation values to include in the request so AWS enforces this server-side\n                    validation: {\n                        minSizeLimit: this._options.validation.minSizeLimit,\n                        maxSizeLimit: this._options.validation.sizeLimit\n                    }\n                };\n\n            // We assume HTTP if it is missing from the start of the endpoint string.\n            qq.override(this._endpointStore, function(super_) {\n                return {\n                    get: function(id) {\n                        var endpoint = super_.get(id);\n\n                        if (endpoint.indexOf(\"http\") < 0) {\n                            return \"http://\" + endpoint;\n                        }\n\n                        return endpoint;\n                    }\n                };\n            });\n\n            // Some param names should be lower case to avoid signature mismatches\n            qq.override(this._paramsStore, function(super_) {\n                return {\n                    get: function(id) {\n                        var oldParams = super_.get(id),\n                            modifiedParams = {};\n\n                        qq.each(oldParams, function(name, val) {\n                            var paramName = name;\n\n                            if (qq.indexOf(qq.s3.util.CASE_SENSITIVE_PARAM_NAMES, paramName) < 0) {\n                                paramName = paramName.toLowerCase();\n                            }\n\n                            modifiedParams[paramName] = qq.isFunction(val) ? val() : val;\n                        });\n\n                        return modifiedParams;\n                    }\n                };\n            });\n\n            additionalOptions.signature.credentialsProvider = {\n                get: function() {\n                    return self._currentCredentials;\n                },\n\n                onExpired: function() {\n                    var updateCredentials = new qq.Promise(),\n                        callbackRetVal = self._options.callbacks.onCredentialsExpired();\n\n                    if (qq.isGenericPromise(callbackRetVal)) {\n                        callbackRetVal.then(function(credentials) {\n                            try {\n                                self.setCredentials(credentials);\n                                updateCredentials.success();\n                            }\n                            catch (error) {\n                                self.log(\"Invalid credentials returned from onCredentialsExpired callback! (\" + error.message + \")\", \"error\");\n                                updateCredentials.failure(\"onCredentialsExpired did not return valid credentials.\");\n                            }\n                        }, function(errorMsg) {\n                            self.log(\"onCredentialsExpired callback indicated failure! (\" + errorMsg + \")\", \"error\");\n                            updateCredentials.failure(\"onCredentialsExpired callback failed.\");\n                        });\n                    }\n                    else {\n                        self.log(\"onCredentialsExpired callback did not return a promise!\", \"error\");\n                        updateCredentials.failure(\"Unexpected return value for onCredentialsExpired.\");\n                    }\n\n                    return updateCredentials;\n                }\n            };\n\n            return qq.FineUploaderBasic.prototype._createUploadHandler.call(this, additionalOptions, \"s3\");\n        },\n\n        _determineObjectPropertyValue: function(id, property) {\n            var maybe = this._options.objectProperties[property],\n                promise = new qq.Promise(),\n                self = this;\n\n            if (qq.isFunction(maybe)) {\n                maybe = maybe(id);\n                if (qq.isGenericPromise(maybe)) {\n                    promise = maybe;\n                }\n                else {\n                    promise.success(maybe);\n                }\n            }\n            else if (qq.isString(maybe)) {\n                promise.success(maybe);\n            }\n\n            promise.then(\n                function success(value) {\n                    self[\"_\" + property + \"s\"][id] = value;\n                },\n\n                function failure(errorMsg) {\n                    qq.log(\"Problem determining \" + property + \" for ID \" + id + \" (\" + errorMsg + \")\", \"error\");\n                }\n            );\n\n            return promise;\n        },\n\n        _determineBucket: function(id) {\n            return this._determineObjectPropertyValue(id, \"bucket\");\n        },\n\n        _determineHost: function(id) {\n            return this._determineObjectPropertyValue(id, \"host\");\n        },\n\n        /**\n         * Determine the file's key name and passes it to the caller via a promissory callback.  This also may\n         * delegate to an integrator-defined function that determines the file's key name on demand,\n         * which also may be promissory.\n         *\n         * @param id ID of the file\n         * @param filename Name of the file\n         * @returns {qq.Promise} A promise that will be fulfilled when the key name has been determined (and will be passed to the caller via the success callback).\n         * @private\n         */\n        _determineKeyName: function(id, filename) {\n            /*jshint -W015*/\n            var promise = new qq.Promise(),\n                keynameLogic = this._options.objectProperties.key,\n                extension = qq.getExtension(filename),\n                onGetKeynameFailure = promise.failure,\n                onGetKeynameSuccess = function(keyname, extension) {\n                    var keynameToUse = keyname;\n\n                    if (extension !== undefined) {\n                        keynameToUse += \".\" + extension;\n                    }\n\n                    promise.success(keynameToUse);\n                };\n\n            switch (keynameLogic) {\n                case \"uuid\":\n                    onGetKeynameSuccess(this.getUuid(id), extension);\n                    break;\n                case \"filename\":\n                    onGetKeynameSuccess(filename);\n                    break;\n                default:\n                    if (qq.isFunction(keynameLogic)) {\n                        this._handleKeynameFunction(keynameLogic, id, onGetKeynameSuccess, onGetKeynameFailure);\n                    }\n                    else {\n                        this.log(keynameLogic + \" is not a valid value for the s3.keyname option!\", \"error\");\n                        onGetKeynameFailure();\n                    }\n            }\n\n            return promise;\n        },\n\n        /**\n         * Called by the internal onUpload handler if the integrator has supplied a function to determine\n         * the file's key name.  The integrator's function may be promissory.  We also need to fulfill\n         * the promise contract associated with the caller as well.\n         *\n         * @param keynameFunc Integrator-supplied function that must be executed to determine the key name.  May be promissory.\n         * @param id ID of the associated file\n         * @param successCallback Invoke this if key name retrieval is successful, passing in the key name.\n         * @param failureCallback Invoke this if key name retrieval was unsuccessful.\n         * @private\n         */\n        _handleKeynameFunction: function(keynameFunc, id, successCallback, failureCallback) {\n            var self = this,\n                onSuccess = function(keyname) {\n                    successCallback(keyname);\n                },\n                onFailure = function(reason) {\n                    self.log(qq.format(\"Failed to retrieve key name for {}.  Reason: {}\", id, reason || \"null\"), \"error\");\n                    failureCallback(reason);\n                },\n                keyname = keynameFunc.call(this, id);\n\n            if (qq.isGenericPromise(keyname)) {\n                keyname.then(onSuccess, onFailure);\n            }\n            /*jshint -W116*/\n            else if (keyname == null) {\n                onFailure();\n            }\n            else {\n                onSuccess(keyname);\n            }\n        },\n\n        _getEndpointSpecificParams: function(id, response, maybeXhr) {\n            var params = {\n                key: this.getKey(id),\n                uuid: this.getUuid(id),\n                name: this.getName(id),\n                bucket: this.getBucket(id)\n            };\n\n            if (maybeXhr && maybeXhr.getResponseHeader(\"ETag\")) {\n                params.etag = maybeXhr.getResponseHeader(\"ETag\");\n            }\n            else if (response.etag) {\n                params.etag = response.etag;\n            }\n\n            return params;\n        },\n\n        // Hooks into the base internal `_onSubmitDelete` to add key and bucket params to the delete file request.\n        _onSubmitDelete: function(id, onSuccessCallback) {\n            var additionalMandatedParams = {\n                key: this.getKey(id),\n                bucket: this.getBucket(id)\n            };\n\n            return qq.FineUploaderBasic.prototype._onSubmitDelete.call(this, id, onSuccessCallback, additionalMandatedParams);\n        },\n\n        _addCannedFile: function(sessionData) {\n            var id;\n\n            /* jshint eqnull:true */\n            if (sessionData.s3Key == null) {\n                throw new qq.Error(\"Did not find s3Key property in server session response.  This is required!\");\n            }\n            else {\n                id = qq.FineUploaderBasic.prototype._addCannedFile.apply(this, arguments);\n                this._cannedKeys[id] = sessionData.s3Key;\n                this._cannedBuckets[id] = sessionData.s3Bucket;\n            }\n\n            return id;\n        }\n    });\n}());\n","/* globals qq, CryptoJS */\n\n// IE 10 does not support Uint8ClampedArray. We don't need it, but CryptoJS attempts to reference it\n// inside a conditional via an instanceof check, which breaks S3 v4 signatures for chunked uploads.\nif (!window.Uint8ClampedArray) {\n    window.Uint8ClampedArray = function() {};\n}\n/**\n * Handles signature determination for HTML Form Upload requests and Multipart Uploader requests (via the S3 REST API).\n *\n * If the S3 requests are to be signed server side, this module will send a POST request to the server in an attempt\n * to solicit signatures for various S3-related requests.  This module also parses the response and attempts\n * to determine if the effort was successful.\n *\n * If the S3 requests are to be signed client-side, without the help of a server, this module will utilize CryptoJS to\n * sign the requests directly in the browser and send them off to S3.\n *\n * @param o Options associated with all such requests\n * @returns {{getSignature: Function}} API method used to initiate the signature request.\n * @constructor\n */\nqq.s3.RequestSigner = function(o) {\n    \"use strict\";\n\n    var requester,\n        thisSignatureRequester = this,\n        pendingSignatures = {},\n        options = {\n            expectingPolicy: false,\n            method: \"POST\",\n            signatureSpec: {\n                drift: 0,\n                credentialsProvider: {},\n                endpoint: null,\n                customHeaders: {},\n                version: 2\n            },\n            maxConnections: 3,\n            endpointStore: {},\n            paramsStore: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {}\n        },\n        credentialsProvider,\n\n        generateHeaders = function(signatureConstructor, signature, promise) {\n            var headers = signatureConstructor.getHeaders();\n\n            if (options.signatureSpec.version === 4) {\n                headers.Authorization = qq.s3.util.V4_ALGORITHM_PARAM_VALUE +\n                    \" Credential=\" + options.signatureSpec.credentialsProvider.get().accessKey + \"/\" +\n                    qq.s3.util.getCredentialsDate(signatureConstructor.getRequestDate()) + \"/\" +\n                    options.signatureSpec.region + \"/\" +\n                    \"s3/aws4_request,\" +\n                    \"SignedHeaders=\" + signatureConstructor.getSignedHeaders() + \",\" +\n                    \"Signature=\" + signature;\n            }\n            else {\n                headers.Authorization = \"AWS \" + options.signatureSpec.credentialsProvider.get().accessKey + \":\" + signature;\n            }\n\n            promise.success(headers, signatureConstructor.getEndOfUrl());\n        },\n\n        v2 = {\n            getStringToSign: function(signatureSpec) {\n                return qq.format(\"{}\\n{}\\n{}\\n\\n{}/{}/{}\",\n                    signatureSpec.method,\n                    signatureSpec.contentMd5 || \"\",\n                    signatureSpec.contentType || \"\",\n                    signatureSpec.headersStr || \"\\n\",\n                    signatureSpec.bucket,\n                    signatureSpec.endOfUrl);\n            },\n\n            signApiRequest: function(signatureConstructor, headersStr, signatureEffort) {\n                var headersWordArray = qq.CryptoJS.enc.Utf8.parse(headersStr),\n                    headersHmacSha1 = qq.CryptoJS.HmacSHA1(headersWordArray, credentialsProvider.get().secretKey),\n                    headersHmacSha1Base64 = qq.CryptoJS.enc.Base64.stringify(headersHmacSha1);\n\n                generateHeaders(signatureConstructor, headersHmacSha1Base64, signatureEffort);\n            },\n\n            signPolicy: function(policy, signatureEffort, updatedAccessKey, updatedSessionToken) {\n                var policyStr = JSON.stringify(policy),\n                    policyWordArray = qq.CryptoJS.enc.Utf8.parse(policyStr),\n                    base64Policy = qq.CryptoJS.enc.Base64.stringify(policyWordArray),\n                    policyHmacSha1 = qq.CryptoJS.HmacSHA1(base64Policy, credentialsProvider.get().secretKey),\n                    policyHmacSha1Base64 = qq.CryptoJS.enc.Base64.stringify(policyHmacSha1);\n\n                signatureEffort.success({\n                    policy: base64Policy,\n                    signature: policyHmacSha1Base64\n                }, updatedAccessKey, updatedSessionToken);\n            }\n        },\n\n        v4 = {\n            getCanonicalQueryString: function(endOfUri) {\n                var queryParamIdx = endOfUri.indexOf(\"?\"),\n                    canonicalQueryString = \"\",\n                    encodedQueryParams, encodedQueryParamNames, queryStrings;\n\n                if (queryParamIdx >= 0) {\n                    encodedQueryParams = {};\n                    queryStrings = endOfUri.substr(queryParamIdx + 1).split(\"&\");\n\n                    qq.each(queryStrings, function(idx, queryString) {\n                        var nameAndVal = queryString.split(\"=\"),\n                            paramVal = nameAndVal[1];\n\n                        if (paramVal == null) {\n                            paramVal = \"\";\n                        }\n\n                        encodedQueryParams[encodeURIComponent(nameAndVal[0])] = encodeURIComponent(paramVal);\n                    });\n\n                    encodedQueryParamNames = Object.keys(encodedQueryParams).sort();\n                    encodedQueryParamNames.forEach(function(encodedQueryParamName, idx) {\n                        canonicalQueryString += encodedQueryParamName + \"=\" + encodedQueryParams[encodedQueryParamName];\n                        if (idx < encodedQueryParamNames.length - 1) {\n                            canonicalQueryString += \"&\";\n                        }\n                    });\n                }\n\n                return canonicalQueryString;\n            },\n\n            getCanonicalRequest: function(signatureSpec) {\n                return qq.format(\"{}\\n{}\\n{}\\n{}\\n{}\\n{}\",\n                    signatureSpec.method,\n                    v4.getCanonicalUri(signatureSpec.endOfUrl),\n                    v4.getCanonicalQueryString(signatureSpec.endOfUrl),\n                    signatureSpec.headersStr || \"\\n\",\n                    v4.getSignedHeaders(signatureSpec.headerNames),\n                    signatureSpec.hashedContent);\n            },\n\n            getCanonicalUri: function(endOfUri) {\n                var path = endOfUri,\n                    queryParamIdx = endOfUri.indexOf(\"?\");\n\n                if (queryParamIdx > 0) {\n                    path = endOfUri.substr(0, queryParamIdx);\n                }\n                return \"/\" + path;\n            },\n\n            getEncodedHashedPayload: function(body) {\n                var promise = new qq.Promise(),\n                    reader;\n\n                if (qq.isBlob(body)) {\n                    // TODO hash blob in webworker if this becomes a notable perf issue\n                    reader = new FileReader();\n                    reader.onloadend = function(e) {\n                        if (e.target.readyState === FileReader.DONE) {\n                            if (e.target.error) {\n                                promise.failure(e.target.error);\n                            }\n                            else {\n                                var wordArray = qq.CryptoJS.lib.WordArray.create(e.target.result);\n                                promise.success(qq.CryptoJS.SHA256(wordArray).toString());\n                            }\n                        }\n                    };\n                    reader.readAsArrayBuffer(body);\n                }\n                else {\n                    body = body || \"\";\n                    promise.success(qq.CryptoJS.SHA256(body).toString());\n                }\n\n                return promise;\n            },\n\n            getScope: function(date, region) {\n                return qq.s3.util.getCredentialsDate(date) + \"/\" +\n                    region + \"/s3/aws4_request\";\n            },\n\n            getStringToSign: function(signatureSpec) {\n                var canonicalRequest = v4.getCanonicalRequest(signatureSpec),\n                    date = qq.s3.util.getV4PolicyDate(signatureSpec.date, signatureSpec.drift),\n                    hashedRequest = qq.CryptoJS.SHA256(canonicalRequest).toString(),\n                    scope = v4.getScope(signatureSpec.date, options.signatureSpec.region),\n                    stringToSignTemplate = \"AWS4-HMAC-SHA256\\n{}\\n{}\\n{}\";\n\n                return {\n                    hashed: qq.format(stringToSignTemplate, date, scope, hashedRequest),\n                    raw: qq.format(stringToSignTemplate, date, scope, canonicalRequest)\n                };\n            },\n\n            getSignedHeaders: function(headerNames) {\n                var signedHeaders = \"\";\n\n                headerNames.forEach(function(headerName, idx) {\n                    signedHeaders += headerName.toLowerCase();\n\n                    if (idx < headerNames.length - 1) {\n                        signedHeaders += \";\";\n                    }\n                });\n\n                return signedHeaders;\n            },\n\n            signApiRequest: function(signatureConstructor, headersStr, signatureEffort) {\n                var secretKey = credentialsProvider.get().secretKey,\n                    headersPattern = /.+\\n.+\\n(\\d+)\\/(.+)\\/s3\\/.+\\n(.+)/,\n                    matches = headersPattern.exec(headersStr),\n                    dateKey, dateRegionKey, dateRegionServiceKey, signingKey;\n\n                dateKey = qq.CryptoJS.HmacSHA256(matches[1], \"AWS4\" + secretKey);\n                dateRegionKey = qq.CryptoJS.HmacSHA256(matches[2], dateKey);\n                dateRegionServiceKey = qq.CryptoJS.HmacSHA256(\"s3\", dateRegionKey);\n                signingKey = qq.CryptoJS.HmacSHA256(\"aws4_request\", dateRegionServiceKey);\n\n                generateHeaders(signatureConstructor, qq.CryptoJS.HmacSHA256(headersStr, signingKey), signatureEffort);\n            },\n\n            signPolicy: function(policy, signatureEffort, updatedAccessKey, updatedSessionToken) {\n                var policyStr = JSON.stringify(policy),\n                    policyWordArray = qq.CryptoJS.enc.Utf8.parse(policyStr),\n                    base64Policy = qq.CryptoJS.enc.Base64.stringify(policyWordArray),\n                    secretKey = credentialsProvider.get().secretKey,\n                    credentialPattern = /.+\\/(.+)\\/(.+)\\/s3\\/aws4_request/,\n                    credentialCondition = (function() {\n                        var credential = null;\n                        qq.each(policy.conditions, function(key, condition) {\n                            var val = condition[\"x-amz-credential\"];\n                            if (val) {\n                                credential = val;\n                                return false;\n                            }\n                        });\n                        return credential;\n                    }()),\n                    matches, dateKey, dateRegionKey, dateRegionServiceKey, signingKey;\n\n                matches = credentialPattern.exec(credentialCondition);\n                dateKey = qq.CryptoJS.HmacSHA256(matches[1], \"AWS4\" + secretKey);\n                dateRegionKey = qq.CryptoJS.HmacSHA256(matches[2], dateKey);\n                dateRegionServiceKey = qq.CryptoJS.HmacSHA256(\"s3\", dateRegionKey);\n                signingKey = qq.CryptoJS.HmacSHA256(\"aws4_request\", dateRegionServiceKey);\n\n                signatureEffort.success({\n                    policy: base64Policy,\n                    signature: qq.CryptoJS.HmacSHA256(base64Policy, signingKey).toString()\n                }, updatedAccessKey, updatedSessionToken);\n            }\n        };\n\n    qq.extend(options, o, true);\n    credentialsProvider = options.signatureSpec.credentialsProvider;\n\n    function handleSignatureReceived(id, xhrOrXdr, isError) {\n        var responseJson = xhrOrXdr.responseText,\n            pendingSignatureData = pendingSignatures[id],\n            promise = pendingSignatureData.promise,\n            signatureConstructor = pendingSignatureData.signatureConstructor,\n            errorMessage, response;\n\n        delete pendingSignatures[id];\n\n        // Attempt to parse what we would expect to be a JSON response\n        if (responseJson) {\n            try {\n                response = qq.parseJson(responseJson);\n            }\n            catch (error) {\n                options.log(\"Error attempting to parse signature response: \" + error, \"error\");\n            }\n        }\n\n        // If the response is parsable and contains an `error` property, use it as the error message\n        if (response && response.error) {\n            isError = true;\n            errorMessage = response.error;\n        }\n        // If we have received a parsable response, and it has an `invalid` property,\n        // the policy document or request headers may have been tampered with client-side.\n        else if (response && response.invalid) {\n            isError = true;\n            errorMessage = \"Invalid policy document or request headers!\";\n        }\n        // Make sure the response contains policy & signature properties\n        else if (response) {\n            if (options.expectingPolicy && !response.policy) {\n                isError = true;\n                errorMessage = \"Response does not include the base64 encoded policy!\";\n            }\n            else if (!response.signature) {\n                isError = true;\n                errorMessage = \"Response does not include the signature!\";\n            }\n        }\n        // Something unknown went wrong\n        else {\n            isError = true;\n            errorMessage = \"Received an empty or invalid response from the server!\";\n        }\n\n        if (isError) {\n            if (errorMessage) {\n                options.log(errorMessage, \"error\");\n            }\n\n            promise.failure(errorMessage);\n        }\n        else if (signatureConstructor) {\n            generateHeaders(signatureConstructor, response.signature, promise);\n        }\n        else {\n            promise.success(response);\n        }\n    }\n\n    function getStringToSignArtifacts(id, version, requestInfo) {\n        var promise = new qq.Promise(),\n            method = \"POST\",\n            headerNames = [],\n            headersStr = \"\",\n            now = new Date(),\n            endOfUrl, signatureSpec, toSign,\n\n            generateStringToSign = function(requestInfo) {\n                var contentMd5,\n                    headerIndexesToRemove = [];\n\n                qq.each(requestInfo.headers, function(name) {\n                    headerNames.push(name);\n                });\n                headerNames.sort();\n\n                qq.each(headerNames, function(idx, headerName) {\n                    if (qq.indexOf(qq.s3.util.UNSIGNABLE_REST_HEADER_NAMES, headerName) < 0) {\n                        headersStr += headerName.toLowerCase() + \":\" + requestInfo.headers[headerName].trim() + \"\\n\";\n                    }\n                    else if (headerName === \"Content-MD5\") {\n                        contentMd5 = requestInfo.headers[headerName];\n                    }\n                    else {\n                        headerIndexesToRemove.unshift(idx);\n                    }\n                });\n\n                qq.each(headerIndexesToRemove, function(idx, headerIdx) {\n                    headerNames.splice(headerIdx, 1);\n                });\n\n                signatureSpec = {\n                    bucket: requestInfo.bucket,\n                    contentMd5: contentMd5,\n                    contentType: requestInfo.contentType,\n                    date: now,\n                    drift: options.signatureSpec.drift,\n                    endOfUrl: endOfUrl,\n                    hashedContent: requestInfo.hashedContent,\n                    headerNames: headerNames,\n                    headersStr: headersStr,\n                    method: method\n                };\n\n                toSign = version === 2 ? v2.getStringToSign(signatureSpec) : v4.getStringToSign(signatureSpec);\n\n                return {\n                    date: now,\n                    endOfUrl: endOfUrl,\n                    signedHeaders: version === 4 ? v4.getSignedHeaders(signatureSpec.headerNames) : null,\n                    toSign: version === 4 ? toSign.hashed : toSign,\n                    toSignRaw: version === 4 ? toSign.raw : toSign\n                };\n            };\n\n        /*jshint indent:false */\n        switch (requestInfo.type) {\n            case thisSignatureRequester.REQUEST_TYPE.MULTIPART_ABORT:\n                method = \"DELETE\";\n                endOfUrl = qq.format(\"uploadId={}\", requestInfo.uploadId);\n                break;\n            case thisSignatureRequester.REQUEST_TYPE.MULTIPART_INITIATE:\n                endOfUrl = \"uploads\";\n                break;\n            case thisSignatureRequester.REQUEST_TYPE.MULTIPART_COMPLETE:\n                endOfUrl = qq.format(\"uploadId={}\", requestInfo.uploadId);\n                break;\n            case thisSignatureRequester.REQUEST_TYPE.MULTIPART_UPLOAD:\n                method = \"PUT\";\n                endOfUrl = qq.format(\"partNumber={}&uploadId={}\", requestInfo.partNum, requestInfo.uploadId);\n                break;\n        }\n\n        endOfUrl = requestInfo.key + \"?\" + endOfUrl;\n\n        if (version === 4) {\n            v4.getEncodedHashedPayload(requestInfo.content).then(function(hashedContent) {\n                requestInfo.headers[\"x-amz-content-sha256\"] = hashedContent;\n                requestInfo.headers.Host = requestInfo.host;\n                requestInfo.headers[\"x-amz-date\"] = qq.s3.util.getV4PolicyDate(now, options.signatureSpec.drift);\n                requestInfo.hashedContent = hashedContent;\n\n                promise.success(generateStringToSign(requestInfo));\n            }, function (err) {\n                promise.failure(err);\n            });\n        }\n        else {\n            promise.success(generateStringToSign(requestInfo));\n        }\n\n        return promise;\n    }\n\n    function determineSignatureClientSide(id, toBeSigned, signatureEffort, updatedAccessKey, updatedSessionToken) {\n        var updatedHeaders;\n\n        // REST API request\n        if (toBeSigned.signatureConstructor) {\n            if (updatedSessionToken) {\n                updatedHeaders = toBeSigned.signatureConstructor.getHeaders();\n                updatedHeaders[qq.s3.util.SESSION_TOKEN_PARAM_NAME] = updatedSessionToken;\n                toBeSigned.signatureConstructor.withHeaders(updatedHeaders);\n            }\n\n            toBeSigned.signatureConstructor.getToSign(id).then(function(signatureArtifacts) {\n                signApiRequest(toBeSigned.signatureConstructor, signatureArtifacts.stringToSign, signatureEffort);\n            }, function (err) {\n                signatureEffort.failure(err);\n            });\n        }\n        // Form upload (w/ policy document)\n        else {\n            updatedSessionToken && qq.s3.util.refreshPolicyCredentials(toBeSigned, updatedSessionToken);\n            signPolicy(toBeSigned, signatureEffort, updatedAccessKey, updatedSessionToken);\n        }\n    }\n\n    function signPolicy(policy, signatureEffort, updatedAccessKey, updatedSessionToken) {\n        if (options.signatureSpec.version === 4) {\n            v4.signPolicy(policy, signatureEffort, updatedAccessKey, updatedSessionToken);\n        }\n        else {\n            v2.signPolicy(policy, signatureEffort, updatedAccessKey, updatedSessionToken);\n        }\n    }\n\n    function signApiRequest(signatureConstructor, headersStr, signatureEffort) {\n        if (options.signatureSpec.version === 4) {\n            v4.signApiRequest(signatureConstructor, headersStr, signatureEffort);\n        }\n        else {\n            v2.signApiRequest(signatureConstructor, headersStr, signatureEffort);\n        }\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        method: options.method,\n        contentType: \"application/json; charset=utf-8\",\n        endpointStore: {\n            get: function() {\n                return options.signatureSpec.endpoint;\n            }\n        },\n        paramsStore: options.paramsStore,\n        maxConnections: options.maxConnections,\n        customHeaders: options.signatureSpec.customHeaders,\n        log: options.log,\n        onComplete: handleSignatureReceived,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        /**\n         * On success, an object containing the parsed JSON response will be passed into the success handler if the\n         * request succeeds.  Otherwise an error message will be passed into the failure method.\n         *\n         * @param id File ID.\n         * @param toBeSigned an Object that holds the item(s) to be signed\n         * @returns {qq.Promise} A promise that is fulfilled when the response has been received.\n         */\n        getSignature: function(id, toBeSigned) {\n            var params = toBeSigned,\n                signatureConstructor = toBeSigned.signatureConstructor,\n                signatureEffort = new qq.Promise(),\n                queryParams;\n\n            if (options.signatureSpec.version === 4) {\n                queryParams = {v4: true};\n            }\n\n            if (credentialsProvider.get().secretKey && qq.CryptoJS) {\n                if (credentialsProvider.get().expiration.getTime() > Date.now()) {\n                    determineSignatureClientSide(id, toBeSigned, signatureEffort);\n                }\n                // If credentials are expired, ask for new ones before attempting to sign request\n                else {\n                    credentialsProvider.onExpired().then(function() {\n                        determineSignatureClientSide(id, toBeSigned,\n                            signatureEffort,\n                            credentialsProvider.get().accessKey,\n                            credentialsProvider.get().sessionToken);\n                    }, function(errorMsg) {\n                        options.log(\"Attempt to update expired credentials apparently failed! Unable to sign request.  \", \"error\");\n                        signatureEffort.failure(\"Unable to sign request - expired credentials.\");\n                    });\n                }\n            }\n            else {\n                options.log(\"Submitting S3 signature request for \" + id);\n\n                if (signatureConstructor) {\n                    signatureConstructor.getToSign(id).then(function(signatureArtifacts) {\n                        params = {headers: signatureArtifacts.stringToSignRaw};\n                        requester.initTransport(id)\n                            .withParams(params)\n                            .withQueryParams(queryParams)\n                            .send();\n                    }, function (err) {\n                        options.log(\"Failed to construct signature. \", \"error\");\n                        signatureEffort.failure(\"Failed to construct signature.\");\n                    });\n                }\n                else {\n                    requester.initTransport(id)\n                        .withParams(params)\n                        .withQueryParams(queryParams)\n                        .send();\n                }\n\n                pendingSignatures[id] = {\n                    promise: signatureEffort,\n                    signatureConstructor: signatureConstructor\n                };\n            }\n\n            return signatureEffort;\n        },\n\n        constructStringToSign: function(type, bucket, host, key) {\n            var headers = {},\n                uploadId, content, contentType, partNum, artifacts;\n\n            return {\n                withHeaders: function(theHeaders) {\n                    headers = theHeaders;\n                    return this;\n                },\n\n                withUploadId: function(theUploadId) {\n                    uploadId = theUploadId;\n                    return this;\n                },\n\n                withContent: function(theContent) {\n                    content = theContent;\n                    return this;\n                },\n\n                withContentType: function(theContentType) {\n                    contentType = theContentType;\n                    return this;\n                },\n\n                withPartNum: function(thePartNum) {\n                    partNum = thePartNum;\n                    return this;\n                },\n\n                getToSign: function(id) {\n                    var sessionToken = credentialsProvider.get().sessionToken,\n                        promise = new qq.Promise(),\n                        adjustedDate = new Date(Date.now() + options.signatureSpec.drift);\n\n                    headers[\"x-amz-date\"] = adjustedDate.toUTCString();\n\n                    if (sessionToken) {\n                        headers[qq.s3.util.SESSION_TOKEN_PARAM_NAME] = sessionToken;\n                    }\n\n                    getStringToSignArtifacts(id, options.signatureSpec.version, {\n                        bucket: bucket,\n                        content: content,\n                        contentType: contentType,\n                        headers: headers,\n                        host: host,\n                        key: key,\n                        partNum: partNum,\n                        type: type,\n                        uploadId: uploadId\n                    }).then(function(_artifacts_) {\n                        artifacts = _artifacts_;\n                        promise.success({\n                            headers: (function() {\n                                if (contentType) {\n                                    headers[\"Content-Type\"] = contentType;\n                                }\n\n                                delete headers.Host; // we don't want this to be set on the XHR-initiated request\n                                return headers;\n                            }()),\n                            date: artifacts.date,\n                            endOfUrl: artifacts.endOfUrl,\n                            signedHeaders: artifacts.signedHeaders,\n                            stringToSign: artifacts.toSign,\n                            stringToSignRaw: artifacts.toSignRaw\n                        });\n                    }, function (err) {\n                        promise.failure(err);\n                    });\n\n                    return promise;\n                },\n\n                getHeaders: function() {\n                    return qq.extend({}, headers);\n                },\n\n                getEndOfUrl: function() {\n                    return artifacts && artifacts.endOfUrl;\n                },\n\n                getRequestDate: function() {\n                    return artifacts && artifacts.date;\n                },\n\n                getSignedHeaders: function() {\n                    return artifacts && artifacts.signedHeaders;\n                }\n            };\n        }\n    });\n};\n\nqq.s3.RequestSigner.prototype.REQUEST_TYPE = {\n    MULTIPART_INITIATE: \"multipart_initiate\",\n    MULTIPART_COMPLETE: \"multipart_complete\",\n    MULTIPART_ABORT: \"multipart_abort\",\n    MULTIPART_UPLOAD: \"multipart_upload\"\n};\n","/*globals qq, XMLHttpRequest*/\n/**\n * Sends a POST request to the server to notify it of a successful upload to an endpoint.  The server is expected to indicate success\n * or failure via the response status.  Specific information about the failure can be passed from the server via an `error`\n * property (by default) in an \"application/json\" response.\n *\n * @param o Options associated with all requests.\n * @constructor\n */\nqq.UploadSuccessAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        pendingRequests = [],\n        options = {\n            method: \"POST\",\n            endpoint: null,\n            maxConnections: 3,\n            customHeaders: {},\n            paramsStore: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {}\n        };\n\n    qq.extend(options, o);\n\n    function handleSuccessResponse(id, xhrOrXdr, isError) {\n        var promise = pendingRequests[id],\n            responseJson = xhrOrXdr.responseText,\n            successIndicator = {success: true},\n            failureIndicator = {success: false},\n            parsedResponse;\n\n        delete pendingRequests[id];\n\n        options.log(qq.format(\"Received the following response body to an upload success request for id {}: {}\", id, responseJson));\n\n        try {\n            parsedResponse = qq.parseJson(responseJson);\n\n            // If this is a cross-origin request, the server may return a 200 response w/ error or success properties\n            // in order to ensure any specific error message is picked up by Fine Uploader for all browsers,\n            // since XDomainRequest (used in IE9 and IE8) doesn't give you access to the\n            // response body for an \"error\" response.\n            if (isError || (parsedResponse && (parsedResponse.error || parsedResponse.success === false))) {\n                options.log(\"Upload success request was rejected by the server.\", \"error\");\n                promise.failure(qq.extend(parsedResponse, failureIndicator));\n            }\n            else {\n                options.log(\"Upload success was acknowledged by the server.\");\n                promise.success(qq.extend(parsedResponse, successIndicator));\n            }\n        }\n        catch (error) {\n            // This will be executed if a JSON response is not present.  This is not mandatory, so account for this properly.\n            if (isError) {\n                options.log(qq.format(\"Your server indicated failure in its upload success request response for id {}!\", id), \"error\");\n                promise.failure(failureIndicator);\n            }\n            else {\n                options.log(\"Upload success was acknowledged by the server.\");\n                promise.success(successIndicator);\n            }\n        }\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        method: options.method,\n        endpointStore: {\n            get: function() {\n                return options.endpoint;\n            }\n        },\n        paramsStore: options.paramsStore,\n        maxConnections: options.maxConnections,\n        customHeaders: options.customHeaders,\n        log: options.log,\n        onComplete: handleSuccessResponse,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        /**\n         * Sends a request to the server, notifying it that a recently submitted file was successfully sent.\n         *\n         * @param id ID of the associated file\n         * @param spec `Object` with the properties that correspond to important values that we want to\n         * send to the server with this request.\n         * @returns {qq.Promise} A promise to be fulfilled when the response has been received and parsed.  The parsed\n         * payload of the response will be passed into the `failure` or `success` promise method.\n         */\n        sendSuccessRequest: function(id, spec) {\n            var promise = new qq.Promise();\n\n            options.log(\"Submitting upload success request/notification for \" + id);\n\n            requester.initTransport(id)\n                .withParams(spec)\n                .send();\n\n            pendingRequests[id] = promise;\n\n            return promise;\n        }\n    });\n};\n","/*globals qq*/\n/**\n * Ajax requester used to send an [\"Initiate Multipart Upload\"](http://docs.aws.amazon.com/AmazonS3/latest/API/mpUploadInitiate.html)\n * request to S3 via the REST API.\n *\n * @param o Options from the caller - will override the defaults.\n * @constructor\n */\nqq.s3.InitiateMultipartAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        pendingInitiateRequests = {},\n        options = {\n            filenameParam: \"qqfilename\",\n            method: \"POST\",\n            endpointStore: null,\n            paramsStore: null,\n            signatureSpec: null,\n            aclStore: null,\n            reducedRedundancy: false,\n            serverSideEncryption: false,\n            maxConnections: 3,\n            getContentType: function(id) {},\n            getBucket: function(id) {},\n            getHost: function(id) {},\n            getKey: function(id) {},\n            getName: function(id) {},\n            log: function(str, level) {}\n        },\n        getSignatureAjaxRequester;\n\n    qq.extend(options, o);\n\n    getSignatureAjaxRequester = new qq.s3.RequestSigner({\n        endpointStore: options.endpointStore,\n        signatureSpec: options.signatureSpec,\n        cors: options.cors,\n        log: options.log\n    });\n\n    /**\n     * Determine all headers for the \"Initiate MPU\" request, including the \"Authorization\" header, which must be determined\n     * by the local server.  This is a promissory function.  If the server responds with a signature, the headers\n     * (including the Authorization header) will be passed into the success method of the promise.  Otherwise, the failure\n     * method on the promise will be called.\n     *\n     * @param id Associated file ID\n     * @returns {qq.Promise}\n     */\n    function getHeaders(id) {\n        var bucket = options.getBucket(id),\n            host = options.getHost(id),\n            headers = {},\n            promise = new qq.Promise(),\n            key = options.getKey(id),\n            signatureConstructor;\n\n        headers[\"x-amz-acl\"] = options.aclStore.get(id);\n\n        if (options.reducedRedundancy) {\n            headers[qq.s3.util.REDUCED_REDUNDANCY_PARAM_NAME] = qq.s3.util.REDUCED_REDUNDANCY_PARAM_VALUE;\n        }\n\n        if (options.serverSideEncryption) {\n            headers[qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_NAME] = qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_VALUE;\n        }\n\n        headers[qq.s3.util.AWS_PARAM_PREFIX + options.filenameParam] = encodeURIComponent(options.getName(id));\n\n        qq.each(options.paramsStore.get(id), function(name, val) {\n            if (qq.indexOf(qq.s3.util.UNPREFIXED_PARAM_NAMES, name) >= 0) {\n                headers[name] = val;\n            }\n            else {\n                headers[qq.s3.util.AWS_PARAM_PREFIX + name] = encodeURIComponent(val);\n            }\n        });\n\n        signatureConstructor = getSignatureAjaxRequester.constructStringToSign\n            (getSignatureAjaxRequester.REQUEST_TYPE.MULTIPART_INITIATE, bucket, host, key)\n            .withContentType(options.getContentType(id))\n            .withHeaders(headers);\n\n        // Ask the local server to sign the request.  Use this signature to form the Authorization header.\n        getSignatureAjaxRequester.getSignature(id, {signatureConstructor: signatureConstructor}).then(promise.success, promise.failure);\n\n        return promise;\n    }\n\n    /**\n     * Called by the base ajax requester when the response has been received.  We definitively determine here if the\n     * \"Initiate MPU\" request has been a success or not.\n     *\n     * @param id ID associated with the file.\n     * @param xhr `XMLHttpRequest` object containing the response, among other things.\n     * @param isError A boolean indicating success or failure according to the base ajax requester (primarily based on status code).\n     */\n    function handleInitiateRequestComplete(id, xhr, isError) {\n        var promise = pendingInitiateRequests[id],\n            domParser = new DOMParser(),\n            responseDoc = domParser.parseFromString(xhr.responseText, \"application/xml\"),\n            uploadIdElements, messageElements, uploadId, errorMessage, status;\n\n        delete pendingInitiateRequests[id];\n\n        // The base ajax requester may declare the request to be a failure based on status code.\n        if (isError) {\n            status = xhr.status;\n\n            messageElements = responseDoc.getElementsByTagName(\"Message\");\n            if (messageElements.length > 0) {\n                errorMessage = messageElements[0].textContent;\n            }\n        }\n        // If the base ajax requester has not declared this a failure, make sure we can retrieve the uploadId from the response.\n        else {\n            uploadIdElements = responseDoc.getElementsByTagName(\"UploadId\");\n            if (uploadIdElements.length > 0) {\n                uploadId = uploadIdElements[0].textContent;\n            }\n            else {\n                errorMessage = \"Upload ID missing from request\";\n            }\n        }\n\n        // Either fail the promise (passing a descriptive error message) or declare it a success (passing the upload ID)\n        if (uploadId === undefined) {\n            if (errorMessage) {\n                options.log(qq.format(\"Specific problem detected initiating multipart upload request for {}: '{}'.\", id, errorMessage), \"error\");\n            }\n            else {\n                options.log(qq.format(\"Unexplained error with initiate multipart upload request for {}.  Status code {}.\", id, status), \"error\");\n            }\n\n            promise.failure(\"Problem initiating upload request.\", xhr);\n        }\n        else {\n            options.log(qq.format(\"Initiate multipart upload request successful for {}.  Upload ID is {}\", id, uploadId));\n            promise.success(uploadId, xhr);\n        }\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        method: options.method,\n        contentType: null,\n        endpointStore: options.endpointStore,\n        maxConnections: options.maxConnections,\n        allowXRequestedWithAndCacheControl: false, //These headers are not necessary & would break some installations if added\n        log: options.log,\n        onComplete: handleInitiateRequestComplete,\n        successfulResponseCodes: {\n            POST: [200]\n        }\n    }));\n\n    qq.extend(this, {\n        /**\n         * Sends the \"Initiate MPU\" request to AWS via the REST API.  First, though, we must get a signature from the\n         * local server for the request.  If all is successful, the uploadId from AWS will be passed into the promise's\n         * success handler. Otherwise, an error message will ultimately be passed into the failure method.\n         *\n         * @param id The ID associated with the file\n         * @returns {qq.Promise}\n         */\n        send: function(id) {\n            var promise = new qq.Promise();\n\n            getHeaders(id).then(function(headers, endOfUrl) {\n                options.log(\"Submitting S3 initiate multipart upload request for \" + id);\n\n                pendingInitiateRequests[id] = promise;\n                requester.initTransport(id)\n                    .withPath(endOfUrl)\n                    .withHeaders(headers)\n                    .send();\n            }, promise.failure);\n\n            return promise;\n        }\n    });\n};\n","/*globals qq*/\n/**\n * Ajax requester used to send an [\"Complete Multipart Upload\"](http://docs.aws.amazon.com/AmazonS3/latest/API/mpUploadComplete.html)\n * request to S3 via the REST API.\n *\n * @param o Options passed by the creator, to overwrite any default option values.\n * @constructor\n */\nqq.s3.CompleteMultipartAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        pendingCompleteRequests = {},\n        options = {\n            method: \"POST\",\n            contentType: \"text/xml\",\n            endpointStore: null,\n            signatureSpec: null,\n            maxConnections: 3,\n            getBucket: function(id) {},\n            getHost: function(id) {},\n            getKey: function(id) {},\n            log: function(str, level) {}\n        },\n        getSignatureAjaxRequester;\n\n    qq.extend(options, o);\n\n    // Transport for requesting signatures (for the \"Complete\" requests) from the local server\n    getSignatureAjaxRequester = new qq.s3.RequestSigner({\n        endpointStore: options.endpointStore,\n        signatureSpec: options.signatureSpec,\n        cors: options.cors,\n        log: options.log\n    });\n\n    /**\n     * Attach all required headers (including Authorization) to the \"Complete\" request.  This is a promissory function\n     * that will fulfill the associated promise once all headers have been attached or when an error has occurred that\n     * prevents headers from being attached.\n     *\n     * @returns {qq.Promise}\n     */\n    function getHeaders(id, uploadId, body) {\n        var headers = {},\n            promise = new qq.Promise(),\n            bucket = options.getBucket(id),\n            host = options.getHost(id),\n            signatureConstructor = getSignatureAjaxRequester.constructStringToSign\n                (getSignatureAjaxRequester.REQUEST_TYPE.MULTIPART_COMPLETE, bucket, host, options.getKey(id))\n                .withUploadId(uploadId)\n                .withContent(body)\n                .withContentType(\"application/xml; charset=UTF-8\");\n\n        // Ask the local server to sign the request.  Use this signature to form the Authorization header.\n        getSignatureAjaxRequester.getSignature(id, {signatureConstructor: signatureConstructor}).then(promise.success, promise.failure);\n\n        return promise;\n    }\n\n    /**\n     * Called by the base ajax requester when the response has been received.  We definitively determine here if the\n     * \"Complete MPU\" request has been a success or not.\n     *\n     * @param id ID associated with the file.\n     * @param xhr `XMLHttpRequest` object containing the response, among other things.\n     * @param isError A boolean indicating success or failure according to the base ajax requester (primarily based on status code).\n     */\n    function handleCompleteRequestComplete(id, xhr, isError) {\n        var promise = pendingCompleteRequests[id],\n            domParser = new DOMParser(),\n            bucket = options.getBucket(id),\n            key = options.getKey(id),\n            responseDoc = domParser.parseFromString(xhr.responseText, \"application/xml\"),\n            bucketEls = responseDoc.getElementsByTagName(\"Bucket\"),\n            keyEls = responseDoc.getElementsByTagName(\"Key\");\n\n        delete pendingCompleteRequests[id];\n\n        options.log(qq.format(\"Complete response status {}, body = {}\", xhr.status, xhr.responseText));\n\n        // If the base requester has determine this a failure, give up.\n        if (isError) {\n            options.log(qq.format(\"Complete Multipart Upload request for {} failed with status {}.\", id, xhr.status), \"error\");\n        }\n        else {\n            // Make sure the correct bucket and key has been specified in the XML response from AWS.\n            if (bucketEls.length && keyEls.length) {\n                if (bucketEls[0].textContent !== bucket) {\n                    isError = true;\n                    options.log(qq.format(\"Wrong bucket in response to Complete Multipart Upload request for {}.\", id), \"error\");\n                }\n\n                // TODO Compare key name from response w/ expected key name if AWS ever fixes the encoding of key names in this response.\n            }\n            else {\n                isError = true;\n                options.log(qq.format(\"Missing bucket and/or key in response to Complete Multipart Upload request for {}.\", id), \"error\");\n            }\n        }\n\n        if (isError) {\n            promise.failure(\"Problem combining the file parts!\", xhr);\n        }\n        else {\n            promise.success({}, xhr);\n        }\n    }\n\n    /**\n     * @param etagEntries Array of objects containing `etag` values and their associated `part` numbers.\n     * @returns {string} XML string containing the body to send with the \"Complete\" request\n     */\n    function getCompleteRequestBody(etagEntries) {\n        var doc = document.implementation.createDocument(null, \"CompleteMultipartUpload\", null);\n\n        // The entries MUST be sorted by part number, per the AWS API spec.\n        etagEntries.sort(function(a, b) {\n            return a.part - b.part;\n        });\n\n        // Construct an XML document for each pair of etag/part values that correspond to part uploads.\n        qq.each(etagEntries, function(idx, etagEntry) {\n            var part = etagEntry.part,\n                etag = etagEntry.etag,\n                partEl = doc.createElement(\"Part\"),\n                partNumEl = doc.createElement(\"PartNumber\"),\n                partNumTextEl = doc.createTextNode(part),\n                etagTextEl = doc.createTextNode(etag),\n                etagEl = doc.createElement(\"ETag\");\n\n            etagEl.appendChild(etagTextEl);\n            partNumEl.appendChild(partNumTextEl);\n            partEl.appendChild(partNumEl);\n            partEl.appendChild(etagEl);\n            qq(doc).children()[0].appendChild(partEl);\n        });\n\n        // Turn the resulting XML document into a string fit for transport.\n        return new XMLSerializer().serializeToString(doc);\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        method: options.method,\n        contentType: \"application/xml; charset=UTF-8\",\n        endpointStore: options.endpointStore,\n        maxConnections: options.maxConnections,\n        allowXRequestedWithAndCacheControl: false, //These headers are not necessary & would break some installations if added\n        log: options.log,\n        onComplete: handleCompleteRequestComplete,\n        successfulResponseCodes: {\n            POST: [200]\n        }\n    }));\n\n    qq.extend(this, {\n        /**\n         * Sends the \"Complete\" request and fulfills the returned promise when the success of this request is known.\n         *\n         * @param id ID associated with the file.\n         * @param uploadId AWS uploadId for this file\n         * @param etagEntries Array of objects containing `etag` values and their associated `part` numbers.\n         * @returns {qq.Promise}\n         */\n        send: function(id, uploadId, etagEntries) {\n            var promise = new qq.Promise(),\n                body = getCompleteRequestBody(etagEntries);\n\n            getHeaders(id, uploadId, body).then(function(headers, endOfUrl) {\n                options.log(\"Submitting S3 complete multipart upload request for \" + id);\n\n                pendingCompleteRequests[id] = promise;\n                delete headers[\"Content-Type\"];\n\n                requester.initTransport(id)\n                    .withPath(endOfUrl)\n                    .withHeaders(headers)\n                    .withPayload(body)\n                    .send();\n            }, promise.failure);\n\n            return promise;\n        }\n    });\n};\n","/*globals qq */\n/**\n * Ajax requester used to send an [\"Abort Multipart Upload\"](http://docs.aws.amazon.com/AmazonS3/latest/API/mpUploadAbort.html)\n * request to S3 via the REST API.\n\n * @param o\n * @constructor\n */\nqq.s3.AbortMultipartAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            method: \"DELETE\",\n            endpointStore: null,\n            signatureSpec: null,\n            maxConnections: 3,\n            getBucket: function(id) {},\n            getHost: function(id) {},\n            getKey: function(id) {},\n            log: function(str, level) {}\n        },\n        getSignatureAjaxRequester;\n\n    qq.extend(options, o);\n\n    // Transport for requesting signatures (for the \"Complete\" requests) from the local server\n    getSignatureAjaxRequester = new qq.s3.RequestSigner({\n        endpointStore: options.endpointStore,\n        signatureSpec: options.signatureSpec,\n        cors: options.cors,\n        log: options.log\n    });\n\n    /**\n     * Attach all required headers (including Authorization) to the \"Abort\" request.  This is a promissory function\n     * that will fulfill the associated promise once all headers have been attached or when an error has occurred that\n     * prevents headers from being attached.\n     *\n     * @param id Associated file ID\n     * @param uploadId ID of the associated upload, according to AWS\n     * @returns {qq.Promise}\n     */\n    function getHeaders(id, uploadId) {\n        var headers = {},\n            promise = new qq.Promise(),\n            bucket = options.getBucket(id),\n            host = options.getHost(id),\n            signatureConstructor = getSignatureAjaxRequester.constructStringToSign\n                (getSignatureAjaxRequester.REQUEST_TYPE.MULTIPART_ABORT, bucket, host, options.getKey(id))\n                .withUploadId(uploadId);\n\n        // Ask the local server to sign the request.  Use this signature to form the Authorization header.\n        getSignatureAjaxRequester.getSignature(id, {signatureConstructor: signatureConstructor}).then(promise.success, promise.failure);\n\n        return promise;\n    }\n\n    /**\n     * Called by the base ajax requester when the response has been received.  We definitively determine here if the\n     * \"Abort MPU\" request has been a success or not.\n     *\n     * @param id ID associated with the file.\n     * @param xhr `XMLHttpRequest` object containing the response, among other things.\n     * @param isError A boolean indicating success or failure according to the base ajax requester (primarily based on status code).\n     */\n    function handleAbortRequestComplete(id, xhr, isError) {\n        var domParser = new DOMParser(),\n            responseDoc = domParser.parseFromString(xhr.responseText, \"application/xml\"),\n            errorEls = responseDoc.getElementsByTagName(\"Error\"),\n            awsErrorMsg;\n\n        options.log(qq.format(\"Abort response status {}, body = {}\", xhr.status, xhr.responseText));\n\n        // If the base requester has determine this a failure, give up.\n        if (isError) {\n            options.log(qq.format(\"Abort Multipart Upload request for {} failed with status {}.\", id, xhr.status), \"error\");\n        }\n        else {\n            // Make sure the correct bucket and key has been specified in the XML response from AWS.\n            if (errorEls.length) {\n                isError = true;\n                awsErrorMsg = responseDoc.getElementsByTagName(\"Message\")[0].textContent;\n                options.log(qq.format(\"Failed to Abort Multipart Upload request for {}.  Error: {}\", id, awsErrorMsg), \"error\");\n            }\n            else {\n                options.log(qq.format(\"Abort MPU request succeeded for file ID {}.\", id));\n            }\n        }\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        validMethods: [\"DELETE\"],\n        method: options.method,\n        contentType: null,\n        endpointStore: options.endpointStore,\n        maxConnections: options.maxConnections,\n        allowXRequestedWithAndCacheControl: false, //These headers are not necessary & would break some installations if added\n        log: options.log,\n        onComplete: handleAbortRequestComplete,\n        successfulResponseCodes: {\n            DELETE: [204]\n        }\n    }));\n\n    qq.extend(this, {\n        /**\n         * Sends the \"Abort\" request.\n         *\n         * @param id ID associated with the file.\n         * @param uploadId AWS uploadId for this file\n         */\n        send: function(id, uploadId) {\n            getHeaders(id, uploadId).then(function(headers, endOfUrl) {\n                options.log(\"Submitting S3 Abort multipart upload request for \" + id);\n                requester.initTransport(id)\n                    .withPath(endOfUrl)\n                    .withHeaders(headers)\n                    .send();\n            });\n        }\n    });\n};\n","/*globals qq */\n/**\n * Upload handler used by the upload to S3 module that depends on File API support, and, therefore, makes use of\n * `XMLHttpRequest` level 2 to upload `File`s and `Blob`s directly to S3 buckets via the associated AWS API.\n *\n * If chunking is supported and enabled, the S3 Multipart Upload REST API is utilized.\n *\n * @param spec Options passed from the base handler\n * @param proxy Callbacks & methods used to query for or push out data/changes\n */\nqq.s3.XhrUploadHandler = function(spec, proxy) {\n    \"use strict\";\n\n    var getName = proxy.getName,\n        log = proxy.log,\n        clockDrift = spec.clockDrift,\n        expectedStatus = 200,\n        onGetBucket = spec.getBucket,\n        onGetHost = spec.getHost,\n        onGetKeyName = spec.getKeyName,\n        filenameParam = spec.filenameParam,\n        paramsStore = spec.paramsStore,\n        endpointStore = spec.endpointStore,\n        aclStore = spec.aclStore,\n        reducedRedundancy = spec.objectProperties.reducedRedundancy,\n        region = spec.objectProperties.region,\n        serverSideEncryption = spec.objectProperties.serverSideEncryption,\n        validation = spec.validation,\n        signature = qq.extend({region: region, drift: clockDrift}, spec.signature),\n        handler = this,\n        credentialsProvider = spec.signature.credentialsProvider,\n\n        chunked = {\n            // Sends a \"Complete Multipart Upload\" request and then signals completion of the upload\n            // when the response to this request has been parsed.\n            combine: function(id) {\n                var uploadId = handler._getPersistableData(id).uploadId,\n                    etagMap = handler._getPersistableData(id).etags,\n                    result = new qq.Promise();\n\n                requesters.completeMultipart.send(id, uploadId, etagMap).then(\n                    result.success,\n\n                    function failure(reason, xhr) {\n                        result.failure(upload.done(id, xhr).response, xhr);\n                    }\n                );\n\n                return result;\n            },\n\n            // The last step in handling a chunked upload.  This is called after each chunk has been sent.\n            // The request may be successful, or not.  If it was successful, we must extract the \"ETag\" element\n            // in the XML response and store that along with the associated part number.\n            // We need these items to \"Complete\" the multipart upload after all chunks have been successfully sent.\n            done: function(id, xhr, chunkIdx) {\n                var response = upload.response.parse(id, xhr),\n                    etag;\n\n                if (response.success) {\n                    etag = xhr.getResponseHeader(\"ETag\");\n\n                    if (!handler._getPersistableData(id).etags) {\n                        handler._getPersistableData(id).etags = [];\n                    }\n                    handler._getPersistableData(id).etags.push({part: chunkIdx + 1, etag: etag});\n                }\n            },\n\n            /**\n             * Determines headers that must be attached to the chunked (Multipart Upload) request.  One of these headers is an\n             * Authorization value, which must be determined by asking the local server to sign the request first.  So, this\n             * function returns a promise.  Once all headers are determined, the `success` method of the promise is called with\n             * the headers object.  If there was some problem determining the headers, we delegate to the caller's `failure`\n             * callback.\n             *\n             * @param id File ID\n             * @param chunkIdx Index of the chunk to PUT\n             * @returns {qq.Promise}\n             */\n            initHeaders: function(id, chunkIdx, blob) {\n                var headers = {},\n                    bucket = upload.bucket.getName(id),\n                    host = upload.host.getName(id),\n                    key = upload.key.urlSafe(id),\n                    promise = new qq.Promise(),\n                    signatureConstructor = requesters.restSignature.constructStringToSign\n                        (requesters.restSignature.REQUEST_TYPE.MULTIPART_UPLOAD, bucket, host, key)\n                        .withPartNum(chunkIdx + 1)\n                        .withContent(blob)\n                        .withUploadId(handler._getPersistableData(id).uploadId);\n\n                // Ask the local server to sign the request.  Use this signature to form the Authorization header.\n                requesters.restSignature.getSignature(id + \".\" + chunkIdx, {signatureConstructor: signatureConstructor}).then(promise.success, promise.failure);\n\n                return promise;\n            },\n\n            put: function(id, chunkIdx) {\n                var xhr = handler._createXhr(id, chunkIdx),\n                    chunkData = handler._getChunkData(id, chunkIdx),\n                    domain = spec.endpointStore.get(id),\n                    promise = new qq.Promise();\n\n                // Add appropriate headers to the multipart upload request.\n                // Once these have been determined (asynchronously) attach the headers and send the chunk.\n                chunked.initHeaders(id, chunkIdx, chunkData.blob).then(function(headers, endOfUrl) {\n                    if (xhr._cancelled) {\n                        log(qq.format(\"Upload of item {}.{} cancelled. Upload will not start after successful signature request.\", id, chunkIdx));\n                        promise.failure({error: \"Chunk upload cancelled\"});\n                    }\n                    else {\n                        var url = domain + \"/\" + endOfUrl;\n                        handler._registerProgressHandler(id, chunkIdx, chunkData.size);\n                        upload.track(id, xhr, chunkIdx).then(promise.success, promise.failure);\n                        xhr.open(\"PUT\", url, true);\n\n                        var hasContentType = false;\n                        qq.each(headers, function(name, val) {\n                            if (name === \"Content-Type\") {\n                                hasContentType = true;\n                            }\n\n                            xhr.setRequestHeader(name, val);\n                        });\n\n                        // Workaround for IE Edge\n                        if (!hasContentType) {\n                            xhr.setRequestHeader(\"Content-Type\", \"\");\n                        }\n\n                        xhr.send(chunkData.blob);\n                    }\n                }, function() {\n                    promise.failure({error: \"Problem signing the chunk!\"}, xhr);\n                });\n\n                return promise;\n            },\n\n            send: function(id, chunkIdx) {\n                var promise = new qq.Promise();\n\n                chunked.setup(id).then(\n                    // The \"Initiate\" request succeeded.  We are ready to send the first chunk.\n                    function() {\n                        chunked.put(id, chunkIdx).then(promise.success, promise.failure);\n                    },\n\n                    // We were unable to initiate the chunked upload process.\n                    function(errorMessage, xhr) {\n                        promise.failure({error: errorMessage}, xhr);\n                    }\n                );\n\n                return promise;\n            },\n\n            /**\n             * Sends an \"Initiate Multipart Upload\" request to S3 via the REST API, but only if the MPU has not already been\n             * initiated.\n             *\n             * @param id Associated file ID\n             * @returns {qq.Promise} A promise that is fulfilled when the initiate request has been sent and the response has been parsed.\n             */\n            setup: function(id) {\n                var promise = new qq.Promise(),\n                    uploadId = handler._getPersistableData(id).uploadId,\n                    uploadIdPromise = new qq.Promise();\n\n                if (!uploadId) {\n                    handler._getPersistableData(id).uploadId = uploadIdPromise;\n                    requesters.initiateMultipart.send(id).then(\n                        function(uploadId) {\n                            handler._getPersistableData(id).uploadId = uploadId;\n                            uploadIdPromise.success(uploadId);\n                            promise.success(uploadId);\n                        },\n                        function(errorMsg, xhr) {\n                            handler._getPersistableData(id).uploadId = null;\n                            promise.failure(errorMsg, xhr);\n                            uploadIdPromise.failure(errorMsg, xhr);\n                        }\n                    );\n                }\n                else if (uploadId instanceof qq.Promise) {\n                    uploadId.then(function(uploadId) {\n                        promise.success(uploadId);\n                    });\n                }\n                else {\n                    promise.success(uploadId);\n                }\n\n                return promise;\n            }\n        },\n\n        requesters = {\n            abortMultipart: new qq.s3.AbortMultipartAjaxRequester({\n                endpointStore: endpointStore,\n                signatureSpec: signature,\n                cors: spec.cors,\n                log: log,\n                getBucket: function(id) {\n                    return upload.bucket.getName(id);\n                },\n                getHost: function(id) {\n                    return upload.host.getName(id);\n                },\n                getKey: function(id) {\n                    return upload.key.urlSafe(id);\n                }\n            }),\n\n            completeMultipart: new qq.s3.CompleteMultipartAjaxRequester({\n                endpointStore: endpointStore,\n                signatureSpec: signature,\n                cors: spec.cors,\n                log: log,\n                getBucket: function(id) {\n                    return upload.bucket.getName(id);\n                },\n                getHost: function(id) {\n                    return upload.host.getName(id);\n                },\n                getKey: function(id) {\n                    return upload.key.urlSafe(id);\n                }\n            }),\n\n            initiateMultipart: new qq.s3.InitiateMultipartAjaxRequester({\n                filenameParam: filenameParam,\n                endpointStore: endpointStore,\n                paramsStore: paramsStore,\n                signatureSpec: signature,\n                aclStore: aclStore,\n                reducedRedundancy: reducedRedundancy,\n                serverSideEncryption: serverSideEncryption,\n                cors: spec.cors,\n                log: log,\n                getContentType: function(id) {\n                    return handler._getMimeType(id);\n                },\n                getBucket: function(id) {\n                    return upload.bucket.getName(id);\n                },\n                getHost: function(id) {\n                    return upload.host.getName(id);\n                },\n                getKey: function(id) {\n                    return upload.key.urlSafe(id);\n                },\n                getName: function(id) {\n                    return getName(id);\n                }\n            }),\n\n            policySignature: new qq.s3.RequestSigner({\n                expectingPolicy: true,\n                signatureSpec: signature,\n                cors: spec.cors,\n                log: log\n            }),\n\n            restSignature: new qq.s3.RequestSigner({\n                endpointStore: endpointStore,\n                signatureSpec: signature,\n                cors: spec.cors,\n                log: log\n            })\n        },\n\n        simple = {\n            /**\n             * Used for simple (non-chunked) uploads to determine the parameters to send along with the request.  Part of this\n             * process involves asking the local server to sign the request, so this function returns a promise.  The promise\n             * is fulfilled when all parameters are determined, or when we determine that all parameters cannot be calculated\n             * due to some error.\n             *\n             * @param id File ID\n             * @returns {qq.Promise}\n             */\n            initParams: function(id) {\n                /*jshint -W040 */\n                var customParams = paramsStore.get(id);\n                customParams[filenameParam] = getName(id);\n\n                return qq.s3.util.generateAwsParams({\n                    endpoint: endpointStore.get(id),\n                    clockDrift: clockDrift,\n                    params: customParams,\n                    type: handler._getMimeType(id),\n                    bucket: upload.bucket.getName(id),\n                    key: handler.getThirdPartyFileId(id),\n                    accessKey: credentialsProvider.get().accessKey,\n                    sessionToken: credentialsProvider.get().sessionToken,\n                    acl: aclStore.get(id),\n                    expectedStatus: expectedStatus,\n                    minFileSize: validation.minSizeLimit,\n                    maxFileSize: validation.maxSizeLimit,\n                    reducedRedundancy: reducedRedundancy,\n                    region: region,\n                    serverSideEncryption: serverSideEncryption,\n                    signatureVersion: signature.version,\n                    log: log\n                },\n                qq.bind(requesters.policySignature.getSignature, this, id));\n            },\n\n            send: function(id) {\n                var promise = new qq.Promise(),\n                    xhr = handler._createXhr(id),\n                    fileOrBlob = handler.getFile(id);\n\n                handler._registerProgressHandler(id);\n                upload.track(id, xhr).then(promise.success, promise.failure);\n\n                // Delegate to a function the sets up the XHR request and notifies us when it is ready to be sent, along w/ the payload.\n                simple.setup(id, xhr, fileOrBlob).then(function(toSend) {\n                    log(\"Sending upload request for \" + id);\n                    xhr.send(toSend);\n                }, promise.failure);\n\n                return promise;\n            },\n\n            /**\n             * Starts the upload process by delegating to an async function that determine parameters to be attached to the\n             * request.  If all params can be determined, we are called back with the params and the caller of this function is\n             * informed by invoking the `success` method on the promise returned by this function, passing the payload of the\n             * request.  If some error occurs here, we delegate to a function that signals a failure for this upload attempt.\n             *\n             * Note that this is only used by the simple (non-chunked) upload process.\n             *\n             * @param id File ID\n             * @param xhr XMLHttpRequest to use for the upload\n             * @param fileOrBlob `File` or `Blob` to send\n             * @returns {qq.Promise}\n             */\n            setup: function(id, xhr, fileOrBlob) {\n                var formData = new FormData(),\n                    endpoint = endpointStore.get(id),\n                    url = endpoint,\n                    promise = new qq.Promise();\n\n                simple.initParams(id).then(\n                    // Success - all params determined\n                    function(awsParams) {\n                        xhr.open(\"POST\", url, true);\n\n                        qq.obj2FormData(awsParams, formData);\n\n                        // AWS requires the file field be named \"file\".\n                        formData.append(\"file\", fileOrBlob);\n\n                        promise.success(formData);\n                    },\n\n                    // Failure - we couldn't determine some params (likely the signature)\n                    function(errorMessage) {\n                        promise.failure({error: errorMessage});\n                    }\n                );\n\n                return promise;\n            }\n        },\n\n        upload = {\n            /**\n             * Note that this is called when an upload has reached a termination point,\n             * regardless of success/failure.  For example, it is called when we have\n             * encountered an error during the upload or when the file may have uploaded successfully.\n             *\n             * @param id file ID\n             */\n            bucket: {\n                promise: function(id) {\n                    var promise = new qq.Promise(),\n                        cachedBucket = handler._getFileState(id).bucket;\n\n                    if (cachedBucket) {\n                        promise.success(cachedBucket);\n                    }\n                    else {\n                        onGetBucket(id).then(function(bucket) {\n                            handler._getFileState(id).bucket = bucket;\n                            promise.success(bucket);\n                        }, promise.failure);\n                    }\n\n                    return promise;\n                },\n\n                getName: function(id) {\n                    return handler._getFileState(id).bucket;\n                }\n            },\n\n            host: {\n                promise: function(id) {\n                    var promise = new qq.Promise(),\n                        cachedHost = handler._getFileState(id).host;\n\n                    if (cachedHost) {\n                        promise.success(cachedHost);\n                    }\n                    else {\n                        onGetHost(id).then(function(host) {\n                            handler._getFileState(id).host = host;\n                            promise.success(host);\n                        }, promise.failure);\n                    }\n\n                    return promise;\n                },\n\n                getName: function(id) {\n                    return handler._getFileState(id).host;\n                }\n            },\n\n            done: function(id, xhr) {\n                var response = upload.response.parse(id, xhr),\n                    isError = response.success !== true;\n\n                if (isError && upload.response.shouldReset(response.code)) {\n                    log(\"This is an unrecoverable error, we must restart the upload entirely on the next retry attempt.\", \"error\");\n                    response.reset = true;\n                }\n\n                return {\n                    success: !isError,\n                    response: response\n                };\n            },\n\n            key: {\n                promise: function(id) {\n                    var promise = new qq.Promise(),\n                        key = handler.getThirdPartyFileId(id);\n\n                    /* jshint eqnull:true */\n                    if (key == null) {\n                        handler._setThirdPartyFileId(id, promise);\n                        onGetKeyName(id, getName(id)).then(\n                            function(keyName) {\n                                handler._setThirdPartyFileId(id, keyName);\n                                promise.success(keyName);\n                            },\n                            function(errorReason) {\n                                handler._setThirdPartyFileId(id, null);\n                                promise.failure(errorReason);\n                            }\n                        );\n                    }\n                    else if (qq.isGenericPromise(key)) {\n                        key.then(promise.success, promise.failure);\n                    }\n                    else {\n                        promise.success(key);\n                    }\n\n                    return promise;\n                },\n\n                urlSafe: function(id) {\n                    var encodedKey = handler.getThirdPartyFileId(id);\n                    return qq.s3.util.uriEscapePath(encodedKey);\n                }\n            },\n\n            response: {\n                parse: function(id, xhr) {\n                    var response = {},\n                        parsedErrorProps;\n\n                    try {\n                        log(qq.format(\"Received response status {} with body: {}\", xhr.status, xhr.responseText));\n\n                        if (xhr.status === expectedStatus) {\n                            response.success = true;\n                        }\n                        else {\n                            parsedErrorProps = upload.response.parseError(xhr.responseText);\n\n                            if (parsedErrorProps) {\n                                response.error = parsedErrorProps.message;\n                                response.code = parsedErrorProps.code;\n                            }\n                        }\n                    }\n                    catch (error) {\n                        log(\"Error when attempting to parse xhr response text (\" + error.message + \")\", \"error\");\n                    }\n\n                    return response;\n                },\n\n                /**\n                 * This parses an XML response by extracting the \"Message\" and \"Code\" elements that accompany AWS error responses.\n                 *\n                 * @param awsResponseXml XML response from AWS\n                 * @returns {object} Object w/ `code` and `message` properties, or undefined if we couldn't find error info in the XML document.\n                 */\n                parseError: function(awsResponseXml) {\n                    var parser = new DOMParser(),\n                        parsedDoc = parser.parseFromString(awsResponseXml, \"application/xml\"),\n                        errorEls = parsedDoc.getElementsByTagName(\"Error\"),\n                        errorDetails = {},\n                        codeEls, messageEls;\n\n                    if (errorEls.length) {\n                        codeEls = parsedDoc.getElementsByTagName(\"Code\");\n                        messageEls = parsedDoc.getElementsByTagName(\"Message\");\n\n                        if (messageEls.length) {\n                            errorDetails.message = messageEls[0].textContent;\n                        }\n\n                        if (codeEls.length) {\n                            errorDetails.code = codeEls[0].textContent;\n                        }\n\n                        return errorDetails;\n                    }\n                },\n\n                // Determine if the upload should be restarted on the next retry attempt\n                // based on the error code returned in the response from AWS.\n                shouldReset: function(errorCode) {\n                    /*jshint -W014 */\n                    return errorCode === \"EntityTooSmall\"\n                        || errorCode === \"InvalidPart\"\n                        || errorCode === \"InvalidPartOrder\"\n                        || errorCode === \"NoSuchUpload\";\n                }\n            },\n\n            start: function(id, optChunkIdx) {\n                var promise = new qq.Promise();\n\n                upload.key.promise(id).then(function() {\n                    upload.bucket.promise(id).then(function() {\n                        upload.host.promise(id).then(function() {\n                            /* jshint eqnull:true */\n                            if (optChunkIdx == null) {\n                                simple.send(id).then(promise.success, promise.failure);\n                            }\n                            else {\n                                chunked.send(id, optChunkIdx).then(promise.success, promise.failure);\n                            }\n                        });\n                    });\n                },\n                function(errorReason) {\n                    promise.failure({error: errorReason});\n                });\n\n                return promise;\n            },\n\n            track: function(id, xhr, optChunkIdx) {\n                var promise = new qq.Promise();\n\n                xhr.onreadystatechange = function() {\n                    if (xhr.readyState === 4) {\n                        var result;\n\n                        /* jshint eqnull:true */\n                        if (optChunkIdx == null) {\n                            result = upload.done(id, xhr);\n                            promise[result.success ? \"success\" : \"failure\"](result.response, xhr);\n                        }\n                        else {\n                            chunked.done(id, xhr, optChunkIdx);\n                            result = upload.done(id, xhr);\n                            promise[result.success ? \"success\" : \"failure\"](result.response, xhr);\n                        }\n                    }\n                };\n\n                return promise;\n            }\n        };\n\n    qq.extend(this, {\n        uploadChunk: upload.start,\n        uploadFile: upload.start\n    });\n\n    qq.extend(this, new qq.XhrUploadHandler({\n        options: qq.extend({namespace: \"s3\"}, spec),\n        proxy: qq.extend({getEndpoint: spec.endpointStore.get}, proxy)\n    }));\n\n    qq.override(this, function(super_) {\n        return {\n            expunge: function(id) {\n                var uploadId = handler._getPersistableData(id) && handler._getPersistableData(id).uploadId,\n                    existedInLocalStorage = handler._maybeDeletePersistedChunkData(id);\n\n                if (uploadId !== undefined && existedInLocalStorage) {\n                    requesters.abortMultipart.send(id, uploadId);\n                }\n\n                super_.expunge(id);\n            },\n\n            finalizeChunks: function(id) {\n                return chunked.combine(id);\n            },\n\n            _getLocalStorageId: function(id) {\n                var baseStorageId = super_._getLocalStorageId(id),\n                    bucketName = upload.bucket.getName(id);\n\n                return baseStorageId + \"-\" + bucketName;\n            }\n        };\n    });\n};\n","/*globals qq */\n/**\n * Upload handler used by the upload to S3 module that assumes the current user agent does not have any support for the\n * File API, and, therefore, makes use of iframes and forms to submit the files directly to S3 buckets via the associated\n * AWS API.\n *\n * @param options Options passed from the base handler\n * @param proxy Callbacks & methods used to query for or push out data/changes\n */\nqq.s3.FormUploadHandler = function(options, proxy) {\n    \"use strict\";\n\n    var handler = this,\n        clockDrift = options.clockDrift,\n        onUuidChanged = proxy.onUuidChanged,\n        getName = proxy.getName,\n        getUuid = proxy.getUuid,\n        log = proxy.log,\n        onGetBucket = options.getBucket,\n        onGetKeyName = options.getKeyName,\n        filenameParam = options.filenameParam,\n        paramsStore = options.paramsStore,\n        endpointStore = options.endpointStore,\n        aclStore = options.aclStore,\n        reducedRedundancy = options.objectProperties.reducedRedundancy,\n        region = options.objectProperties.region,\n        serverSideEncryption = options.objectProperties.serverSideEncryption,\n        validation = options.validation,\n        signature = options.signature,\n        successRedirectUrl = options.iframeSupport.localBlankPagePath,\n        credentialsProvider = options.signature.credentialsProvider,\n        getSignatureAjaxRequester = new qq.s3.RequestSigner({\n            signatureSpec: signature,\n            cors: options.cors,\n            log: log\n        });\n\n    if (successRedirectUrl === undefined) {\n        throw new Error(\"successRedirectEndpoint MUST be defined if you intend to use browsers that do not support the File API!\");\n    }\n\n    /**\n     * Attempt to parse the contents of an iframe after receiving a response from the server.  If the contents cannot be\n     * read (perhaps due to a security error) it is safe to assume that the upload was not successful since Amazon should\n     * have redirected to a known endpoint that should provide a parseable response.\n     *\n     * @param id ID of the associated file\n     * @param iframe target of the form submit\n     * @returns {boolean} true if the contents can be read, false otherwise\n     */\n    function isValidResponse(id, iframe) {\n        var response,\n            endpoint = options.endpointStore.get(id),\n            bucket = handler._getFileState(id).bucket,\n            doc,\n            innerHtml,\n            responseData;\n\n        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\n        try {\n            // iframe.contentWindow.document - for IE<7\n            doc = iframe.contentDocument || iframe.contentWindow.document;\n            innerHtml = doc.body.innerHTML;\n\n            responseData = qq.s3.util.parseIframeResponse(iframe);\n            if (responseData.bucket === bucket &&\n                responseData.key === qq.s3.util.encodeQueryStringParam(handler.getThirdPartyFileId(id))) {\n\n                return true;\n            }\n\n            log(\"Response from AWS included an unexpected bucket or key name.\", \"error\");\n\n        }\n        catch (error) {\n            log(\"Error when attempting to parse form upload response (\" + error.message + \")\", \"error\");\n        }\n\n        return false;\n    }\n\n    function generateAwsParams(id) {\n        /*jshint -W040 */\n        var customParams = paramsStore.get(id);\n\n        customParams[filenameParam] = getName(id);\n\n        return qq.s3.util.generateAwsParams({\n            endpoint: endpointStore.get(id),\n            clockDrift: clockDrift,\n            params: customParams,\n            bucket: handler._getFileState(id).bucket,\n            key: handler.getThirdPartyFileId(id),\n            accessKey: credentialsProvider.get().accessKey,\n            sessionToken: credentialsProvider.get().sessionToken,\n            acl: aclStore.get(id),\n            minFileSize: validation.minSizeLimit,\n            maxFileSize: validation.maxSizeLimit,\n            successRedirectUrl: successRedirectUrl,\n            reducedRedundancy: reducedRedundancy,\n            region: region,\n            serverSideEncryption: serverSideEncryption,\n            signatureVersion: signature.version,\n            log: log\n        },\n        qq.bind(getSignatureAjaxRequester.getSignature, this, id));\n    }\n\n    /**\n     * Creates form, that will be submitted to iframe\n     */\n    function createForm(id, iframe) {\n        var promise = new qq.Promise(),\n            method = \"POST\",\n            endpoint = options.endpointStore.get(id),\n            fileName = getName(id);\n\n        generateAwsParams(id).then(function(params) {\n            var form = handler._initFormForUpload({\n                method: method,\n                endpoint: endpoint,\n                params: params,\n                paramsInBody: true,\n                targetName: iframe.name\n            });\n\n            promise.success(form);\n        }, function(errorMessage) {\n            promise.failure(errorMessage);\n            handleFinishedUpload(id, iframe, fileName, {error: errorMessage});\n        });\n\n        return promise;\n    }\n\n    function handleUpload(id) {\n        var iframe = handler._createIframe(id),\n            input = handler.getInput(id),\n            promise = new qq.Promise();\n\n        createForm(id, iframe).then(function(form) {\n            form.appendChild(input);\n\n            // Register a callback when the response comes in from S3\n            handler._attachLoadEvent(iframe, function(response) {\n                log(\"iframe loaded\");\n\n                // If the common response handler has determined success or failure immediately\n                if (response) {\n                    // If there is something fundamentally wrong with the response (such as iframe content is not accessible)\n                    if (response.success === false) {\n                        log(\"Amazon likely rejected the upload request\", \"error\");\n                        promise.failure(response);\n                    }\n                }\n                // The generic response (iframe onload) handler was not able to make a determination regarding the success of the request\n                else {\n                    response = {};\n                    response.success = isValidResponse(id, iframe);\n\n                    // If the more specific response handle detected a problem with the response from S3\n                    if (response.success === false) {\n                        log(\"A success response was received by Amazon, but it was invalid in some way.\", \"error\");\n                        promise.failure(response);\n                    }\n                    else {\n                        qq.extend(response, qq.s3.util.parseIframeResponse(iframe));\n                        promise.success(response);\n                    }\n                }\n\n                handleFinishedUpload(id, iframe);\n            });\n\n            log(\"Sending upload request for \" + id);\n            form.submit();\n            qq(form).remove();\n        }, promise.failure);\n\n        return promise;\n    }\n\n    function handleFinishedUpload(id, iframe) {\n        handler._detachLoadEvent(id);\n        iframe && qq(iframe).remove();\n    }\n\n    qq.extend(this, new qq.FormUploadHandler({\n        options: {\n            isCors: false,\n            inputName: \"file\"\n        },\n\n        proxy: {\n            onCancel: options.onCancel,\n            onUuidChanged: onUuidChanged,\n            getName: getName,\n            getUuid: getUuid,\n            log: log\n        }\n    }));\n\n    qq.extend(this, {\n        uploadFile: function(id) {\n            var name = getName(id),\n                promise = new qq.Promise();\n\n            if (handler.getThirdPartyFileId(id)) {\n                if (handler._getFileState(id).bucket) {\n                    handleUpload(id).then(promise.success, promise.failure);\n                }\n                else {\n                    onGetBucket(id).then(function(bucket) {\n                        handler._getFileState(id).bucket = bucket;\n                        handleUpload(id).then(promise.success, promise.failure);\n                    });\n                }\n            }\n            else {\n                // The S3 uploader module will either calculate the key or ask the server for it\n                // and will call us back once it is known.\n                onGetKeyName(id, name).then(function(key) {\n                    onGetBucket(id).then(function(bucket) {\n                        handler._getFileState(id).bucket = bucket;\n                        handler._setThirdPartyFileId(id, key);\n                        handleUpload(id).then(promise.success, promise.failure);\n                    }, function(errorReason) {\n                        promise.failure({error: errorReason});\n                    });\n                }, function(errorReason) {\n                    promise.failure({error: errorReason});\n                });\n            }\n\n            return promise;\n        }\n    });\n};\n","/*globals qq, document, CustomEvent*/\nqq.DragAndDrop = function(o) {\n    \"use strict\";\n\n    var options,\n        HIDE_ZONES_EVENT_NAME = \"qq-hidezones\",\n        HIDE_BEFORE_ENTER_ATTR = \"qq-hide-dropzone\",\n        uploadDropZones = [],\n        droppedFiles = [],\n        disposeSupport = new qq.DisposeSupport();\n\n    options = {\n        dropZoneElements: [],\n        allowMultipleItems: true,\n        classes: {\n            dropActive: null\n        },\n        callbacks: new qq.DragAndDrop.callbacks()\n    };\n\n    qq.extend(options, o, true);\n\n    function uploadDroppedFiles(files, uploadDropZone) {\n        // We need to convert the `FileList` to an actual `Array` to avoid iteration issues\n        var filesAsArray = Array.prototype.slice.call(files);\n\n        options.callbacks.dropLog(\"Grabbed \" + files.length + \" dropped files.\");\n        uploadDropZone.dropDisabled(false);\n        options.callbacks.processingDroppedFilesComplete(filesAsArray, uploadDropZone.getElement());\n    }\n\n    function traverseFileTree(entry) {\n        var parseEntryPromise = new qq.Promise();\n\n        if (entry.isFile) {\n            entry.file(function(file) {\n                var name = entry.name,\n                    fullPath = entry.fullPath,\n                    indexOfNameInFullPath = fullPath.indexOf(name);\n\n                // remove file name from full path string\n                fullPath = fullPath.substr(0, indexOfNameInFullPath);\n\n                // remove leading slash in full path string\n                if (fullPath.charAt(0) === \"/\") {\n                    fullPath = fullPath.substr(1);\n                }\n\n                file.qqPath = fullPath;\n                droppedFiles.push(file);\n                parseEntryPromise.success();\n            },\n            function(fileError) {\n                options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\n                parseEntryPromise.failure();\n            });\n        }\n        else if (entry.isDirectory) {\n            getFilesInDirectory(entry).then(\n                function allEntriesRead(entries) {\n                    var entriesLeft = entries.length;\n\n                    qq.each(entries, function(idx, entry) {\n                        traverseFileTree(entry).done(function() {\n                            entriesLeft -= 1;\n\n                            if (entriesLeft === 0) {\n                                parseEntryPromise.success();\n                            }\n                        });\n                    });\n\n                    if (!entries.length) {\n                        parseEntryPromise.success();\n                    }\n                },\n\n                function readFailure(fileError) {\n                    options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\n                    parseEntryPromise.failure();\n                }\n            );\n        }\n\n        return parseEntryPromise;\n    }\n\n    // Promissory.  Guaranteed to read all files in the root of the passed directory.\n    function getFilesInDirectory(entry, reader, accumEntries, existingPromise) {\n        var promise = existingPromise || new qq.Promise(),\n            dirReader = reader || entry.createReader();\n\n        dirReader.readEntries(\n            function readSuccess(entries) {\n                var newEntries = accumEntries ? accumEntries.concat(entries) : entries;\n\n                if (entries.length) {\n                    setTimeout(function() { // prevent stack overflow, however unlikely\n                        getFilesInDirectory(entry, dirReader, newEntries, promise);\n                    }, 0);\n                }\n                else {\n                    promise.success(newEntries);\n                }\n            },\n\n            promise.failure\n        );\n\n        return promise;\n    }\n\n    function handleDataTransfer(dataTransfer, uploadDropZone) {\n        var pendingFolderPromises = [],\n            handleDataTransferPromise = new qq.Promise();\n\n        options.callbacks.processingDroppedFiles();\n        uploadDropZone.dropDisabled(true);\n\n        if (dataTransfer.files.length > 1 && !options.allowMultipleItems) {\n            options.callbacks.processingDroppedFilesComplete([]);\n            options.callbacks.dropError(\"tooManyFilesError\", \"\");\n            uploadDropZone.dropDisabled(false);\n            handleDataTransferPromise.failure();\n        }\n        else {\n            droppedFiles = [];\n\n            if (qq.isFolderDropSupported(dataTransfer)) {\n                qq.each(dataTransfer.items, function(idx, item) {\n                    var entry = item.webkitGetAsEntry();\n\n                    if (entry) {\n                        //due to a bug in Chrome's File System API impl - #149735\n                        if (entry.isFile) {\n                            droppedFiles.push(item.getAsFile());\n                        }\n\n                        else {\n                            pendingFolderPromises.push(traverseFileTree(entry).done(function() {\n                                pendingFolderPromises.pop();\n                                if (pendingFolderPromises.length === 0) {\n                                    handleDataTransferPromise.success();\n                                }\n                            }));\n                        }\n                    }\n                });\n            }\n            else {\n                droppedFiles = dataTransfer.files;\n            }\n\n            if (pendingFolderPromises.length === 0) {\n                handleDataTransferPromise.success();\n            }\n        }\n\n        return handleDataTransferPromise;\n    }\n\n    function setupDropzone(dropArea) {\n        var dropZone = new qq.UploadDropZone({\n            HIDE_ZONES_EVENT_NAME: HIDE_ZONES_EVENT_NAME,\n            element: dropArea,\n            onEnter: function(e) {\n                qq(dropArea).addClass(options.classes.dropActive);\n                e.stopPropagation();\n            },\n            onLeaveNotDescendants: function(e) {\n                qq(dropArea).removeClass(options.classes.dropActive);\n            },\n            onDrop: function(e) {\n                handleDataTransfer(e.dataTransfer, dropZone).then(\n                    function() {\n                        uploadDroppedFiles(droppedFiles, dropZone);\n                    },\n                    function() {\n                        options.callbacks.dropLog(\"Drop event DataTransfer parsing failed.  No files will be uploaded.\", \"error\");\n                    }\n                );\n            }\n        });\n\n        disposeSupport.addDisposer(function() {\n            dropZone.dispose();\n        });\n\n        qq(dropArea).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropArea).hide();\n\n        uploadDropZones.push(dropZone);\n\n        return dropZone;\n    }\n\n    function isFileDrag(dragEvent) {\n        var fileDrag;\n\n        qq.each(dragEvent.dataTransfer.types, function(key, val) {\n            if (val === \"Files\") {\n                fileDrag = true;\n                return false;\n            }\n        });\n\n        return fileDrag;\n    }\n\n    // Attempt to determine when the file has left the document.  It is not always possible to detect this\n    // in all cases, but it is generally possible in all browsers, with a few exceptions.\n    //\n    // Exceptions:\n    // * IE10+ & Safari: We can't detect a file leaving the document if the Explorer window housing the file\n    //                   overlays the browser window.\n    // * IE10+: If the file is dragged out of the window too quickly, IE does not set the expected values of the\n    //          event's X & Y properties.\n    function leavingDocumentOut(e) {\n        if (qq.safari()) {\n            return e.x < 0 || e.y < 0;\n        }\n\n        return e.x === 0 && e.y === 0;\n    }\n\n    function setupDragDrop() {\n        var dropZones = options.dropZoneElements,\n\n            maybeHideDropZones = function() {\n                setTimeout(function() {\n                    qq.each(dropZones, function(idx, dropZone) {\n                        qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropZone).hide();\n                        qq(dropZone).removeClass(options.classes.dropActive);\n                    });\n                }, 10);\n            };\n\n        qq.each(dropZones, function(idx, dropZone) {\n            var uploadDropZone = setupDropzone(dropZone);\n\n            // IE <= 9 does not support the File API used for drag+drop uploads\n            if (dropZones.length && qq.supportedFeatures.fileDrop) {\n                disposeSupport.attach(document, \"dragenter\", function(e) {\n                    if (!uploadDropZone.dropDisabled() && isFileDrag(e)) {\n                        qq.each(dropZones, function(idx, dropZone) {\n                            // We can't apply styles to non-HTMLElements, since they lack the `style` property.\n                            // Also, if the drop zone isn't initially hidden, let's not mess with `style.display`.\n                            if (dropZone instanceof HTMLElement &&\n                                qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR)) {\n\n                                qq(dropZone).css({display: \"block\"});\n                            }\n                        });\n                    }\n                });\n            }\n        });\n\n        disposeSupport.attach(document, \"dragleave\", function(e) {\n            if (leavingDocumentOut(e)) {\n                maybeHideDropZones();\n            }\n        });\n\n        // Just in case we were not able to detect when a dragged file has left the document,\n        // hide all relevant drop zones the next time the mouse enters the document.\n        // Note that mouse events such as this one are not fired during drag operations.\n        disposeSupport.attach(qq(document).children()[0], \"mouseenter\", function(e) {\n            maybeHideDropZones();\n        });\n\n        disposeSupport.attach(document, \"drop\", function(e) {\n            if (isFileDrag(e)) {\n                e.preventDefault();\n                maybeHideDropZones();\n            }\n        });\n\n        disposeSupport.attach(document, HIDE_ZONES_EVENT_NAME, maybeHideDropZones);\n    }\n\n    setupDragDrop();\n\n    qq.extend(this, {\n        setupExtraDropzone: function(element) {\n            options.dropZoneElements.push(element);\n            setupDropzone(element);\n        },\n\n        removeDropzone: function(element) {\n            var i,\n                dzs = options.dropZoneElements;\n\n            for (i in dzs) {\n                if (dzs[i] === element) {\n                    return dzs.splice(i, 1);\n                }\n            }\n        },\n\n        dispose: function() {\n            disposeSupport.dispose();\n            qq.each(uploadDropZones, function(idx, dropZone) {\n                dropZone.dispose();\n            });\n        }\n    });\n};\n\nqq.DragAndDrop.callbacks = function() {\n    \"use strict\";\n\n    return {\n        processingDroppedFiles: function() {},\n        processingDroppedFilesComplete: function(files, targetEl) {},\n        dropError: function(code, errorSpecifics) {\n            qq.log(\"Drag & drop error code '\" + code + \" with these specifics: '\" + errorSpecifics + \"'\", \"error\");\n        },\n        dropLog: function(message, level) {\n            qq.log(message, level);\n        }\n    };\n};\n\nqq.UploadDropZone = function(o) {\n    \"use strict\";\n\n    var disposeSupport = new qq.DisposeSupport(),\n        options, element, preventDrop, dropOutsideDisabled;\n\n    options = {\n        element: null,\n        onEnter: function(e) {},\n        onLeave: function(e) {},\n        // is not fired when leaving element by hovering descendants\n        onLeaveNotDescendants: function(e) {},\n        onDrop: function(e) {}\n    };\n\n    qq.extend(options, o);\n    element = options.element;\n\n    function dragoverShouldBeCanceled() {\n        return qq.safari() || (qq.firefox() && qq.windows());\n    }\n\n    function disableDropOutside(e) {\n        // run only once for all instances\n        if (!dropOutsideDisabled) {\n\n            // for these cases we need to catch onDrop to reset dropArea\n            if (dragoverShouldBeCanceled) {\n                disposeSupport.attach(document, \"dragover\", function(e) {\n                    e.preventDefault();\n                });\n            } else {\n                disposeSupport.attach(document, \"dragover\", function(e) {\n                    if (e.dataTransfer) {\n                        e.dataTransfer.dropEffect = \"none\";\n                        e.preventDefault();\n                    }\n                });\n            }\n\n            dropOutsideDisabled = true;\n        }\n    }\n\n    function isValidFileDrag(e) {\n        // e.dataTransfer currently causing IE errors\n        // IE9 does NOT support file API, so drag-and-drop is not possible\n        if (!qq.supportedFeatures.fileDrop) {\n            return false;\n        }\n\n        var effectTest, dt = e.dataTransfer,\n        // do not check dt.types.contains in webkit, because it crashes safari 4\n        isSafari = qq.safari();\n\n        // dt.effectAllowed is none in Safari 5\n\n        // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\n        // the filesystem\n        effectTest = qq.ie() && qq.supportedFeatures.fileDrop ? true : dt.effectAllowed !== \"none\";\n        return dt && effectTest &&\n                (\n                    (dt.files && dt.files.length) ||                                     // Valid for drop events with files\n                    (!isSafari && dt.types.contains && dt.types.contains(\"Files\")) ||  // Valid in Chrome/Firefox\n                    (dt.types.includes && dt.types.includes(\"Files\"))               // Valid in IE\n                );\n    }\n\n    function isOrSetDropDisabled(isDisabled) {\n        if (isDisabled !== undefined) {\n            preventDrop = isDisabled;\n        }\n        return preventDrop;\n    }\n\n    function triggerHidezonesEvent() {\n        var hideZonesEvent;\n\n        function triggerUsingOldApi() {\n            hideZonesEvent = document.createEvent(\"Event\");\n            hideZonesEvent.initEvent(options.HIDE_ZONES_EVENT_NAME, true, true);\n        }\n\n        if (window.CustomEvent) {\n            try {\n                hideZonesEvent = new CustomEvent(options.HIDE_ZONES_EVENT_NAME);\n            }\n            catch (err) {\n                triggerUsingOldApi();\n            }\n        }\n        else {\n            triggerUsingOldApi();\n        }\n\n        document.dispatchEvent(hideZonesEvent);\n    }\n\n    function attachEvents() {\n        disposeSupport.attach(element, \"dragover\", function(e) {\n            if (!isValidFileDrag(e)) {\n                return;\n            }\n\n            // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\n            // the filesystem\n            var effect = qq.ie() && qq.supportedFeatures.fileDrop ? null : e.dataTransfer.effectAllowed;\n            if (effect === \"move\" || effect === \"linkMove\") {\n                e.dataTransfer.dropEffect = \"move\"; // for FF (only move allowed)\n            } else {\n                e.dataTransfer.dropEffect = \"copy\"; // for Chrome\n            }\n\n            e.stopPropagation();\n            e.preventDefault();\n        });\n\n        disposeSupport.attach(element, \"dragenter\", function(e) {\n            if (!isOrSetDropDisabled()) {\n                if (!isValidFileDrag(e)) {\n                    return;\n                }\n                options.onEnter(e);\n            }\n        });\n\n        disposeSupport.attach(element, \"dragleave\", function(e) {\n            if (!isValidFileDrag(e)) {\n                return;\n            }\n\n            options.onLeave(e);\n\n            var relatedTarget = document.elementFromPoint(e.clientX, e.clientY);\n            // do not fire when moving a mouse over a descendant\n            if (qq(this).contains(relatedTarget)) {\n                return;\n            }\n\n            options.onLeaveNotDescendants(e);\n        });\n\n        disposeSupport.attach(element, \"drop\", function(e) {\n            if (!isOrSetDropDisabled()) {\n                if (!isValidFileDrag(e)) {\n                    return;\n                }\n\n                e.preventDefault();\n                e.stopPropagation();\n                options.onDrop(e);\n\n                triggerHidezonesEvent();\n            }\n        });\n    }\n\n    disableDropOutside();\n    attachEvents();\n\n    qq.extend(this, {\n        dropDisabled: function(isDisabled) {\n            return isOrSetDropDisabled(isDisabled);\n        },\n\n        dispose: function() {\n            disposeSupport.dispose();\n        },\n\n        getElement: function() {\n            return element;\n        }\n    });\n\n    this._testing = {};\n    this._testing.isValidFileDrag = isValidFileDrag;\n};\n","/*globals qq */\n/**\n * Defines the public API for FineUploader mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.uiPublicApi = {\n        addInitialFiles: function(cannedFileList) {\n            this._parent.prototype.addInitialFiles.apply(this, arguments);\n            this._templating.addCacheToDom();\n        },\n\n        clearStoredFiles: function() {\n            this._parent.prototype.clearStoredFiles.apply(this, arguments);\n            this._templating.clearFiles();\n        },\n\n        addExtraDropzone: function(element) {\n            this._dnd && this._dnd.setupExtraDropzone(element);\n        },\n\n        removeExtraDropzone: function(element) {\n            if (this._dnd) {\n                return this._dnd.removeDropzone(element);\n            }\n        },\n\n        getItemByFileId: function(id) {\n            if (!this._templating.isHiddenForever(id)) {\n                return this._templating.getFileContainer(id);\n            }\n        },\n\n        reset: function() {\n            this._parent.prototype.reset.apply(this, arguments);\n            this._templating.reset();\n\n            if (!this._options.button && this._templating.getButton()) {\n                this._defaultButtonId = this._createUploadButton({\n                    element: this._templating.getButton(),\n                    title: this._options.text.fileInputTitle\n                }).getButtonId();\n            }\n\n            if (this._dnd) {\n                this._dnd.dispose();\n                this._dnd = this._setupDragAndDrop();\n            }\n\n            this._totalFilesInBatch = 0;\n            this._filesInBatchAddedToUi = 0;\n\n            this._setupClickAndEditEventHandlers();\n        },\n\n        setName: function(id, newName) {\n            var formattedFilename = this._options.formatFileName(newName);\n\n            this._parent.prototype.setName.apply(this, arguments);\n            this._templating.updateFilename(id, formattedFilename);\n        },\n\n        pauseUpload: function(id) {\n            var paused = this._parent.prototype.pauseUpload.apply(this, arguments);\n\n            paused && this._templating.uploadPaused(id);\n            return paused;\n        },\n\n        continueUpload: function(id) {\n            var continued = this._parent.prototype.continueUpload.apply(this, arguments);\n\n            continued && this._templating.uploadContinued(id);\n            return continued;\n        },\n\n        getId: function(fileContainerOrChildEl) {\n            return this._templating.getFileId(fileContainerOrChildEl);\n        },\n\n        getDropTarget: function(fileId) {\n            var file = this.getFile(fileId);\n\n            return file.qqDropTarget;\n        }\n    };\n\n    /**\n     * Defines the private (internal) API for FineUploader mode.\n     */\n    qq.uiPrivateApi = {\n        _getButton: function(buttonId) {\n            var button = this._parent.prototype._getButton.apply(this, arguments);\n\n            if (!button) {\n                if (buttonId === this._defaultButtonId) {\n                    button = this._templating.getButton();\n                }\n            }\n\n            return button;\n        },\n\n        _removeFileItem: function(fileId) {\n            this._templating.removeFile(fileId);\n        },\n\n        _setupClickAndEditEventHandlers: function() {\n            this._fileButtonsClickHandler = qq.FileButtonsClickHandler && this._bindFileButtonsClickEvent();\n\n            // A better approach would be to check specifically for focusin event support by querying the DOM API,\n            // but the DOMFocusIn event is not exposed as a property, so we have to resort to UA string sniffing.\n            this._focusinEventSupported = !qq.firefox();\n\n            if (this._isEditFilenameEnabled())\n            {\n                this._filenameClickHandler = this._bindFilenameClickEvent();\n                this._filenameInputFocusInHandler = this._bindFilenameInputFocusInEvent();\n                this._filenameInputFocusHandler = this._bindFilenameInputFocusEvent();\n            }\n        },\n\n        _setupDragAndDrop: function() {\n            var self = this,\n                dropZoneElements = this._options.dragAndDrop.extraDropzones,\n                templating = this._templating,\n                defaultDropZone = templating.getDropZone();\n\n            defaultDropZone && dropZoneElements.push(defaultDropZone);\n\n            return new qq.DragAndDrop({\n                dropZoneElements: dropZoneElements,\n                allowMultipleItems: this._options.multiple,\n                classes: {\n                    dropActive: this._options.classes.dropActive\n                },\n                callbacks: {\n                    processingDroppedFiles: function() {\n                        templating.showDropProcessing();\n                    },\n                    processingDroppedFilesComplete: function(files, targetEl) {\n                        templating.hideDropProcessing();\n\n                        qq.each(files, function(idx, file) {\n                            file.qqDropTarget = targetEl;\n                        });\n\n                        if (files.length) {\n                            self.addFiles(files, null, null);\n                        }\n                    },\n                    dropError: function(code, errorData) {\n                        self._itemError(code, errorData);\n                    },\n                    dropLog: function(message, level) {\n                        self.log(message, level);\n                    }\n                }\n            });\n        },\n\n        _bindFileButtonsClickEvent: function() {\n            var self = this;\n\n            return new qq.FileButtonsClickHandler({\n                templating: this._templating,\n\n                log: function(message, lvl) {\n                    self.log(message, lvl);\n                },\n\n                onDeleteFile: function(fileId) {\n                    self.deleteFile(fileId);\n                },\n\n                onCancel: function(fileId) {\n                    self.cancel(fileId);\n                },\n\n                onRetry: function(fileId) {\n                    self.retry(fileId);\n                },\n\n                onPause: function(fileId) {\n                    self.pauseUpload(fileId);\n                },\n\n                onContinue: function(fileId) {\n                    self.continueUpload(fileId);\n                },\n\n                onGetName: function(fileId) {\n                    return self.getName(fileId);\n                }\n            });\n        },\n\n        _isEditFilenameEnabled: function() {\n            /*jshint -W014 */\n            return this._templating.isEditFilenamePossible()\n                && !this._options.autoUpload\n                && qq.FilenameClickHandler\n                && qq.FilenameInputFocusHandler\n                && qq.FilenameInputFocusHandler;\n        },\n\n        _filenameEditHandler: function() {\n            var self = this,\n                templating = this._templating;\n\n            return {\n                templating: templating,\n                log: function(message, lvl) {\n                    self.log(message, lvl);\n                },\n                onGetUploadStatus: function(fileId) {\n                    return self.getUploads({id: fileId}).status;\n                },\n                onGetName: function(fileId) {\n                    return self.getName(fileId);\n                },\n                onSetName: function(id, newName) {\n                    self.setName(id, newName);\n                },\n                onEditingStatusChange: function(id, isEditing) {\n                    var qqInput = qq(templating.getEditInput(id)),\n                        qqFileContainer = qq(templating.getFileContainer(id));\n\n                    if (isEditing) {\n                        qqInput.addClass(\"qq-editing\");\n                        templating.hideFilename(id);\n                        templating.hideEditIcon(id);\n                    }\n                    else {\n                        qqInput.removeClass(\"qq-editing\");\n                        templating.showFilename(id);\n                        templating.showEditIcon(id);\n                    }\n\n                    // Force IE8 and older to repaint\n                    qqFileContainer.addClass(\"qq-temp\").removeClass(\"qq-temp\");\n                }\n            };\n        },\n\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\n            this._parent.prototype._onUploadStatusChange.apply(this, arguments);\n\n            if (this._isEditFilenameEnabled()) {\n                // Status for a file exists before it has been added to the DOM, so we must be careful here.\n                if (this._templating.getFileContainer(id) && newStatus !== qq.status.SUBMITTED) {\n                    this._templating.markFilenameEditable(id);\n                    this._templating.hideEditIcon(id);\n                }\n            }\n\n            if (oldStatus === qq.status.UPLOAD_RETRYING && newStatus === qq.status.UPLOADING) {\n                this._templating.hideRetry(id);\n                this._templating.setStatusText(id);\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.retrying);\n            }\n            else if (newStatus === qq.status.UPLOAD_FAILED) {\n                this._templating.hidePause(id);\n            }\n        },\n\n        _bindFilenameInputFocusInEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameInputFocusInHandler(spec);\n        },\n\n        _bindFilenameInputFocusEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameInputFocusHandler(spec);\n        },\n\n        _bindFilenameClickEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameClickHandler(spec);\n        },\n\n        _storeForLater: function(id) {\n            this._parent.prototype._storeForLater.apply(this, arguments);\n            this._templating.hideSpinner(id);\n        },\n\n        _onAllComplete: function(successful, failed) {\n            this._parent.prototype._onAllComplete.apply(this, arguments);\n            this._templating.resetTotalProgress();\n        },\n\n        _onSubmit: function(id, name) {\n            var file = this.getFile(id);\n\n            if (file && file.qqPath && this._options.dragAndDrop.reportDirectoryPaths) {\n                this._paramsStore.addReadOnly(id, {\n                    qqpath: file.qqPath\n                });\n            }\n\n            this._parent.prototype._onSubmit.apply(this, arguments);\n            this._addToList(id, name);\n        },\n\n        // The file item has been added to the DOM.\n        _onSubmitted: function(id) {\n            // If the edit filename feature is enabled, mark the filename element as \"editable\" and the associated edit icon\n            if (this._isEditFilenameEnabled()) {\n                this._templating.markFilenameEditable(id);\n                this._templating.showEditIcon(id);\n\n                // If the focusin event is not supported, we must add a focus handler to the newly create edit filename text input\n                if (!this._focusinEventSupported) {\n                    this._filenameInputFocusHandler.addHandler(this._templating.getEditInput(id));\n                }\n            }\n        },\n\n        // Update the progress bar & percentage as the file is uploaded\n        _onProgress: function(id, name, loaded, total) {\n            this._parent.prototype._onProgress.apply(this, arguments);\n\n            this._templating.updateProgress(id, loaded, total);\n\n            if (total === 0 || Math.round(loaded / total * 100) === 100) {\n                this._templating.hideCancel(id);\n                this._templating.hidePause(id);\n                this._templating.hideProgress(id);\n                this._templating.setStatusText(id, this._options.text.waitingForResponse);\n\n                // If ~last byte was sent, display total file size\n                this._displayFileSize(id);\n            }\n            else {\n                // If still uploading, display percentage - total size is actually the total request(s) size\n                this._displayFileSize(id, loaded, total);\n            }\n        },\n\n        _onTotalProgress: function(loaded, total) {\n            this._parent.prototype._onTotalProgress.apply(this, arguments);\n            this._templating.updateTotalProgress(loaded, total);\n        },\n\n        _onComplete: function(id, name, result, xhr) {\n            var parentRetVal = this._parent.prototype._onComplete.apply(this, arguments),\n                templating = this._templating,\n                fileContainer = templating.getFileContainer(id),\n                self = this;\n\n            function completeUpload(result) {\n                // If this file is not represented in the templating module, perhaps it was hidden intentionally.\n                // If so, don't perform any UI-related tasks related to this file.\n                if (!fileContainer) {\n                    return;\n                }\n\n                templating.setStatusText(id);\n\n                qq(fileContainer).removeClass(self._classes.retrying);\n                templating.hideProgress(id);\n\n                if (self.getUploads({id: id}).status !== qq.status.UPLOAD_FAILED) {\n                    templating.hideCancel(id);\n                }\n                templating.hideSpinner(id);\n\n                if (result.success) {\n                    self._markFileAsSuccessful(id);\n                }\n                else {\n                    qq(fileContainer).addClass(self._classes.fail);\n                    templating.showCancel(id);\n\n                    if (templating.isRetryPossible() && !self._preventRetries[id]) {\n                        qq(fileContainer).addClass(self._classes.retryable);\n                        templating.showRetry(id);\n                    }\n                    self._controlFailureTextDisplay(id, result);\n                }\n            }\n\n            // The parent may need to perform some async operation before we can accurately determine the status of the upload.\n            if (parentRetVal instanceof qq.Promise) {\n                parentRetVal.done(function(newResult) {\n                    completeUpload(newResult);\n                });\n\n            }\n            else {\n                completeUpload(result);\n            }\n\n            return parentRetVal;\n        },\n\n        _markFileAsSuccessful: function(id) {\n            var templating = this._templating;\n\n            if (this._isDeletePossible()) {\n                templating.showDeleteButton(id);\n            }\n\n            qq(templating.getFileContainer(id)).addClass(this._classes.success);\n\n            this._maybeUpdateThumbnail(id);\n        },\n\n        _onUploadPrep: function(id) {\n            this._parent.prototype._onUploadPrep.apply(this, arguments);\n            this._templating.showSpinner(id);\n        },\n\n        _onUpload: function(id, name) {\n            var parentRetVal = this._parent.prototype._onUpload.apply(this, arguments);\n\n            this._templating.showSpinner(id);\n\n            return parentRetVal;\n        },\n\n        _onUploadChunk: function(id, chunkData) {\n            this._parent.prototype._onUploadChunk.apply(this, arguments);\n\n            // Only display the pause button if we have finished uploading at least one chunk\n            // & this file can be resumed\n            if (chunkData.partIndex > 0 && this._handler.isResumable(id)) {\n                this._templating.allowPause(id);\n            }\n        },\n\n        _onCancel: function(id, name) {\n            this._parent.prototype._onCancel.apply(this, arguments);\n            this._removeFileItem(id);\n\n            if (this._getNotFinished() === 0) {\n                this._templating.resetTotalProgress();\n            }\n        },\n\n        _onBeforeAutoRetry: function(id) {\n            var retryNumForDisplay, maxAuto, retryNote;\n\n            this._parent.prototype._onBeforeAutoRetry.apply(this, arguments);\n\n            this._showCancelLink(id);\n\n            if (this._options.retry.showAutoRetryNote) {\n                retryNumForDisplay = this._autoRetries[id];\n                maxAuto = this._options.retry.maxAutoAttempts;\n\n                retryNote = this._options.retry.autoRetryNote.replace(/\\{retryNum\\}/g, retryNumForDisplay);\n                retryNote = retryNote.replace(/\\{maxAuto\\}/g, maxAuto);\n\n                this._templating.setStatusText(id, retryNote);\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retrying);\n            }\n        },\n\n        //return false if we should not attempt the requested retry\n        _onBeforeManualRetry: function(id) {\n            if (this._parent.prototype._onBeforeManualRetry.apply(this, arguments)) {\n                this._templating.resetProgress(id);\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.fail);\n                this._templating.setStatusText(id);\n                this._templating.showSpinner(id);\n                this._showCancelLink(id);\n                return true;\n            }\n            else {\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retryable);\n                this._templating.showRetry(id);\n                return false;\n            }\n        },\n\n        _onSubmitDelete: function(id) {\n            var onSuccessCallback = qq.bind(this._onSubmitDeleteSuccess, this);\n\n            this._parent.prototype._onSubmitDelete.call(this, id, onSuccessCallback);\n        },\n\n        _onSubmitDeleteSuccess: function(id, uuid, additionalMandatedParams) {\n            if (this._options.deleteFile.forceConfirm) {\n                this._showDeleteConfirm.apply(this, arguments);\n            }\n            else {\n                this._sendDeleteRequest.apply(this, arguments);\n            }\n        },\n\n        _onDeleteComplete: function(id, xhr, isError) {\n            this._parent.prototype._onDeleteComplete.apply(this, arguments);\n\n            this._templating.hideSpinner(id);\n\n            if (isError) {\n                this._templating.setStatusText(id, this._options.deleteFile.deletingFailedText);\n                this._templating.showDeleteButton(id);\n            }\n            else {\n                this._removeFileItem(id);\n            }\n        },\n\n        _sendDeleteRequest: function(id, uuid, additionalMandatedParams) {\n            this._templating.hideDeleteButton(id);\n            this._templating.showSpinner(id);\n            this._templating.setStatusText(id, this._options.deleteFile.deletingStatusText);\n            this._deleteHandler.sendDelete.apply(this, arguments);\n        },\n\n        _showDeleteConfirm: function(id, uuid, mandatedParams) {\n            /*jshint -W004 */\n            var fileName = this.getName(id),\n                confirmMessage = this._options.deleteFile.confirmMessage.replace(/\\{filename\\}/g, fileName),\n                uuid = this.getUuid(id),\n                deleteRequestArgs = arguments,\n                self = this,\n                retVal;\n\n            retVal = this._options.showConfirm(confirmMessage);\n\n            if (qq.isGenericPromise(retVal)) {\n                retVal.then(function() {\n                    self._sendDeleteRequest.apply(self, deleteRequestArgs);\n                });\n            }\n            else if (retVal !== false) {\n                self._sendDeleteRequest.apply(self, deleteRequestArgs);\n            }\n        },\n\n        _addToList: function(id, name, canned) {\n            var prependData,\n                prependIndex = 0,\n                dontDisplay = this._handler.isProxied(id) && this._options.scaling.hideScaled,\n                record;\n\n            if (this._options.display.prependFiles) {\n                if (this._totalFilesInBatch > 1 && this._filesInBatchAddedToUi > 0) {\n                    prependIndex = this._filesInBatchAddedToUi - 1;\n                }\n\n                prependData = {\n                    index: prependIndex\n                };\n            }\n\n            if (!canned) {\n                if (this._options.disableCancelForFormUploads && !qq.supportedFeatures.ajaxUploading) {\n                    this._templating.disableCancel();\n                }\n\n                // Cancel all existing (previous) files and clear the list if this file is not part of\n                // a scaled file group that has already been accepted, or if this file is not part of\n                // a scaled file group at all.\n                if (!this._options.multiple) {\n                    record = this.getUploads({id: id});\n\n                    this._handledProxyGroup = this._handledProxyGroup || record.proxyGroupId;\n\n                    if (record.proxyGroupId !== this._handledProxyGroup || !record.proxyGroupId) {\n                        this._handler.cancelAll();\n                        this._clearList();\n                        this._handledProxyGroup = null;\n                    }\n                }\n            }\n\n            if (canned) {\n                this._templating.addFileToCache(id, this._options.formatFileName(name), prependData, dontDisplay);\n                this._templating.updateThumbnail(id, this._thumbnailUrls[id], true, this._options.thumbnails.customResizer);\n            }\n            else {\n                this._templating.addFile(id, this._options.formatFileName(name), prependData, dontDisplay);\n                this._templating.generatePreview(id, this.getFile(id), this._options.thumbnails.customResizer);\n            }\n\n            this._filesInBatchAddedToUi += 1;\n\n            if (canned ||\n                (this._options.display.fileSizeOnSubmit && qq.supportedFeatures.ajaxUploading)) {\n\n                this._displayFileSize(id);\n            }\n        },\n\n        _clearList: function() {\n            this._templating.clearFiles();\n            this.clearStoredFiles();\n        },\n\n        _displayFileSize: function(id, loadedSize, totalSize) {\n            var size = this.getSize(id),\n                sizeForDisplay = this._formatSize(size);\n\n            if (size >= 0) {\n                if (loadedSize !== undefined && totalSize !== undefined) {\n                    sizeForDisplay = this._formatProgress(loadedSize, totalSize);\n                }\n\n                this._templating.updateSize(id, sizeForDisplay);\n            }\n        },\n\n        _formatProgress: function(uploadedSize, totalSize) {\n            var message = this._options.text.formatProgress;\n            function r(name, replacement) { message = message.replace(name, replacement); }\n\n            r(\"{percent}\", Math.round(uploadedSize / totalSize * 100));\n            r(\"{total_size}\", this._formatSize(totalSize));\n            return message;\n        },\n\n        _controlFailureTextDisplay: function(id, response) {\n            var mode, responseProperty, failureReason;\n\n            mode = this._options.failedUploadTextDisplay.mode;\n            responseProperty = this._options.failedUploadTextDisplay.responseProperty;\n\n            if (mode === \"custom\") {\n                failureReason = response[responseProperty];\n                if (!failureReason) {\n                    failureReason = this._options.text.failUpload;\n                }\n\n                this._templating.setStatusText(id, failureReason);\n\n                if (this._options.failedUploadTextDisplay.enableTooltip) {\n                    this._showTooltip(id, failureReason);\n                }\n            }\n            else if (mode === \"default\") {\n                this._templating.setStatusText(id, this._options.text.failUpload);\n            }\n            else if (mode !== \"none\") {\n                this.log(\"failedUploadTextDisplay.mode value of '\" + mode + \"' is not valid\", \"warn\");\n            }\n        },\n\n        _showTooltip: function(id, text) {\n            this._templating.getFileContainer(id).title = text;\n        },\n\n        _showCancelLink: function(id) {\n            if (!this._options.disableCancelForFormUploads || qq.supportedFeatures.ajaxUploading) {\n                this._templating.showCancel(id);\n            }\n        },\n\n        _itemError: function(code, name, item) {\n            var message = this._parent.prototype._itemError.apply(this, arguments);\n            this._options.showMessage(message);\n        },\n\n        _batchError: function(message) {\n            this._parent.prototype._batchError.apply(this, arguments);\n            this._options.showMessage(message);\n        },\n\n        _setupPastePrompt: function() {\n            var self = this;\n\n            this._options.callbacks.onPasteReceived = function() {\n                var message = self._options.paste.namePromptMessage,\n                    defaultVal = self._options.paste.defaultName;\n\n                return self._options.showPrompt(message, defaultVal);\n            };\n        },\n\n        _fileOrBlobRejected: function(id, name) {\n            this._totalFilesInBatch -= 1;\n            this._parent.prototype._fileOrBlobRejected.apply(this, arguments);\n        },\n\n        _prepareItemsForUpload: function(items, params, endpoint) {\n            this._totalFilesInBatch = items.length;\n            this._filesInBatchAddedToUi = 0;\n            this._parent.prototype._prepareItemsForUpload.apply(this, arguments);\n        },\n\n        _maybeUpdateThumbnail: function(fileId) {\n            var thumbnailUrl = this._thumbnailUrls[fileId],\n                fileStatus = this.getUploads({id: fileId}).status;\n\n            if (fileStatus !== qq.status.DELETED &&\n                (thumbnailUrl ||\n                this._options.thumbnails.placeholders.waitUntilResponse ||\n                !qq.supportedFeatures.imagePreviews)) {\n\n                // This will replace the \"waiting\" placeholder with a \"preview not available\" placeholder\n                // if called with a null thumbnailUrl.\n                this._templating.updateThumbnail(fileId, thumbnailUrl, this._options.thumbnails.customResizer);\n            }\n        },\n\n        _addCannedFile: function(sessionData) {\n            var id = this._parent.prototype._addCannedFile.apply(this, arguments);\n\n            this._addToList(id, this.getName(id), true);\n            this._templating.hideSpinner(id);\n            this._templating.hideCancel(id);\n            this._markFileAsSuccessful(id);\n\n            return id;\n        },\n\n        _setSize: function(id, newSize) {\n            this._parent.prototype._setSize.apply(this, arguments);\n\n            this._templating.updateSize(id, this._formatSize(newSize));\n        },\n\n        _sessionRequestComplete: function() {\n            this._templating.addCacheToDom();\n            this._parent.prototype._sessionRequestComplete.apply(this, arguments);\n        }\n    };\n}());\n","/*globals qq */\n/**\n * This defines FineUploader mode, which is a default UI w/ drag & drop uploading.\n */\nqq.FineUploader = function(o, namespace) {\n    \"use strict\";\n\n    var self = this;\n\n    // By default this should inherit instance data from FineUploaderBasic, but this can be overridden\n    // if the (internal) caller defines a different parent.  The parent is also used by\n    // the private and public API functions that need to delegate to a parent function.\n    this._parent = namespace ? qq[namespace].FineUploaderBasic : qq.FineUploaderBasic;\n    this._parent.apply(this, arguments);\n\n    // Options provided by FineUploader mode\n    qq.extend(this._options, {\n        element: null,\n\n        button: null,\n\n        listElement: null,\n\n        dragAndDrop: {\n            extraDropzones: [],\n            reportDirectoryPaths: false\n        },\n\n        text: {\n            formatProgress: \"{percent}% of {total_size}\",\n            failUpload: \"Upload failed\",\n            waitingForResponse: \"Processing...\",\n            paused: \"Paused\"\n        },\n\n        template: \"qq-template\",\n\n        classes: {\n            retrying: \"qq-upload-retrying\",\n            retryable: \"qq-upload-retryable\",\n            success: \"qq-upload-success\",\n            fail: \"qq-upload-fail\",\n            editable: \"qq-editable\",\n            hide: \"qq-hide\",\n            dropActive: \"qq-upload-drop-area-active\"\n        },\n\n        failedUploadTextDisplay: {\n            mode: \"default\", //default, custom, or none\n            responseProperty: \"error\",\n            enableTooltip: true\n        },\n\n        messages: {\n            tooManyFilesError: \"You may only drop one file\",\n            unsupportedBrowser: \"Unrecoverable error - this browser does not permit file uploading of any kind.\"\n        },\n\n        retry: {\n            showAutoRetryNote: true,\n            autoRetryNote: \"Retrying {retryNum}/{maxAuto}...\"\n        },\n\n        deleteFile: {\n            forceConfirm: false,\n            confirmMessage: \"Are you sure you want to delete {filename}?\",\n            deletingStatusText: \"Deleting...\",\n            deletingFailedText: \"Delete failed\"\n\n        },\n\n        display: {\n            fileSizeOnSubmit: false,\n            prependFiles: false\n        },\n\n        paste: {\n            promptForName: false,\n            namePromptMessage: \"Please name this image\"\n        },\n\n        thumbnails: {\n            customResizer: null,\n            maxCount: 0,\n            placeholders: {\n                waitUntilResponse: false,\n                notAvailablePath: null,\n                waitingPath: null\n            },\n            timeBetweenThumbs: 750\n        },\n\n        scaling: {\n            hideScaled: false\n        },\n\n        showMessage: function(message) {\n            if (self._templating.hasDialog(\"alert\")) {\n                return self._templating.showDialog(\"alert\", message);\n            }\n            else {\n                setTimeout(function() {\n                    window.alert(message);\n                }, 0);\n            }\n        },\n\n        showConfirm: function(message) {\n            if (self._templating.hasDialog(\"confirm\")) {\n                return self._templating.showDialog(\"confirm\", message);\n            }\n            else {\n                return window.confirm(message);\n            }\n        },\n\n        showPrompt: function(message, defaultValue) {\n            if (self._templating.hasDialog(\"prompt\")) {\n                return self._templating.showDialog(\"prompt\", message, defaultValue);\n            }\n            else {\n                return window.prompt(message, defaultValue);\n            }\n        }\n    }, true);\n\n    // Replace any default options with user defined ones\n    qq.extend(this._options, o, true);\n\n    this._templating = new qq.Templating({\n        log: qq.bind(this.log, this),\n        templateIdOrEl: this._options.template,\n        containerEl: this._options.element,\n        fileContainerEl: this._options.listElement,\n        button: this._options.button,\n        imageGenerator: this._imageGenerator,\n        classes: {\n            hide: this._options.classes.hide,\n            editable: this._options.classes.editable\n        },\n        limits: {\n            maxThumbs: this._options.thumbnails.maxCount,\n            timeBetweenThumbs: this._options.thumbnails.timeBetweenThumbs\n        },\n        placeholders: {\n            waitUntilUpdate: this._options.thumbnails.placeholders.waitUntilResponse,\n            thumbnailNotAvailable: this._options.thumbnails.placeholders.notAvailablePath,\n            waitingForThumbnail: this._options.thumbnails.placeholders.waitingPath\n        },\n        text: this._options.text\n    });\n\n    if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\n        this._templating.renderFailure(this._options.messages.unsupportedBrowserIos8Safari);\n    }\n    else if (!qq.supportedFeatures.uploading || (this._options.cors.expected && !qq.supportedFeatures.uploadCors)) {\n        this._templating.renderFailure(this._options.messages.unsupportedBrowser);\n    }\n    else {\n        this._wrapCallbacks();\n\n        this._templating.render();\n\n        this._classes = this._options.classes;\n\n        if (!this._options.button && this._templating.getButton()) {\n            this._defaultButtonId = this._createUploadButton({\n                element: this._templating.getButton(),\n                title: this._options.text.fileInputTitle\n            }).getButtonId();\n        }\n\n        this._setupClickAndEditEventHandlers();\n\n        if (qq.DragAndDrop && qq.supportedFeatures.fileDrop) {\n            this._dnd = this._setupDragAndDrop();\n        }\n\n        if (this._options.paste.targetElement && this._options.paste.promptForName) {\n            if (qq.PasteSupport) {\n                this._setupPastePrompt();\n            }\n            else {\n                this.log(\"Paste support module not found.\", \"error\");\n            }\n        }\n\n        this._totalFilesInBatch = 0;\n        this._filesInBatchAddedToUi = 0;\n    }\n};\n\n// Inherit the base public & private API methods\nqq.extend(qq.FineUploader.prototype, qq.basePublicApi);\nqq.extend(qq.FineUploader.prototype, qq.basePrivateApi);\n\n// Add the FineUploader/default UI public & private UI methods, which may override some base methods.\nqq.extend(qq.FineUploader.prototype, qq.uiPublicApi);\nqq.extend(qq.FineUploader.prototype, qq.uiPrivateApi);\n","/* globals qq */\n/* jshint -W065 */\n/**\n * Module responsible for rendering all Fine Uploader UI templates.  This module also asserts at least\n * a limited amount of control over the template elements after they are added to the DOM.\n * Wherever possible, this module asserts total control over template elements present in the DOM.\n *\n * @param spec Specification object used to control various templating behaviors\n * @constructor\n */\nqq.Templating = function(spec) {\n    \"use strict\";\n\n    var FILE_ID_ATTR = \"qq-file-id\",\n        FILE_CLASS_PREFIX = \"qq-file-id-\",\n        THUMBNAIL_MAX_SIZE_ATTR = \"qq-max-size\",\n        THUMBNAIL_SERVER_SCALE_ATTR = \"qq-server-scale\",\n        // This variable is duplicated in the DnD module since it can function as a standalone as well\n        HIDE_DROPZONE_ATTR = \"qq-hide-dropzone\",\n        DROPZPONE_TEXT_ATTR = \"qq-drop-area-text\",\n        IN_PROGRESS_CLASS = \"qq-in-progress\",\n        HIDDEN_FOREVER_CLASS = \"qq-hidden-forever\",\n        fileBatch = {\n            content: document.createDocumentFragment(),\n            map: {}\n        },\n        isCancelDisabled = false,\n        generatedThumbnails = 0,\n        thumbnailQueueMonitorRunning = false,\n        thumbGenerationQueue = [],\n        thumbnailMaxSize = -1,\n        options = {\n            log: null,\n            limits: {\n                maxThumbs: 0,\n                timeBetweenThumbs: 750\n            },\n            templateIdOrEl: \"qq-template\",\n            containerEl: null,\n            fileContainerEl: null,\n            button: null,\n            imageGenerator: null,\n            classes: {\n                hide: \"qq-hide\",\n                editable: \"qq-editable\"\n            },\n            placeholders: {\n                waitUntilUpdate: false,\n                thumbnailNotAvailable: null,\n                waitingForThumbnail: null\n            },\n            text: {\n                paused: \"Paused\"\n            }\n        },\n        selectorClasses = {\n            button: \"qq-upload-button-selector\",\n            alertDialog: \"qq-alert-dialog-selector\",\n            dialogCancelButton: \"qq-cancel-button-selector\",\n            confirmDialog: \"qq-confirm-dialog-selector\",\n            dialogMessage: \"qq-dialog-message-selector\",\n            dialogOkButton: \"qq-ok-button-selector\",\n            promptDialog: \"qq-prompt-dialog-selector\",\n            uploader: \"qq-uploader-selector\",\n            drop: \"qq-upload-drop-area-selector\",\n            list: \"qq-upload-list-selector\",\n            progressBarContainer: \"qq-progress-bar-container-selector\",\n            progressBar: \"qq-progress-bar-selector\",\n            totalProgressBarContainer: \"qq-total-progress-bar-container-selector\",\n            totalProgressBar: \"qq-total-progress-bar-selector\",\n            file: \"qq-upload-file-selector\",\n            spinner: \"qq-upload-spinner-selector\",\n            size: \"qq-upload-size-selector\",\n            cancel: \"qq-upload-cancel-selector\",\n            pause: \"qq-upload-pause-selector\",\n            continueButton: \"qq-upload-continue-selector\",\n            deleteButton: \"qq-upload-delete-selector\",\n            retry: \"qq-upload-retry-selector\",\n            statusText: \"qq-upload-status-text-selector\",\n            editFilenameInput: \"qq-edit-filename-selector\",\n            editNameIcon: \"qq-edit-filename-icon-selector\",\n            dropText: \"qq-upload-drop-area-text-selector\",\n            dropProcessing: \"qq-drop-processing-selector\",\n            dropProcessingSpinner: \"qq-drop-processing-spinner-selector\",\n            thumbnail: \"qq-thumbnail-selector\"\n        },\n        previewGeneration = {},\n        cachedThumbnailNotAvailableImg = new qq.Promise(),\n        cachedWaitingForThumbnailImg = new qq.Promise(),\n        log,\n        isEditElementsExist,\n        isRetryElementExist,\n        templateDom,\n        container,\n        fileList,\n        showThumbnails,\n        serverScale,\n\n        // During initialization of the templating module we should cache any\n        // placeholder images so we can quickly swap them into the file list on demand.\n        // Any placeholder images that cannot be loaded/found are simply ignored.\n        cacheThumbnailPlaceholders = function() {\n            var notAvailableUrl =  options.placeholders.thumbnailNotAvailable,\n                waitingUrl = options.placeholders.waitingForThumbnail,\n                spec = {\n                    maxSize: thumbnailMaxSize,\n                    scale: serverScale\n                };\n\n            if (showThumbnails) {\n                if (notAvailableUrl) {\n                    options.imageGenerator.generate(notAvailableUrl, new Image(), spec).then(\n                        function(updatedImg) {\n                            cachedThumbnailNotAvailableImg.success(updatedImg);\n                        },\n                        function() {\n                            cachedThumbnailNotAvailableImg.failure();\n                            log(\"Problem loading 'not available' placeholder image at \" + notAvailableUrl, \"error\");\n                        }\n                    );\n                }\n                else {\n                    cachedThumbnailNotAvailableImg.failure();\n                }\n\n                if (waitingUrl) {\n                    options.imageGenerator.generate(waitingUrl, new Image(), spec).then(\n                        function(updatedImg) {\n                            cachedWaitingForThumbnailImg.success(updatedImg);\n                        },\n                        function() {\n                            cachedWaitingForThumbnailImg.failure();\n                            log(\"Problem loading 'waiting for thumbnail' placeholder image at \" + waitingUrl, \"error\");\n                        }\n                    );\n                }\n                else {\n                    cachedWaitingForThumbnailImg.failure();\n                }\n            }\n        },\n\n        // Displays a \"waiting for thumbnail\" type placeholder image\n        // iff we were able to load it during initialization of the templating module.\n        displayWaitingImg = function(thumbnail) {\n            var waitingImgPlacement = new qq.Promise();\n\n            cachedWaitingForThumbnailImg.then(function(img) {\n                maybeScalePlaceholderViaCss(img, thumbnail);\n                /* jshint eqnull:true */\n                if (!thumbnail.src) {\n                    thumbnail.src = img.src;\n                    thumbnail.onload = function() {\n                        thumbnail.onload = null;\n                        show(thumbnail);\n                        waitingImgPlacement.success();\n                    };\n                }\n                else {\n                    waitingImgPlacement.success();\n                }\n            }, function() {\n                // In some browsers (such as IE9 and older) an img w/out a src attribute\n                // are displayed as \"broken\" images, so we should just hide the img tag\n                // if we aren't going to display the \"waiting\" placeholder.\n                hide(thumbnail);\n                waitingImgPlacement.success();\n            });\n\n            return waitingImgPlacement;\n        },\n\n        generateNewPreview = function(id, blob, spec) {\n            var thumbnail = getThumbnail(id);\n\n            log(\"Generating new thumbnail for \" + id);\n            blob.qqThumbnailId = id;\n\n            return options.imageGenerator.generate(blob, thumbnail, spec).then(\n                function() {\n                    generatedThumbnails++;\n                    show(thumbnail);\n                    previewGeneration[id].success();\n                },\n                function() {\n                    previewGeneration[id].failure();\n\n                    // Display the \"not available\" placeholder img only if we are\n                    // not expecting a thumbnail at a later point, such as in a server response.\n                    if (!options.placeholders.waitUntilUpdate) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                    }\n                });\n        },\n\n        generateNextQueuedPreview = function() {\n            if (thumbGenerationQueue.length) {\n                thumbnailQueueMonitorRunning = true;\n\n                var queuedThumbRequest = thumbGenerationQueue.shift();\n\n                if (queuedThumbRequest.update) {\n                    processUpdateQueuedPreviewRequest(queuedThumbRequest);\n                }\n                else {\n                    processNewQueuedPreviewRequest(queuedThumbRequest);\n                }\n            }\n            else {\n                thumbnailQueueMonitorRunning = false;\n            }\n        },\n\n        getCancel = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.cancel);\n        },\n\n        getContinue = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.continueButton);\n        },\n\n        getDialog = function(type) {\n            return getTemplateEl(container, selectorClasses[type + \"Dialog\"]);\n        },\n\n        getDelete = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.deleteButton);\n        },\n\n        getDropProcessing = function() {\n            return getTemplateEl(container, selectorClasses.dropProcessing);\n        },\n\n        getEditIcon = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.editNameIcon);\n        },\n\n        getFile = function(id) {\n            return fileBatch.map[id] || qq(fileList).getFirstByClass(FILE_CLASS_PREFIX + id);\n        },\n\n        getFilename = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.file);\n        },\n\n        getPause = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.pause);\n        },\n\n        getProgress = function(id) {\n            /* jshint eqnull:true */\n            // Total progress bar\n            if (id == null) {\n                return getTemplateEl(container, selectorClasses.totalProgressBarContainer) ||\n                    getTemplateEl(container, selectorClasses.totalProgressBar);\n            }\n\n            // Per-file progress bar\n            return getTemplateEl(getFile(id), selectorClasses.progressBarContainer) ||\n                getTemplateEl(getFile(id), selectorClasses.progressBar);\n        },\n\n        getRetry = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.retry);\n        },\n\n        getSize = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.size);\n        },\n\n        getSpinner = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.spinner);\n        },\n\n        getTemplateEl = function(context, cssClass) {\n            return context && qq(context).getFirstByClass(cssClass);\n        },\n\n        getThumbnail = function(id) {\n            return showThumbnails && getTemplateEl(getFile(id), selectorClasses.thumbnail);\n        },\n\n        hide = function(el) {\n            el && qq(el).addClass(options.classes.hide);\n        },\n\n        // Ensures a placeholder image does not exceed any max size specified\n        // via `style` attribute properties iff <canvas> was not used to scale\n        // the placeholder AND the target <img> doesn't already have these `style` attribute properties set.\n        maybeScalePlaceholderViaCss = function(placeholder, thumbnail) {\n            var maxWidth = placeholder.style.maxWidth,\n                maxHeight = placeholder.style.maxHeight;\n\n            if (maxHeight && maxWidth && !thumbnail.style.maxWidth && !thumbnail.style.maxHeight) {\n                qq(thumbnail).css({\n                    maxWidth: maxWidth,\n                    maxHeight: maxHeight\n                });\n            }\n        },\n\n        // Displays a \"thumbnail not available\" type placeholder image\n        // iff we were able to load this placeholder during initialization\n        // of the templating module or after preview generation has failed.\n        maybeSetDisplayNotAvailableImg = function(id, thumbnail) {\n            var previewing = previewGeneration[id] || new qq.Promise().failure(),\n                notAvailableImgPlacement = new qq.Promise();\n\n            cachedThumbnailNotAvailableImg.then(function(img) {\n                previewing.then(\n                    function() {\n                        notAvailableImgPlacement.success();\n                    },\n                    function() {\n                        maybeScalePlaceholderViaCss(img, thumbnail);\n\n                        thumbnail.onload = function() {\n                            thumbnail.onload = null;\n                            notAvailableImgPlacement.success();\n                        };\n\n                        thumbnail.src = img.src;\n                        show(thumbnail);\n                    }\n                );\n            });\n\n            return notAvailableImgPlacement;\n        },\n\n        /**\n         * Grabs the HTML from the script tag holding the template markup.  This function will also adjust\n         * some internally-tracked state variables based on the contents of the template.\n         * The template is filtered so that irrelevant elements (such as the drop zone if DnD is not supported)\n         * are omitted from the DOM.  Useful errors will be thrown if the template cannot be parsed.\n         *\n         * @returns {{template: *, fileTemplate: *}} HTML for the top-level file items templates\n         */\n        parseAndGetTemplate = function() {\n            var scriptEl,\n                scriptHtml,\n                fileListNode,\n                tempTemplateEl,\n                fileListEl,\n                defaultButton,\n                dropArea,\n                thumbnail,\n                dropProcessing,\n                dropTextEl,\n                uploaderEl;\n\n            log(\"Parsing template\");\n\n            /*jshint -W116*/\n            if (options.templateIdOrEl == null) {\n                throw new Error(\"You MUST specify either a template element or ID!\");\n            }\n\n            // Grab the contents of the script tag holding the template.\n            if (qq.isString(options.templateIdOrEl)) {\n                scriptEl = document.getElementById(options.templateIdOrEl);\n\n                if (scriptEl === null) {\n                    throw new Error(qq.format(\"Cannot find template script at ID '{}'!\", options.templateIdOrEl));\n                }\n\n                scriptHtml = scriptEl.innerHTML;\n            }\n            else {\n                if (options.templateIdOrEl.innerHTML === undefined) {\n                    throw new Error(\"You have specified an invalid value for the template option!  \" +\n                        \"It must be an ID or an Element.\");\n                }\n\n                scriptHtml = options.templateIdOrEl.innerHTML;\n            }\n\n            scriptHtml = qq.trimStr(scriptHtml);\n            tempTemplateEl = document.createElement(\"div\");\n            tempTemplateEl.appendChild(qq.toElement(scriptHtml));\n            uploaderEl = qq(tempTemplateEl).getFirstByClass(selectorClasses.uploader);\n\n            // Don't include the default template button in the DOM\n            // if an alternate button container has been specified.\n            if (options.button) {\n                defaultButton = qq(tempTemplateEl).getFirstByClass(selectorClasses.button);\n                if (defaultButton) {\n                    qq(defaultButton).remove();\n                }\n            }\n\n            // Omit the drop processing element from the DOM if DnD is not supported by the UA,\n            // or the drag and drop module is not found.\n            // NOTE: We are consciously not removing the drop zone if the UA doesn't support DnD\n            // to support layouts where the drop zone is also a container for visible elements,\n            // such as the file list.\n            if (!qq.DragAndDrop || !qq.supportedFeatures.fileDrop) {\n                dropProcessing = qq(tempTemplateEl).getFirstByClass(selectorClasses.dropProcessing);\n                if (dropProcessing) {\n                    qq(dropProcessing).remove();\n                }\n            }\n\n            dropArea = qq(tempTemplateEl).getFirstByClass(selectorClasses.drop);\n\n            // If DnD is not available then remove\n            // it from the DOM as well.\n            if (dropArea && !qq.DragAndDrop) {\n                log(\"DnD module unavailable.\", \"info\");\n                qq(dropArea).remove();\n            }\n\n            if (!qq.supportedFeatures.fileDrop) {\n                // don't display any \"drop files to upload\" background text\n                uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\n\n                if (dropArea && qq(dropArea).hasAttribute(HIDE_DROPZONE_ATTR)) {\n                    // If there is a drop area defined in the template, and the current UA doesn't support DnD,\n                    // and the drop area is marked as \"hide before enter\", ensure it is hidden as the DnD module\n                    // will not do this (since we will not be loading the DnD module)\n                    qq(dropArea).css({\n                        display: \"none\"\n                    });\n                }\n            }\n            else if (qq(uploaderEl).hasAttribute(DROPZPONE_TEXT_ATTR) && dropArea) {\n                dropTextEl = qq(dropArea).getFirstByClass(selectorClasses.dropText);\n                dropTextEl && qq(dropTextEl).remove();\n            }\n\n            // Ensure the `showThumbnails` flag is only set if the thumbnail element\n            // is present in the template AND the current UA is capable of generating client-side previews.\n            thumbnail = qq(tempTemplateEl).getFirstByClass(selectorClasses.thumbnail);\n            if (!showThumbnails) {\n                thumbnail && qq(thumbnail).remove();\n            }\n            else if (thumbnail) {\n                thumbnailMaxSize = parseInt(thumbnail.getAttribute(THUMBNAIL_MAX_SIZE_ATTR));\n                // Only enforce max size if the attr value is non-zero\n                thumbnailMaxSize = thumbnailMaxSize > 0 ? thumbnailMaxSize : null;\n\n                serverScale = qq(thumbnail).hasAttribute(THUMBNAIL_SERVER_SCALE_ATTR);\n            }\n            showThumbnails = showThumbnails && thumbnail;\n\n            isEditElementsExist = qq(tempTemplateEl).getByClass(selectorClasses.editFilenameInput).length > 0;\n            isRetryElementExist = qq(tempTemplateEl).getByClass(selectorClasses.retry).length > 0;\n\n            fileListNode = qq(tempTemplateEl).getFirstByClass(selectorClasses.list);\n            /*jshint -W116*/\n            if (fileListNode == null) {\n                throw new Error(\"Could not find the file list container in the template!\");\n            }\n\n            fileListEl = fileListNode.children[0].cloneNode(true);\n            fileListNode.innerHTML = \"\";\n\n            // We must call `createElement` in IE8 in order to target and hide any <dialog> via CSS\n            if (tempTemplateEl.getElementsByTagName(\"DIALOG\").length) {\n                document.createElement(\"dialog\");\n            }\n\n            log(\"Template parsing complete\");\n\n            return {\n                template: tempTemplateEl,\n                fileTemplate: fileListEl\n            };\n        },\n\n        prependFile = function(el, index, fileList) {\n            var parentEl = fileList,\n                beforeEl = parentEl.firstChild;\n\n            if (index > 0) {\n                beforeEl = qq(parentEl).children()[index].nextSibling;\n\n            }\n\n            parentEl.insertBefore(el, beforeEl);\n        },\n\n        processNewQueuedPreviewRequest = function(queuedThumbRequest) {\n            var id = queuedThumbRequest.id,\n                optFileOrBlob = queuedThumbRequest.optFileOrBlob,\n                relatedThumbnailId = optFileOrBlob && optFileOrBlob.qqThumbnailId,\n                thumbnail = getThumbnail(id),\n                spec = {\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\n                    maxSize: thumbnailMaxSize,\n                    orient: true,\n                    scale: true\n                };\n\n            if (qq.supportedFeatures.imagePreviews) {\n                if (thumbnail) {\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                        generateNextQueuedPreview();\n                    }\n                    else {\n                        displayWaitingImg(thumbnail).done(function() {\n                            previewGeneration[id] = new qq.Promise();\n\n                            previewGeneration[id].done(function() {\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            });\n\n                            /* jshint eqnull: true */\n                            // If we've already generated an <img> for this file, use the one that exists,\n                            // don't waste resources generating a new one.\n                            if (relatedThumbnailId != null) {\n                                useCachedPreview(id, relatedThumbnailId);\n                            }\n                            else {\n                                generateNewPreview(id, optFileOrBlob, spec);\n                            }\n                        });\n                    }\n                }\n                // File element in template may have been removed, so move on to next item in queue\n                else {\n                    generateNextQueuedPreview();\n                }\n            }\n            else if (thumbnail) {\n                displayWaitingImg(thumbnail);\n                generateNextQueuedPreview();\n            }\n        },\n\n        processUpdateQueuedPreviewRequest = function(queuedThumbRequest) {\n            var id = queuedThumbRequest.id,\n                thumbnailUrl = queuedThumbRequest.thumbnailUrl,\n                showWaitingImg = queuedThumbRequest.showWaitingImg,\n                thumbnail = getThumbnail(id),\n                spec = {\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\n                    scale: serverScale,\n                    maxSize: thumbnailMaxSize\n                };\n\n            if (thumbnail) {\n                if (thumbnailUrl) {\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                        generateNextQueuedPreview();\n                    }\n                    else {\n                        if (showWaitingImg) {\n                            displayWaitingImg(thumbnail);\n                        }\n\n                        return options.imageGenerator.generate(thumbnailUrl, thumbnail, spec).then(\n                            function() {\n                                show(thumbnail);\n                                generatedThumbnails++;\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            },\n\n                            function() {\n                                maybeSetDisplayNotAvailableImg(id, thumbnail);\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            }\n                        );\n                    }\n                }\n                else {\n                    maybeSetDisplayNotAvailableImg(id, thumbnail);\n                    generateNextQueuedPreview();\n                }\n            }\n        },\n\n        setProgressBarWidth = function(id, percent) {\n            var bar = getProgress(id),\n                /* jshint eqnull:true */\n                progressBarSelector = id == null ? selectorClasses.totalProgressBar : selectorClasses.progressBar;\n\n            if (bar && !qq(bar).hasClass(progressBarSelector)) {\n                bar = qq(bar).getFirstByClass(progressBarSelector);\n            }\n\n            if (bar) {\n                qq(bar).css({width: percent + \"%\"});\n                bar.setAttribute(\"aria-valuenow\", percent);\n            }\n        },\n\n        show = function(el) {\n            el && qq(el).removeClass(options.classes.hide);\n        },\n\n        useCachedPreview = function(targetThumbnailId, cachedThumbnailId) {\n            var targetThumbnail = getThumbnail(targetThumbnailId),\n                cachedThumbnail = getThumbnail(cachedThumbnailId);\n\n            log(qq.format(\"ID {} is the same file as ID {}.  Will use generated thumbnail from ID {} instead.\", targetThumbnailId, cachedThumbnailId, cachedThumbnailId));\n\n            // Generation of the related thumbnail may still be in progress, so, wait until it is done.\n            previewGeneration[cachedThumbnailId].then(function() {\n                generatedThumbnails++;\n                previewGeneration[targetThumbnailId].success();\n                log(qq.format(\"Now using previously generated thumbnail created for ID {} on ID {}.\", cachedThumbnailId, targetThumbnailId));\n                targetThumbnail.src = cachedThumbnail.src;\n                show(targetThumbnail);\n            },\n            function() {\n                previewGeneration[targetThumbnailId].failure();\n                if (!options.placeholders.waitUntilUpdate) {\n                    maybeSetDisplayNotAvailableImg(targetThumbnailId, targetThumbnail);\n                }\n            });\n        };\n\n    qq.extend(options, spec);\n    log = options.log;\n\n    // No need to worry about conserving CPU or memory on older browsers,\n    // since there is no ability to preview, and thumbnail display is primitive and quick.\n    if (!qq.supportedFeatures.imagePreviews) {\n        options.limits.timeBetweenThumbs = 0;\n        options.limits.maxThumbs = 0;\n    }\n\n    container = options.containerEl;\n    showThumbnails = options.imageGenerator !== undefined;\n    templateDom = parseAndGetTemplate();\n\n    cacheThumbnailPlaceholders();\n\n    qq.extend(this, {\n        render: function() {\n            log(\"Rendering template in DOM.\");\n\n            generatedThumbnails = 0;\n\n            container.appendChild(templateDom.template.cloneNode(true));\n            hide(getDropProcessing());\n            this.hideTotalProgress();\n            fileList = options.fileContainerEl || getTemplateEl(container, selectorClasses.list);\n\n            log(\"Template rendering complete\");\n        },\n\n        renderFailure: function(message) {\n            var cantRenderEl = qq.toElement(message);\n            container.innerHTML = \"\";\n            container.appendChild(cantRenderEl);\n        },\n\n        reset: function() {\n            container.innerHTML = \"\";\n            this.render();\n        },\n\n        clearFiles: function() {\n            fileList.innerHTML = \"\";\n        },\n\n        disableCancel: function() {\n            isCancelDisabled = true;\n        },\n\n        addFile: function(id, name, prependInfo, hideForever, batch) {\n            var fileEl = templateDom.fileTemplate.cloneNode(true),\n                fileNameEl = getTemplateEl(fileEl, selectorClasses.file),\n                uploaderEl = getTemplateEl(container, selectorClasses.uploader),\n                fileContainer = batch ? fileBatch.content : fileList,\n                thumb;\n\n            if (batch) {\n                fileBatch.map[id] = fileEl;\n            }\n\n            qq(fileEl).addClass(FILE_CLASS_PREFIX + id);\n            uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\n\n            if (fileNameEl) {\n                qq(fileNameEl).setText(name);\n                fileNameEl.setAttribute(\"title\", name);\n            }\n\n            fileEl.setAttribute(FILE_ID_ATTR, id);\n\n            if (prependInfo) {\n                prependFile(fileEl, prependInfo.index, fileContainer);\n            }\n            else {\n                fileContainer.appendChild(fileEl);\n            }\n\n            if (hideForever) {\n                fileEl.style.display = \"none\";\n                qq(fileEl).addClass(HIDDEN_FOREVER_CLASS);\n            }\n            else {\n                hide(getProgress(id));\n                hide(getSize(id));\n                hide(getDelete(id));\n                hide(getRetry(id));\n                hide(getPause(id));\n                hide(getContinue(id));\n\n                if (isCancelDisabled) {\n                    this.hideCancel(id);\n                }\n\n                thumb = getThumbnail(id);\n                if (thumb && !thumb.src) {\n                    cachedWaitingForThumbnailImg.then(function(waitingImg) {\n                        thumb.src = waitingImg.src;\n                        if (waitingImg.style.maxHeight && waitingImg.style.maxWidth) {\n                            qq(thumb).css({\n                                maxHeight: waitingImg.style.maxHeight,\n                                maxWidth: waitingImg.style.maxWidth\n                            });\n                        }\n\n                        show(thumb);\n                    });\n                }\n            }\n        },\n\n        addFileToCache: function(id, name, prependInfo, hideForever) {\n            this.addFile(id, name, prependInfo, hideForever, true);\n        },\n\n        addCacheToDom: function() {\n            fileList.appendChild(fileBatch.content);\n            fileBatch.content = document.createDocumentFragment();\n            fileBatch.map = {};\n        },\n\n        removeFile: function(id) {\n            qq(getFile(id)).remove();\n        },\n\n        getFileId: function(el) {\n            var currentNode = el;\n\n            if (currentNode) {\n                /*jshint -W116*/\n                while (currentNode.getAttribute(FILE_ID_ATTR) == null) {\n                    currentNode = currentNode.parentNode;\n                }\n\n                return parseInt(currentNode.getAttribute(FILE_ID_ATTR));\n            }\n        },\n\n        getFileList: function() {\n            return fileList;\n        },\n\n        markFilenameEditable: function(id) {\n            var filename = getFilename(id);\n\n            filename && qq(filename).addClass(options.classes.editable);\n        },\n\n        updateFilename: function(id, name) {\n            var filenameEl = getFilename(id);\n\n            if (filenameEl) {\n                qq(filenameEl).setText(name);\n                filenameEl.setAttribute(\"title\", name);\n            }\n        },\n\n        hideFilename: function(id) {\n            hide(getFilename(id));\n        },\n\n        showFilename: function(id) {\n            show(getFilename(id));\n        },\n\n        isFileName: function(el) {\n            return qq(el).hasClass(selectorClasses.file);\n        },\n\n        getButton: function() {\n            return options.button || getTemplateEl(container, selectorClasses.button);\n        },\n\n        hideDropProcessing: function() {\n            hide(getDropProcessing());\n        },\n\n        showDropProcessing: function() {\n            show(getDropProcessing());\n        },\n\n        getDropZone: function() {\n            return getTemplateEl(container, selectorClasses.drop);\n        },\n\n        isEditFilenamePossible: function() {\n            return isEditElementsExist;\n        },\n\n        hideRetry: function(id) {\n            hide(getRetry(id));\n        },\n\n        isRetryPossible: function() {\n            return isRetryElementExist;\n        },\n\n        showRetry: function(id) {\n            show(getRetry(id));\n        },\n\n        getFileContainer: function(id) {\n            return getFile(id);\n        },\n\n        showEditIcon: function(id) {\n            var icon = getEditIcon(id);\n\n            icon && qq(icon).addClass(options.classes.editable);\n        },\n\n        isHiddenForever: function(id) {\n            return qq(getFile(id)).hasClass(HIDDEN_FOREVER_CLASS);\n        },\n\n        hideEditIcon: function(id) {\n            var icon = getEditIcon(id);\n\n            icon && qq(icon).removeClass(options.classes.editable);\n        },\n\n        isEditIcon: function(el) {\n            return qq(el).hasClass(selectorClasses.editNameIcon, true);\n        },\n\n        getEditInput: function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.editFilenameInput);\n        },\n\n        isEditInput: function(el) {\n            return qq(el).hasClass(selectorClasses.editFilenameInput, true);\n        },\n\n        updateProgress: function(id, loaded, total) {\n            var bar = getProgress(id),\n                percent;\n\n            if (bar && total > 0) {\n                percent = Math.round(loaded / total * 100);\n\n                if (percent === 100) {\n                    hide(bar);\n                }\n                else {\n                    show(bar);\n                }\n\n                setProgressBarWidth(id, percent);\n            }\n        },\n\n        updateTotalProgress: function(loaded, total) {\n            this.updateProgress(null, loaded, total);\n        },\n\n        hideProgress: function(id) {\n            var bar = getProgress(id);\n\n            bar && hide(bar);\n        },\n\n        hideTotalProgress: function() {\n            this.hideProgress();\n        },\n\n        resetProgress: function(id) {\n            setProgressBarWidth(id, 0);\n            this.hideTotalProgress(id);\n        },\n\n        resetTotalProgress: function() {\n            this.resetProgress();\n        },\n\n        showCancel: function(id) {\n            if (!isCancelDisabled) {\n                var cancel = getCancel(id);\n\n                cancel && qq(cancel).removeClass(options.classes.hide);\n            }\n        },\n\n        hideCancel: function(id) {\n            hide(getCancel(id));\n        },\n\n        isCancel: function(el)  {\n            return qq(el).hasClass(selectorClasses.cancel, true);\n        },\n\n        allowPause: function(id) {\n            show(getPause(id));\n            hide(getContinue(id));\n        },\n\n        uploadPaused: function(id) {\n            this.setStatusText(id, options.text.paused);\n            this.allowContinueButton(id);\n            hide(getSpinner(id));\n        },\n\n        hidePause: function(id) {\n            hide(getPause(id));\n        },\n\n        isPause: function(el) {\n            return qq(el).hasClass(selectorClasses.pause, true);\n        },\n\n        isContinueButton: function(el) {\n            return qq(el).hasClass(selectorClasses.continueButton, true);\n        },\n\n        allowContinueButton: function(id) {\n            show(getContinue(id));\n            hide(getPause(id));\n        },\n\n        uploadContinued: function(id) {\n            this.setStatusText(id, \"\");\n            this.allowPause(id);\n            show(getSpinner(id));\n        },\n\n        showDeleteButton: function(id) {\n            show(getDelete(id));\n        },\n\n        hideDeleteButton: function(id) {\n            hide(getDelete(id));\n        },\n\n        isDeleteButton: function(el) {\n            return qq(el).hasClass(selectorClasses.deleteButton, true);\n        },\n\n        isRetry: function(el) {\n            return qq(el).hasClass(selectorClasses.retry, true);\n        },\n\n        updateSize: function(id, text) {\n            var size = getSize(id);\n\n            if (size) {\n                show(size);\n                qq(size).setText(text);\n            }\n        },\n\n        setStatusText: function(id, text) {\n            var textEl = getTemplateEl(getFile(id), selectorClasses.statusText);\n\n            if (textEl) {\n                /*jshint -W116*/\n                if (text == null) {\n                    qq(textEl).clearText();\n                }\n                else {\n                    qq(textEl).setText(text);\n                }\n            }\n        },\n\n        hideSpinner: function(id) {\n            qq(getFile(id)).removeClass(IN_PROGRESS_CLASS);\n            hide(getSpinner(id));\n        },\n\n        showSpinner: function(id) {\n            qq(getFile(id)).addClass(IN_PROGRESS_CLASS);\n            show(getSpinner(id));\n        },\n\n        generatePreview: function(id, optFileOrBlob, customResizeFunction) {\n            if (!this.isHiddenForever(id)) {\n                thumbGenerationQueue.push({id: id, customResizeFunction: customResizeFunction, optFileOrBlob: optFileOrBlob});\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\n            }\n        },\n\n        updateThumbnail: function(id, thumbnailUrl, showWaitingImg, customResizeFunction) {\n            if (!this.isHiddenForever(id)) {\n                thumbGenerationQueue.push({customResizeFunction: customResizeFunction, update: true, id: id, thumbnailUrl: thumbnailUrl, showWaitingImg: showWaitingImg});\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\n            }\n        },\n\n        hasDialog: function(type) {\n            return qq.supportedFeatures.dialogElement && !!getDialog(type);\n        },\n\n        showDialog: function(type, message, defaultValue) {\n            var dialog = getDialog(type),\n                messageEl = getTemplateEl(dialog, selectorClasses.dialogMessage),\n                inputEl = dialog.getElementsByTagName(\"INPUT\")[0],\n                cancelBtn = getTemplateEl(dialog, selectorClasses.dialogCancelButton),\n                okBtn = getTemplateEl(dialog, selectorClasses.dialogOkButton),\n                promise = new qq.Promise(),\n\n                closeHandler = function() {\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\n                    okBtn && okBtn.removeEventListener(\"click\", okClickHandler);\n                    promise.failure();\n                },\n\n                cancelClickHandler = function() {\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\n                    dialog.close();\n                },\n\n                okClickHandler = function() {\n                    dialog.removeEventListener(\"close\", closeHandler);\n                    okBtn.removeEventListener(\"click\", okClickHandler);\n                    dialog.close();\n\n                    promise.success(inputEl && inputEl.value);\n                };\n\n            dialog.addEventListener(\"close\", closeHandler);\n            cancelBtn.addEventListener(\"click\", cancelClickHandler);\n            okBtn && okBtn.addEventListener(\"click\", okClickHandler);\n\n            if (inputEl) {\n                inputEl.value = defaultValue;\n            }\n            messageEl.textContent = message;\n\n            dialog.showModal();\n\n            return promise;\n        }\n    });\n};\n","/*globals qq */\n// Base handler for UI (FineUploader mode) events.\n// Some more specific handlers inherit from this one.\nqq.UiEventHandler = function(s, protectedApi) {\n    \"use strict\";\n\n    var disposer = new qq.DisposeSupport(),\n        spec = {\n            eventType: \"click\",\n            attachTo: null,\n            onHandled: function(target, event) {}\n        };\n\n    // This makes up the \"public\" API methods that will be accessible\n    // to instances constructing a base or child handler\n    qq.extend(this, {\n        addHandler: function(element) {\n            addHandler(element);\n        },\n\n        dispose: function() {\n            disposer.dispose();\n        }\n    });\n\n    function addHandler(element) {\n        disposer.attach(element, spec.eventType, function(event) {\n            // Only in IE: the `event` is a property of the `window`.\n            event = event || window.event;\n\n            // On older browsers, we must check the `srcElement` instead of the `target`.\n            var target = event.target || event.srcElement;\n\n            spec.onHandled(target, event);\n        });\n    }\n\n    // These make up the \"protected\" API methods that children of this base handler will utilize.\n    qq.extend(protectedApi, {\n        getFileIdFromItem: function(item) {\n            return item.qqFileId;\n        },\n\n        getDisposeSupport: function() {\n            return disposer;\n        }\n    });\n\n    qq.extend(spec, s);\n\n    if (spec.attachTo) {\n        addHandler(spec.attachTo);\n    }\n};\n","/* global qq */\nqq.FileButtonsClickHandler = function(s) {\n    \"use strict\";\n\n    var inheritedInternalApi = {},\n        spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            onDeleteFile: function(fileId) {},\n            onCancel: function(fileId) {},\n            onRetry: function(fileId) {},\n            onPause: function(fileId) {},\n            onContinue: function(fileId) {},\n            onGetName: function(fileId) {}\n        },\n        buttonHandlers = {\n            cancel: function(id) { spec.onCancel(id); },\n            retry:  function(id) { spec.onRetry(id); },\n            deleteButton: function(id) { spec.onDeleteFile(id); },\n            pause: function(id) { spec.onPause(id); },\n            continueButton: function(id) { spec.onContinue(id); }\n        };\n\n    function examineEvent(target, event) {\n        qq.each(buttonHandlers, function(buttonType, handler) {\n            var firstLetterCapButtonType = buttonType.charAt(0).toUpperCase() + buttonType.slice(1),\n                fileId;\n\n            if (spec.templating[\"is\" + firstLetterCapButtonType](target)) {\n                fileId = spec.templating.getFileId(target);\n                qq.preventDefault(event);\n                spec.log(qq.format(\"Detected valid file button click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                handler(fileId);\n                return false;\n            }\n        });\n    }\n\n    qq.extend(spec, s);\n\n    spec.eventType = \"click\";\n    spec.onHandled = examineEvent;\n    spec.attachTo = spec.templating.getFileList();\n\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n// Child of FilenameEditHandler.  Used to detect click events on filename display elements.\nqq.FilenameClickHandler = function(s) {\n    \"use strict\";\n\n    var inheritedInternalApi = {},\n        spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            classes: {\n                file: \"qq-upload-file\",\n                editNameIcon: \"qq-edit-filename-icon\"\n            },\n            onGetUploadStatus: function(fileId) {},\n            onGetName: function(fileId) {}\n        };\n\n    qq.extend(spec, s);\n\n    // This will be called by the parent handler when a `click` event is received on the list element.\n    function examineEvent(target, event) {\n        if (spec.templating.isFileName(target) || spec.templating.isEditIcon(target)) {\n            var fileId = spec.templating.getFileId(target),\n                status = spec.onGetUploadStatus(fileId);\n\n            // We only allow users to change filenames of files that have been submitted but not yet uploaded.\n            if (status === qq.status.SUBMITTED) {\n                spec.log(qq.format(\"Detected valid filename click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                qq.preventDefault(event);\n\n                inheritedInternalApi.handleFilenameEdit(fileId, target, true);\n            }\n        }\n    }\n\n    spec.eventType = \"click\";\n    spec.onHandled = examineEvent;\n\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n// Child of FilenameEditHandler.  Used to detect focusin events on file edit input elements.\nqq.FilenameInputFocusInHandler = function(s, inheritedInternalApi) {\n    \"use strict\";\n\n    var spec = {\n            templating: null,\n            onGetUploadStatus: function(fileId) {},\n            log: function(message, lvl) {}\n        };\n\n    if (!inheritedInternalApi) {\n        inheritedInternalApi = {};\n    }\n\n    // This will be called by the parent handler when a `focusin` event is received on the list element.\n    function handleInputFocus(target, event) {\n        if (spec.templating.isEditInput(target)) {\n            var fileId = spec.templating.getFileId(target),\n                status = spec.onGetUploadStatus(fileId);\n\n            if (status === qq.status.SUBMITTED) {\n                spec.log(qq.format(\"Detected valid filename input focus event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                inheritedInternalApi.handleFilenameEdit(fileId, target);\n            }\n        }\n    }\n\n    spec.eventType = \"focusin\";\n    spec.onHandled = handleInputFocus;\n\n    qq.extend(spec, s);\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n/**\n * Child of FilenameInputFocusInHandler.  Used to detect focus events on file edit input elements.  This child module is only\n * needed for UAs that do not support the focusin event.  Currently, only Firefox lacks this event.\n *\n * @param spec Overrides for default specifications\n */\nqq.FilenameInputFocusHandler = function(spec) {\n    \"use strict\";\n\n    spec.eventType = \"focus\";\n    spec.attachTo = null;\n\n    qq.extend(this, new qq.FilenameInputFocusInHandler(spec, {}));\n};\n","/*globals qq */\n// Handles edit-related events on a file item (FineUploader mode).  This is meant to be a parent handler.\n// Children will delegate to this handler when specific edit-related actions are detected.\nqq.FilenameEditHandler = function(s, inheritedInternalApi) {\n    \"use strict\";\n\n    var spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            onGetUploadStatus: function(fileId) {},\n            onGetName: function(fileId) {},\n            onSetName: function(fileId, newName) {},\n            onEditingStatusChange: function(fileId, isEditing) {}\n        };\n\n    function getFilenameSansExtension(fileId) {\n        var filenameSansExt = spec.onGetName(fileId),\n            extIdx = filenameSansExt.lastIndexOf(\".\");\n\n        if (extIdx > 0) {\n            filenameSansExt = filenameSansExt.substr(0, extIdx);\n        }\n\n        return filenameSansExt;\n    }\n\n    function getOriginalExtension(fileId) {\n        var origName = spec.onGetName(fileId);\n        return qq.getExtension(origName);\n    }\n\n    // Callback iff the name has been changed\n    function handleNameUpdate(newFilenameInputEl, fileId) {\n        var newName = newFilenameInputEl.value,\n            origExtension;\n\n        if (newName !== undefined && qq.trimStr(newName).length > 0) {\n            origExtension = getOriginalExtension(fileId);\n\n            if (origExtension !== undefined) {\n                newName = newName + \".\" + origExtension;\n            }\n\n            spec.onSetName(fileId, newName);\n        }\n\n        spec.onEditingStatusChange(fileId, false);\n    }\n\n    // The name has been updated if the filename edit input loses focus.\n    function registerInputBlurHandler(inputEl, fileId) {\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"blur\", function() {\n            handleNameUpdate(inputEl, fileId);\n        });\n    }\n\n    // The name has been updated if the user presses enter.\n    function registerInputEnterKeyHandler(inputEl, fileId) {\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"keyup\", function(event) {\n\n            var code = event.keyCode || event.which;\n\n            if (code === 13) {\n                handleNameUpdate(inputEl, fileId);\n            }\n        });\n    }\n\n    qq.extend(spec, s);\n\n    spec.attachTo = spec.templating.getFileList();\n\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\n\n    qq.extend(inheritedInternalApi, {\n        handleFilenameEdit: function(id, target, focusInput) {\n            var newFilenameInputEl = spec.templating.getEditInput(id);\n\n            spec.onEditingStatusChange(id, true);\n\n            newFilenameInputEl.value = getFilenameSansExtension(id);\n\n            if (focusInput) {\n                newFilenameInputEl.focus();\n            }\n\n            registerInputBlurHandler(newFilenameInputEl, id);\n            registerInputEnterKeyHandler(newFilenameInputEl, id);\n        }\n    });\n};\n","/*globals qq */\n/**\n * This defines FineUploader mode w/ support for uploading to S3, which provides all the basic\n * functionality of Fine Uploader as well as code to handle uploads directly to S3.\n * This module inherits all logic from FineUploader mode and FineUploaderBasicS3 mode and adds some UI-related logic\n * specific to the upload-to-S3 workflow.  Some inherited options and API methods have a special meaning\n * in the context of the S3 uploader.\n */\n(function() {\n    \"use strict\";\n\n    qq.s3.FineUploader = function(o) {\n        var options = {\n            failedUploadTextDisplay: {\n                mode: \"custom\"\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(options, o, true);\n\n        // Inherit instance data from FineUploader, which should in turn inherit from s3.FineUploaderBasic.\n        qq.FineUploader.call(this, options, \"s3\");\n\n        if (!qq.supportedFeatures.ajaxUploading && options.iframeSupport.localBlankPagePath === undefined) {\n            this._options.element.innerHTML = \"<div>You MUST set the <code>localBlankPagePath</code> property \" +\n                \"of the <code>iframeSupport</code> option since this browser does not support the File API!</div>\";\n        }\n    };\n\n    // Inherit the API methods from FineUploaderBasicS3\n    qq.extend(qq.s3.FineUploader.prototype, qq.s3.FineUploaderBasic.prototype);\n\n    // Inherit public and private API methods related to UI\n    qq.extend(qq.s3.FineUploader.prototype, qq.uiPublicApi);\n    qq.extend(qq.s3.FineUploader.prototype, qq.uiPrivateApi);\n}());\n"]}